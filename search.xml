<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo禁用调试模式</title>
      <link href="/2024/04/09/Hexo%E7%A6%81%E7%94%A8%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F/"/>
      <url>/2024/04/09/Hexo%E7%A6%81%E7%94%A8%E8%B0%83%E8%AF%95%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>网站禁用调试模式是一种常见的网站安全措施，旨在防止攻击者利用浏览器开发工具（如Chrome DevTools）对网站进行恶意攻击或窃取敏感信息。禁用调试模式通过限制或禁止开发工具的使用，增强网站的安全防护。</p><p>实现网站禁用调试模式的技术方法有多种。一种常见的方法是在网页代码中插入JavaScript代码来检测是否打开了开发工具。如果检测到开发工具被打开，则会禁用页面的一些功能，或将页面重定向到其他页面。这种方法的实现相对简单，但也存在一定的被绕过风险。</p><p>另一种更为安全的方法是使用服务器端的技术来检测是否打开了开发工具。服务器端可以检测客户端请求头中的User-Agent字段，以识别浏览器和开发工具的类型。如果检测到请求头中包含开发工具的信息，服务器端可以采取相应的措施来禁止对网站进行攻击。</p><p>本文主要介绍通过网站中引入JavaScript代码，禁止攻击者打开DEvtools实现。</p><h1 id="0x01-实现步骤"><a href="#0x01-实现步骤" class="headerlink" title="0x01 实现步骤"></a>0x01 实现步骤</h1><h2 id="新建bandev-js文件"><a href="#新建bandev-js文件" class="headerlink" title="新建bandev.js文件"></a>新建bandev.js文件</h2><p>在theme对应主题下的新建  source&#x2F;js&#x2F;bandev.js（自行修改提示文字）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//禁止右键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;event.returnValue=false;&quot;</span>) <span class="comment">//禁用右键</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听按键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// f12</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">123</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;F12被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+shift+i</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">shiftKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">73</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;ctrl+shift+i被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+s</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">83</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;ctrl+s被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// ctrl+p</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;ctrl+p被禁用&quot;</span>);</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//禁止先打开控制台然后强行进入</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// 这里我做的是跳转首页，可以根据实际需要进行其他限制</span></span><br><span class="line">    <span class="keyword">var</span> domain = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span>;<span class="comment">// 获取当前域名</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;https://&quot;</span> + domain;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerHeight</span> - <span class="variable language_">window</span>.<span class="property">innerHeight</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerWidth</span> - <span class="variable language_">window</span>.<span class="property">innerWidth</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要分为三个方面的思路：</p><p>1、禁止右键</p><p>2、禁止特定按键</p><p>3、禁止先打开控制台后强制进入</p><p>下面具体说明这三个的实现方法：</p><h2 id="禁止右键"><a href="#禁止右键" class="headerlink" title="禁止右键"></a>禁止右键</h2><p>1、最简单的一行代码搞定：document.oncontextmenu是一个事件处理器，它会在用户尝试在文档上执行右键点击（即打开上下文菜单）时被触发，调用函数，将event.returnValue设置为false默认阻止此事件的发生。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.oncontextmenu = new Function(&quot;event.returnValue=false;&quot;) //禁用右键</span><br></pre></td></tr></table></figure><p>2、但需要注意，上面的代码适用于旧的浏览器（如IE）版本，在更现代的浏览器（如Chrome, Firefox等）中，这种方式可能不会起作用。对于更现代的浏览器，通常会使用event.preventDefault()方法来阻止默认行为。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.oncontextmenu = function(event) &#123;  </span><br><span class="line">    event.preventDefault();  </span><br><span class="line">    return false;  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="禁止特定按键"><a href="#禁止特定按键" class="headerlink" title="禁止特定按键"></a>禁止特定按键</h2><p>防止F12和shift+ctrl+i调起开发者工具；并且禁用ctrl+s和ctrl+s，防止对网页内容本地保存</p><p>监听按键事件，对上述的按件进行监听，如果监听到设置event.returnValue &#x3D; false。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 监听按键</span><br><span class="line">document.onkeydown = function () &#123;</span><br><span class="line">    // f12</span><br><span class="line">    if (window.event &amp;&amp; window.event.keyCode == 123) &#123;</span><br><span class="line">        alert(&quot;F12被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">    // ctrl+shift+i</span><br><span class="line">    if (window.event.ctrlKey &amp;&amp; window.event.shiftKey &amp;&amp; window.event.keyCode == 73) &#123;</span><br><span class="line">        alert(&quot;ctrl+shift+i被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">    // ctrl+s</span><br><span class="line">    if (window.event.ctrlKey &amp;&amp; window.event.keyCode == 83) &#123;</span><br><span class="line">        alert(&quot;ctrl+s被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">     // ctrl+p</span><br><span class="line">    if (window.event.ctrlKey &amp;&amp; window.event.keyCode == 80) &#123;</span><br><span class="line">        alert(&quot;ctrl+p被禁用&quot;);</span><br><span class="line">        event.keyCode = 0;</span><br><span class="line">        event.returnValue = false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="禁止先打开控制台后强制进入"><a href="#禁止先打开控制台后强制进入" class="headerlink" title="禁止先打开控制台后强制进入"></a>禁止先打开控制台后强制进入</h2><p>如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//禁止先打开控制台然后强行进入</span><br><span class="line">function a() &#123;</span><br><span class="line">    var domain = window.location.host;// 获取当前域名</span><br><span class="line">    window.location.href = &quot;https://&quot; + domain;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line">if (window.outerHeight - window.innerHeight &gt; 150) &#123;</span><br><span class="line">    a()</span><br><span class="line">&#125;</span><br><span class="line">if (window.outerWidth - window.innerWidth &gt; 150) &#123;</span><br><span class="line">    a()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//禁止右键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;  </span><br><span class="line">    event.<span class="title function_">preventDefault</span>();  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听按键</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// f12</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">123</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+shift+i</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">shiftKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">73</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ctrl+s</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">83</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// ctrl+p</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">ctrlKey</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">keyCode</span> == <span class="number">80</span>) &#123;</span><br><span class="line">        event.<span class="property">keyCode</span> = <span class="number">0</span>;</span><br><span class="line">        event.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//禁止先打开控制台然后强行进入</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;请关闭控制台后再访问本站！！！&quot;</span>)</span><br><span class="line">    <span class="keyword">var</span> domain = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">host</span>;<span class="comment">// 获取当前域名</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;https://&quot;</span> + domain;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerHeight</span> - <span class="variable language_">window</span>.<span class="property">innerHeight</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">outerWidth</span> - <span class="variable language_">window</span>.<span class="property">innerWidth</span> &gt; <span class="number">150</span>) &#123;</span><br><span class="line">    <span class="title function_">a</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>hexo一键三连后，查看效果</p><p>执行效果如下：</p><ul><li>右键、特定按键打开Devtools，无反应</li><li>先打开控制台后强制进入，会弹窗，强制关闭devtools</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091645594.png" alt="image-20240409164540557">  </p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客安全 </tag>
            
            <tag> 禁用调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clash配置负载均衡</title>
      <link href="/2024/04/08/clash%E9%85%8D%E7%BD%AE%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2024/04/08/clash%E9%85%8D%E7%BD%AE%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在使用Clash节点的时候，有时候觉得自己的节点网速跑不满，速度不够快。这时候，我们可以尝试着使用负载均衡，来让节点的网速拉满。在渗透测试的时候，目标站点那边有WAF，操作没几分钟就被客户把IP ban掉了，如果使用clash挂上游代理，可以切换IP，但每次被封一个就切换一次，太麻烦，这块就可以使用负载均衡的方式，一个IP被ban后，直接自动切换下一个IP。。。</p><h2 id="0x01-准备材料"><a href="#0x01-准备材料" class="headerlink" title="0x01 准备材料"></a>0x01 准备材料</h2><ul><li>Clash 节点配置</li><li>基于原版 Clash、Clash Premium 或 Clash Meta 的客户端</li></ul><h2 id="0x02-配置步骤"><a href="#0x02-配置步骤" class="headerlink" title="0x02 配置步骤"></a>0x02 配置步骤</h2><h3 id="CFW-Parsers"><a href="#CFW-Parsers" class="headerlink" title="CFW Parsers"></a>CFW Parsers</h3><ol><li>打开 Clash For Windows，转到“设置”→“配置”。点击“预处理配置”右边的“Edit”按钮：</li></ol> <ol start="2"><li>在内置编辑器中，粘贴以下内容并保存</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">parsers:</span><br><span class="line">  - reg: &#x27;slbable$&#x27;</span><br><span class="line">    yaml:</span><br><span class="line">      append-proxy-groups:</span><br><span class="line">        - name: ⚖️ 负载均衡-散列</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: consistent-hashing</span><br><span class="line">        - name: ⚖️ 负载均衡-轮询</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: round-robin</span><br><span class="line">      commands:</span><br><span class="line">        - proxy-groups.⚖️ 负载均衡-散列.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+⚖️ 负载均衡-散列</span><br><span class="line">        - proxy-groups.⚖️ 负载均衡-轮询.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+⚖️ 负载均衡-轮询</span><br></pre></td></tr></table></figure> <ol start="3"><li>为了防止正常订阅被污染，请自行修改订阅地址，在其后面加上#slbable即可使用负载均衡</li></ol><p>在订阅地址后面手动输入：#slbable</p> <ol start="4"><li>点击确定回到【配置】界面，右击配置项选择【预处理配置】。如果出现如下界面，就代表负载均衡规则已加载成功：</li></ol><p>出现 reg(slbable$) 代表负载均衡规则加载成功</p> <ol start="5"><li>此时，Clash 已经配置好的节点之间的负载均衡规则。在【代理】-【规则】中出现了【负载均衡-散列】和【负载均衡-轮询】的选项：</li></ol> <p>新增的<strong>【负载均衡-散列】</strong>和<strong>【负载均衡-轮询】</strong>选项卡</p><p>在只需要重启 Clash 并选择好代理，就可以实现负载均衡效果。</p><ol start="6"><li>重启之后，打开【代理】-【规则】，并点击选择【负载均衡-轮询模式】。然后右击窗口右下角的Clash小蓝猫图标，像右侧图片这样选择。选择【系统代理】、然后代理模式选择【规则】。</li></ol><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>关于<strong>系统代理</strong>、<strong>TUN模式</strong>、<strong>混合配置</strong>这些，新手可以这么理解：</p><ul><li>系统代理：就是浏览页面、看视频之类的走代理（魔法上网）。游戏、应用之类的不会走代理</li><li>TUN 模式：就是无论网页、游戏、应用还是什么全部按照规则走代理（魔法上网）。</li><li>混合模式：就是上面两个混一起用。</li></ul><h2 id="0x03-测试"><a href="#0x03-测试" class="headerlink" title="0x03 测试"></a>0x03 测试</h2><p>使用Python脚本来简单测试一下：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&quot;socks5://127.0.0.1:7890&quot;</span>,</span><br><span class="line">           <span class="string">&#x27;https&#x27;</span>: <span class="string">&quot;socks5://127.0.0.1:7890&quot;</span></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">ips = []</span><br><span class="line"><span class="comment"># IP正则表达式，用于提前返回字符串中的IP</span></span><br><span class="line">regex_str = <span class="string">r&quot;\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    response = requests.get(<span class="string">&quot;https://ipinfo.io&quot;</span>, proxies=proxies)</span><br><span class="line">    ip = re.findall(regex_str, response.text)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> ips:</span><br><span class="line">        ips.append(ip)</span><br><span class="line">        <span class="built_in">print</span>(ip)</span><br></pre></td></tr></table></figure> ]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clash </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次国密站点抓包流程</title>
      <link href="/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9B%BD%E5%AF%86%E7%AB%99%E7%82%B9%E6%8A%93%E5%8C%85%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%9B%BD%E5%AF%86%E7%AB%99%E7%82%B9%E6%8A%93%E5%8C%85%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><p>目标站点：针对国密站点，此处举例某金融国密站点</p><p>使用工具：GMproxy、burp</p><p>说明：使用GMproxy和burp联动，抓取国密站点的数据包</p><h2 id="0x01-GMproxy说明与使用"><a href="#0x01-GMproxy说明与使用" class="headerlink" title="0x01 GMproxy说明与使用"></a>0x01 GMproxy说明与使用</h2><h3 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h3><p>为保障重要系统的安全，国家密码管理局要求相应业务系统要做广泛的改造，改用中国标准的公钥密码算法。国密算法的支持已成为业务系统的重要安全保障。</p><p>但随着国密网站的增多，包括很多单位的办公SSL VPN也逐步改造为国密SSL VPN。很多常用浏览器不支持国密SSL网站访问的问题日益突出，如Chrome 、Edge、IE、FireFox火狐 等浏览器均不能访问国密SSL网站。</p><p>“GMProxy”正是来<strong>让任意浏览器支持国密网站的工具</strong>。GMProxy 为绿色软件，下载后解压即可使用。</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791136746-ff3e7b32-d306-473e-ae29-50ebcd3bfd2d.png" alt="img"> </p><h3 id="2-软件下载"><a href="#2-软件下载" class="headerlink" title="2. 软件下载"></a>2. 软件下载</h3><p>最新版的GMProxy：<a href="https://www.gmproxy.cn/GMProxy.msi">https://www.gmproxy.cn/GMProxy.msi</a></p><p>软件签名信息为: <strong>北京水熊虫网络科技有限公司</strong>。</p><p>GMProxy.msi SHA1:0b163a967b96a212a16b74083faf78963b35f375</p><h3 id="3-安装证书"><a href="#3-安装证书" class="headerlink" title="3. 安装证书"></a>3. 安装证书</h3><p>帮助–&gt;安装跟证书，安装到 “受信任的根证书安装机构”下：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791268768-95a26e92-3de4-43a5-9e16-ad2706c20b18.png" alt="img"> </p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791282379-96572723-acf2-49de-9663-c6ebd8b41c96.png" alt="img"> </p><h3 id="4-运行"><a href="#4-运行" class="headerlink" title="4. 运行"></a>4. 运行</h3><p>直接下载后之后，桌面运行快捷方式即可打开：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791353792-3bddc492-f345-415b-8b99-701619f89536.png" alt="img"> </p><h3 id="5-编辑网址列表"><a href="#5-编辑网址列表" class="headerlink" title="5. 编辑网址列表"></a>5. 编辑网址列表</h3><p>只有在国密网址列表中的URL 才会启动国密SSL 转换，无论访问HTTP 还是HTTPS ，GMProxy 都会转换成国密https进行访问。</p> <h3 id="6-备注"><a href="#6-备注" class="headerlink" title="6. 备注"></a>6. 备注</h3><p>这个工具使用有时间限制，会涉及到软件激活：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791537439-c7057d3a-980e-473b-ba7d-734998676fcc.png" alt="img"> </p><h2 id="0x02-普通浏览器访问国密站点"><a href="#0x02-普通浏览器访问国密站点" class="headerlink" title="0x02 普通浏览器访问国密站点"></a>0x02 普通浏览器访问国密站点</h2><p>“GMProxy”正是来<strong>让任意浏览器支持国密网站的工具</strong>。</p><p>1、当我们不使用GMProxy的时候，使用chrome浏览器，会提示如下：</p> <p>2、使用GMProxy来访问国密站点</p><p>（1）首先，在浏览器上设置代理，将流量转发到GMProxy（GMProxy默认端口<strong>18080</strong>）</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791712239-55d4a636-57de-48b0-aed0-6ee97011d573.png" alt="img"> </p><p>（2）开启代理，重新访问国密站点，访问成功 </p>  <h2 id="0x03-burp联动GMProxy"><a href="#0x03-burp联动GMProxy" class="headerlink" title="0x03 burp联动GMProxy"></a>0x03 burp联动GMProxy</h2><p>1、可以通过给BurpSuite 设置<strong>Upstream</strong> 代理 ，实现对国密HTTPS的测试</p><p>（这块将 burp抓到的流量转发到GMProxy）</p><p>User OPtions –&gt; UpStream proxy</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791872735-5d871ae4-6986-4a81-b4be-2fe3656c4cbd.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791895267-edd33709-afc4-4838-91d7-d0bae3435605.png" alt="img"></p><p>2、浏览器正常开启burp代理</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685791967259-3b01339a-6792-4c12-9f01-04217b35a201.png" alt="img"></p><p>3、成功抓取到国密站点流量，并可以正常访问</p>  ]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 抓包 </tag>
            
            <tag> burp </tag>
            
            <tag> 国密站点 </tag>
            
            <tag> GMproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次web站点检测burp证书抓包</title>
      <link href="/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1web%E7%AB%99%E7%82%B9%E6%A3%80%E6%B5%8Bburp%E8%AF%81%E4%B9%A6%E6%8A%93%E5%8C%85/"/>
      <url>/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1web%E7%AB%99%E7%82%B9%E6%A3%80%E6%B5%8Bburp%E8%AF%81%E4%B9%A6%E6%8A%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><p>目标站点：某期货公司web站点</p><p>工具：charles、burp</p><p>说明：web站点开启burp后不能访问，但使用Charle抓包正常。</p><h2 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h2><p>1、访问目标地址：可以正常访问</p> <p>2、开启burp抓包，发现不能成功访问了</p> <p>3、但是使用charles进行抓包，可以成功抓包并访问</p> <p>4、所以，猜测当前站点<strong>有对burp证书进行检测</strong>。</p><h2 id="0x02-解决办法"><a href="#0x02-解决办法" class="headerlink" title="0x02 解决办法"></a>0x02 解决办法</h2><p>双层代理屏蔽掉burp证书，让流量从 <strong>浏览器 –&gt; burp –&gt;Charles</strong>：</p><p>1、首先，在burp上配置上游代理，让burp的流量转发到Charles：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685594650346-5839aa03-99af-4aa1-afe6-9498938f26a5.png" alt="img"></p><p>2、浏览器上正常开启burp代理</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685594688931-6b2f3617-5c35-469f-97bf-a1101a6321ff.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685594700034-7b29b235-5c5b-426f-8d70-2b0d6470301f.png" alt="img"></p><p>3、打开Charles，Charles默认监听8888端口：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685594749250-eb5c2745-9f37-48e2-88fc-57495582528c.png" alt="img"></p><p>4、重新访问地址，可以成功访问并抓包：</p> ]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 抓包 </tag>
            
            <tag> burp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次VPN不走全局代理抓包解决办法</title>
      <link href="/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1VPN%E4%B8%8D%E8%B5%B0%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86%E6%8A%93%E5%8C%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2024/04/07/%E8%AE%B0%E4%B8%80%E6%AC%A1VPN%E4%B8%8D%E8%B5%B0%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86%E6%8A%93%E5%8C%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h3 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h3><p>站点：内网 web 环境</p><p>访问方式：本地下载VPN连接，访问web站点</p><p>问题：使用burp正常抓包，发现没有响应</p><h3 id="0x01-抓包分析"><a href="#0x01-抓包分析" class="headerlink" title="0x01 抓包分析"></a>0x01 抓包分析</h3><p>1、首先，访问站点，使用burp抓包，发现可以抓到请求包，但没有响应</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685506182023-a3694e39-4600-4e06-8f83-bce6920f1421.png" alt="img"> </p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685506250470-b025a779-0718-4b24-9d95-6e3c18d6fe25.png" alt="img"> </p><p>2、同时，开启burp代理抓包后，web站点不能访问；关闭代理，又可以正常访问：</p><ul><li>关闭代理</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685506349900-7fbb17fc-9bda-4454-b977-5f87fc6f9a75.png" alt="img"> </p><ul><li>开启代理</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685507580730-a1e5ad74-1c69-41ca-99b7-e32dfc2c2c4f.png" alt="img"> </p><p>3、通过wireshark抓包分析，可以看到，当burp抓包重放后，流量不再经过我们的VPN，而是在发送到了当前WIFI所在内网中：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685507925816-7cdafb0b-2af8-4f7f-b94b-18db76d36e58.png" alt="img"> </p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685507963760-1baf8e5a-18e0-43cc-8e0c-0849ce60d1c5.png" alt="img"> </p><p>这块的 10.xx.xx.48为目标测试地址；10.101.22.62为当前wifi地址。</p><p>4、初步猜测，是easyconnect VPN不是全局代理，只是针对部分exe类应用，如浏览器(chrome.exe)、cmd.exe等做了代理。</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685508467947-789a2546-914a-4059-982a-ade5f626ec37.png" alt="img"> </p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685508349290-5d47fd70-74d4-4d48-b071-d315b467106a.png" alt="img"> </p><h3 id="0x02-解决办法"><a href="#0x02-解决办法" class="headerlink" title="0x02 解决办法"></a>0x02 解决办法</h3><p>使用端口转发工具做端口转发。让流量的一个走向为：浏览器-&gt;burp-&gt;端口转发-&gt;VPN-&gt;服务端</p><ul><li>端口转发工具：ew（其它类似工具也可以）</li><li>转发代理：走socks5代理</li></ul><p>1、使用ew设置全局端口转发</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685508725893-f498a991-ca40-4f1c-9ce4-a53b999fceb6.png" alt="img"> </p><p>2、burp配置socks代理</p><p>user options –&gt; socks proxy，配置同ew即可</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685508759947-578f1e9f-3e74-4699-870b-b9d754238d9f.png" alt="img"> </p><p>3、浏览器开启http代理，正常请求</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685508822540-2f8e2d17-0099-4e02-8808-e60959caa24e.png" alt="img"> </p><p>4、使用burp成功抓包</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2167914/1685508878419-22eac50a-de54-4122-84b2-5bbb6ad2fb18.png" alt="img"> </p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 抓包 </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>unveilr反编译微信小程序</title>
      <link href="/2024/04/06/unveilr%E5%8F%8D%E7%BC%96%E8%AF%91%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2024/04/06/unveilr%E5%8F%8D%E7%BC%96%E8%AF%91%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/> <p>针对与微信小程序，网上的工具比较多，但个人感觉比较好用的是 unveilr.exe。下面针对这个工具主要介绍一下使用方法。</p><h2 id="定位小程序中加载的-wxapkg文件"><a href="#定位小程序中加载的-wxapkg文件" class="headerlink" title="定位小程序中加载的.wxapkg文件"></a>定位小程序中加载的.wxapkg文件</h2><p>1、微信设置中找到文件夹所在位置。</p> <p>2、定位过去，找到APPlet文件夹，该文件夹下面存放的是小程序加载后的缓存文件。</p>  <p>3、由于可能之前加载过其他的小程序，在定位目标程序之前，可以将APPlet文件夹下内容清空</p> <p>4、加载目标程序，这块以【xxx就业】小程序为例</p> <p>5、获取到加载的小程序.wxakg文件</p> <h2 id="unveilr反编译-wxakg文件"><a href="#unveilr反编译-wxakg文件" class="headerlink" title="unveilr反编译.wxakg文件"></a>unveilr反编译.wxakg文件</h2><p>1、使用如下命令，对目标小程序进行反编译</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unveilr.exe &quot;xxxx\Applet\wxff689bf2602ab223\12&quot;   //这块直接写文件夹名称就行，会自动读取加载的</span><br></pre></td></tr></table></figure> <h2 id="微信开发者助手加载进行调试"><a href="#微信开发者助手加载进行调试" class="headerlink" title="微信开发者助手加载进行调试"></a>微信开发者助手加载进行调试</h2><p>1、成功加载了小程序，但是有个报错：”不在以下 request 合法域名列表中”</p> <p>解决办法：详情-&gt;本地设置，勾选上不校验合法域名：</p> <p>重新加载小程序，发现没有报错了！</p> <p>2、点击【职位】模块，报错 “ Cannot read property ‘length’ of undefined”</p> <p>解决办法：参考如下链接</p><p><a href="https://developers.weixin.qq.com/community/develop/doc/000e2e36b6c8106a882a514495d000">https://developers.weixin.qq.com/community/develop/doc/000e2e36b6c8106a882a514495d000</a></p><p>使用 res.data.result 前 ，先使用 if(res.data&amp;&amp;res.data.result) 进行空值判断，为真后继续你的逻辑处理。</p><p><a href="https://blog.csdn.net/lily__an/article/details/89226181">https://blog.csdn.net/lily__an/article/details/89226181</a></p> <p>按照这种解决办法，可以修改JS中的代码如下：</p> <p>重新加载，就会发现不再报错了！</p> <h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>排错思路，就是哪里有问题解决哪里的问题。</p><p>这种一般网上找解决办法都是有的，百度就ok！</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> unveilr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo开始写博客</title>
      <link href="/2024/03/26/hexo%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/03/26/hexo%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><p>命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new [layout] title  或  hexo n [layout] title</span><br></pre></td></tr></table></figure><p>创建文章前要先选定模板，在hexo中也叫做布局。hexo支持三种布局（layout）：post(默认)、draft、page。</p><p>这块先介绍如何使用已有布局，后面还将会介绍如何自定义布局。</p><p>在博客目录下输入以下命令时，会默认使用post布局，然后自动在source_posts目录生成一个text.md文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n text</span><br></pre></td></tr></table></figure><p>当然，也可以执行布局</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n [layout_name] draft1</span><br></pre></td></tr></table></figure><p>该命令创建了一个使用特定布局的名为draft1的文章。</p><p>打开之前创建的test.md文件，可以看到文章开头包含如下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: text1</span><br><span class="line">author: luyao</span><br><span class="line">date: 2020-04-10 04:13:36</span><br><span class="line">tags: hexo</span><br><span class="line">categories: blog</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>如何自定义布局呢？实际上，布局是一个markdown文件，它们保存在scaffolds&#x2F;目录下，可以看到hexo自带的三种布局其实就是三个.md文件：</p> <p>每一个文件中的内容实际只包含一个Front-matter。</p> <p>因此，可以在这里修改布局或者建立新的布局，然后创建文章时使用这些布局。</p><h1 id="开始写文章"><a href="#开始写文章" class="headerlink" title="开始写文章"></a>开始写文章</h1><p>两个虚线之间的内容就是叫Front-matter，主要是文章的配置，具体配置如下，不同主题配置不一样，这块以<strong>Matery</strong>主题为例</p><p>Front-matter 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 title 和 date 的值。</p><table><thead><tr><th align="center"><strong>配置选项</strong></th><th align="center"><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td align="center">title</td><td align="center">Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td align="center">date</td><td align="center">文件创建时间日期</td><td>建议使用发布日期时间</td></tr><tr><td align="center">author</td><td align="center">根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td align="center">img</td><td align="center">featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td align="center">top</td><td align="center">true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td align="center">cover</td><td align="center">false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="center">coverImg</td><td align="center">无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="center">password</td><td align="center">无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td align="center">toc</td><td align="center">true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td align="center">mathjax</td><td align="center">false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td align="center">summary</td><td align="center">无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="center">categories</td><td align="center">无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="center">tags</td><td align="center">无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td align="center">keywords</td><td align="center">文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td align="center">reprintPolicy</td><td align="center">cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><p>以下为文章的 Front-mattre示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo开始写博客</span><br><span class="line">date: 2024-03-26 09:25:00</span><br><span class="line">author: Muhe</span><br><span class="line">img: /source/images/xxx.jpg</span><br><span class="line">top: true</span><br><span class="line">cover: true</span><br><span class="line">coverImg: /images/1.jpg</span><br><span class="line">password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="line">toc: false</span><br><span class="line">mathjax: false</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown</span><br><span class="line">tags:</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>【Tips】发现一个问题，每次hexo n的时候Front-matter中内容少的可怜，那怎么修改默认的格式呢？只要去主目录下找到scaffolds文件夹下找到一个post.md文件修改即可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"># 标题</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">author: 无敌小小弋</span><br><span class="line"># 简述</span><br><span class="line">summary:</span><br><span class="line"># 使用自定义封面 </span><br><span class="line">img: </span><br><span class="line"># 是否置顶true，或者去掉</span><br><span class="line">top: true</span><br><span class="line"># 轮播</span><br><span class="line">cover:</span><br><span class="line"># 轮播图</span><br><span class="line">coverImg: </span><br><span class="line"># 标签</span><br><span class="line">tags: </span><br><span class="line"># 分类</span><br><span class="line">categories: </span><br><span class="line"># 是否加密文章，SHA256加密</span><br><span class="line">password: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="文章插入图片"><a href="#文章插入图片" class="headerlink" title="文章插入图片"></a>文章插入图片</h1><p>图片几乎是写博客时不可或缺的元素。在hexo中插入图片需要先进行一些设置，不过在介绍那之前让我们先回顾一下markdown引用图片的语法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![alt](path [title])</span><br></pre></td></tr></table></figure><ul><li>path是必选的，表示图片的路径，可使用绝对或相对路径。</li><li>alt是可选的，是图片无法加载时的替代描述文本。</li><li>title是可选的，是图片的标题。</li></ul><p>在hexo中，引用图片不是简单的使用上述语法即可，你还需要为图片制定一个<strong>资源文件夹</strong>。具体来说，hexo中文章引用图片有两种方式：</p><ol><li><p>将所有文章的图片放到source&#x2F;images 文件夹中（没有就自己创建一个），然后使用markdown语句引用图片。这种方法一般适用于包含少量图片的hexo项目，但是当文章数量增多，图片数也随之增加后，该管理方式就显得有些混乱。因此我个人推荐你使用下面一种方法。</p></li><li><p>为每一个文章创建一个资源文件夹，将图片保存其中，具体步骤如下：</p><ul><li><p>在博客根目录打开_config.yml文件做如下修改：<br>yaml post_asset_folder: true</p></li><li><p>然后使用hexo n text命令后创建一个使用post布局名为text的文章，你将发现hexo在\source_post文件夹下创建了一个\text文件夹以及同名的.md文件：</p></li><li><p>最后就可以打开text.md文件进行编辑了，你可以把要引用的图片放到同名文件夹下，然后使用相对路径进行引用。<strong>注意</strong>：请不要自作聪明将text.md文件移动到同名文件夹下，经本人尝试，发现这样会导致图片无法正常引用。</p></li></ul></li></ol><p><strong>Tip</strong>：如果你使用的是<a href="https://link.zhihu.com/?target=https://www.typora.io/">Typora</a>编辑器，可以在编辑器的文件&#x2F;偏好设置&#x2F;图像中进行如下设置：</p> <p>这样每次直接拷贝到文章的截图将会被自动保存到同名的文件夹下，非常方便~</p><p>但有可能设置了上面的相关配置后，图片依旧加载不出来，下面是两种解决办法：</p><h2 id="本地图片加载不出来"><a href="#本地图片加载不出来" class="headerlink" title="本地图片加载不出来"></a>本地图片加载不出来</h2><p>插件<a href="https://link.zhihu.com/?target=https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>解决了这个问题。可以直接用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>hexo三连后，本地加载的图片就可以正常显示了。</p><h2 id="在线图片加载不出来"><a href="#在线图片加载不出来" class="headerlink" title="在线图片加载不出来"></a>在线图片加载不出来</h2><p>这个解决方法其实很简单，只需要文章的头部如下图所示位置添加<meta name="referrer" content="no-referrer"/>这一句话就可以完美解决问题</p> <h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;video width=&quot;480&quot; height=&quot;320&quot; controls&gt;</span><br><span class="line">     &lt;source src=video_path&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><ul><li>video_path是视频的存储路径（含双引号），你可以把视频放在文章的同名资源文件夹下，然后用相对路径方式引用。</li><li>width和height是视频区块的宽度和高度，可自定义。</li></ul><h1 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h1><p>删除文章的过程一样也很简单，先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。具体来说，以最开始默认形成的helloworld.md这篇文章为例。</p><p>首先进入到source &#x2F; _post 文件夹中，找到helloworld.md文件，在本地直接执行删除。然后依次执行hexo g，hexo d，再去主页查看你就会发现你的博客上面已经空空如也了，这就是如何删除文章的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义博客主题相关设置</title>
      <link href="/2024/03/22/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/"/>
      <url>/2024/03/22/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="安装butterfly主题"><a href="#安装butterfly主题" class="headerlink" title="安装butterfly主题"></a>安装butterfly主题</h1><p>首先，在hexo的根目录下使用如下命令下载主题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>npm安装pug 和 stylus 渲染器。不然会报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>修改项目根目录下的_config.yml文件（称为站点配置文件），开启主题。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>【建议】</p><p>为了减少升级&#x2F;修改主题带来的不便，可以将主题目录下（&#x2F;blog&#x2F;theme）的配置文件 _config.yml 重命名为 _config.butterfly.yml，复制到 Hexo 根目录下与_config.yml同级。</p><p>Hexo会自动合并主题中的_config.yml和 _config.butterfly.yml ，如果存在同名配置，会使用_config.butterfly.yml的配置，其优先度较高。所以像和博客网址相关联的固定资料可以设置在_config.yml中，比如博客的标题、作者信息和邮箱等等资料，而和主题样式相关的配置放在 _config.butterfly.yml 中，那么在将来你想换一个主题是很方便的。</p> <h1 id="导航栏菜单"><a href="#导航栏菜单" class="headerlink" title="导航栏菜单"></a>导航栏菜单</h1><p>修改主题配置文件 _config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: / || fas fa-home</span><br><span class="line">  博文 || fa fa-graduation-cap:</span><br><span class="line">    分类: /categories/ || fa fa-archive</span><br><span class="line">    标签: /tags/ || fa fa-tags</span><br><span class="line">    归档: /archives/ || fa fa-folder-open</span><br><span class="line">  生活 || fas fa-list:</span><br><span class="line">    分享: /shuoshuo/ || fa fa-comments-o</span><br><span class="line">    相册: /photos/ || fa fa-camera-retro</span><br><span class="line">    音乐: /music/ || fa fa-music</span><br><span class="line">    影视: /movies/ || fas fa-video</span><br><span class="line">  友链: /links/ || fa fa-link</span><br><span class="line">  留言板: /comment/ || fa fa-paper-plane</span><br><span class="line">  #留言板: /messageboard/ || fa fa-paper-plane</span><br><span class="line">  关于笔者: /about/ || fas fa-heart  </span><br></pre></td></tr></table></figure> <h1 id="代码块显示"><a href="#代码块显示" class="headerlink" title="代码块显示"></a>代码块显示</h1><p>在_config.butterfly.yml配置文件中可以配置如下功能。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_theme: mac  #  darker / pale night / light / ocean / mac / mac light / false 代码主题</span><br><span class="line">highlight_copy: true # 复制按钮</span><br><span class="line">highlight_lang: false # 是否显示代码语言</span><br><span class="line">highlight_shrink: false # true: 代码块默认不展开 / false: 代码块默认展开 | none: 展开并隐藏折叠按钮</span><br><span class="line">highlight_height_limit: false # unit: px</span><br><span class="line">code_word_wrap: true #代码自动换行，关闭滚动条</span><br></pre></td></tr></table></figure><p>同时将站点默认配置文件_config.yml的highlight设置为false。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: false</span><br><span class="line">  line_number: false</span><br><span class="line">  auto_detect: false</span><br></pre></td></tr></table></figure> <h1 id="本地搜索功能"><a href="#本地搜索功能" class="headerlink" title="本地搜索功能"></a>本地搜索功能</h1><p>如果要使用本地搜索功能，需要安装 hexo-generator-search 插件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>修改_config.butterfly.yml 配置文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot; # 如果没有查到内容相关内容显示</span><br></pre></td></tr></table></figure> <h1 id="修改副标题"><a href="#修改副标题" class="headerlink" title="修改副标题"></a>修改副标题</h1><p>修改主题配置文件 _config.butterfly.yml:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># the subtitle on homepage (主頁subtitle)</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (开启打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: true</span><br><span class="line">  # source調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用搏天api的隨機語錄（簡體）</span><br><span class="line">  # source: 2  調用一言網的一句話（簡體）</span><br><span class="line">  # source: 3  調用一句網（簡體）</span><br><span class="line">  # source: 4  調用今日詩詞（簡體）</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果有英文逗号&#x27; , &#x27;,请使用转义字元 &amp;#44;</span><br><span class="line">  # 如果有英文双引号&#x27; &quot; &#x27;,请使用转义字元 &amp;quot;</span><br><span class="line">  # 开头不允許转义字元，如需要，请把整個句子用双引号包住</span><br><span class="line">  # 如果关闭打字效果，subtitle只会现示sub的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - 从来没有真正的绝境，只有心灵的迷途</span><br><span class="line">    - Never really desperate，only the lost of the soul</span><br><span class="line">    - 没有选择会是唯一的路</span><br><span class="line">    - No choice will be the only way</span><br></pre></td></tr></table></figure>  <h1 id="图片设置"><a href="#图片设置" class="headerlink" title="图片设置"></a>图片设置</h1><p>图片可以用云链接或者本地路径：&#x2F;themes&#x2F;butterfly&#x2F;source&#x2F;img。修改主题配置文件_config.butterfly.yml：</p><h2 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Favicon（网站图）</span><br><span class="line">favicon: /img/favicon.png</span><br></pre></td></tr></table></figure> <h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  img: /img/avatar.jpg #图片路径</span><br><span class="line">  effect: false #头像会一直转圈  </span><br></pre></td></tr></table></figure> <h2 id="主页封面图片"><a href="#主页封面图片" class="headerlink" title="主页封面图片"></a>主页封面图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># The banner image of home page</span><br><span class="line">index_img: /img/background.jpg</span><br></pre></td></tr></table></figure> <h2 id="文章详情页顶部图片"><a href="#文章详情页顶部图片" class="headerlink" title="文章详情页顶部图片"></a>文章详情页顶部图片</h2><p>当没有在front-matter设置top_img和cover的情况下会显示该图</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># If the banner of page not setting, it will show the top_img</span><br><span class="line">default_top_img: /img/default_top_img.jpg </span><br></pre></td></tr></table></figure> <h2 id="归档页底部图片"><a href="#归档页底部图片" class="headerlink" title="归档页底部图片"></a>归档页底部图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#归档子标签页图片</span><br><span class="line"># The banner image of archive page</span><br><span class="line">archive_img: /img/archive.jpg</span><br></pre></td></tr></table></figure><h2 id="tag页顶部图片"><a href="#tag页顶部图片" class="headerlink" title="tag页顶部图片"></a>tag页顶部图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#tag页（标签页）</span><br><span class="line">tag_img: /img/tag_img.jpg</span><br></pre></td></tr></table></figure><h2 id="category页顶部图片"><a href="#category页顶部图片" class="headerlink" title="category页顶部图片"></a>category页顶部图片</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#category页</span><br><span class="line">category_img: /img/category_img.jpg</span><br></pre></td></tr></table></figure><h2 id="统一文章封面"><a href="#统一文章封面" class="headerlink" title="统一文章封面"></a>统一文章封面</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cover:</span><br><span class="line">  index_enable: true #  是否展示文章封面</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  position: both # 封面展示的位置 left/right/both</span><br><span class="line">  # 当没有设置cover时，默认展示的文章封面</span><br><span class="line">  default_cover:</span><br><span class="line">    # 当配置多张图片时，会随机选择一张作为 cover. 此时写法为</span><br><span class="line">    - https:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br><span class="line">    - http:</span><br></pre></td></tr></table></figure><p>如果需要为每一篇文章设置不同的封面，可以在文章的md文件中添加配置。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World        # 标题</span><br><span class="line">tags: [hello]             # 标签</span><br><span class="line">categories:               # 分类</span><br><span class="line">description: hello word~  # 描述</span><br><span class="line">top_img: /img/hello-1.png # 顶部背景图</span><br><span class="line">cover: /img/hello-1.png   # 文章封面</span><br><span class="line">---</span><br></pre></td></tr></table></figure> <h2 id="错误页面"><a href="#错误页面" class="headerlink" title="错误页面"></a>错误页面</h2><p>配置了该属性后会替换无法展示的图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Replace Broken Images (替換無法顯示的圖片)</span><br><span class="line">error_img:</span><br><span class="line">  flink: /img/friend_404.gif</span><br><span class="line">  post_page: /img/404.jpg</span><br></pre></td></tr></table></figure><h1 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h1><p>新增hexo-lazyload-image模块</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure><p>在主目录配置文件_config.yml增加配置</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  loadingImg: /img/loading.gif</span><br></pre></td></tr></table></figure><p>这个就是图片没加载出来的时候，出现一个动图转转转的文章页样式 </p> <h1 id="图片放大查看"><a href="#图片放大查看" class="headerlink" title="图片放大查看"></a>图片放大查看</h1><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">medium_zoom: <span class="literal">false</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="版权样式"><a href="#版权样式" class="headerlink" title="版权样式"></a>版权样式</h1><p>修改主题配置文件_config.butterfly.yml</p><p>复制的内容后面加上版权信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># copy settings</span><br><span class="line"># copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span><br><span class="line">copy:</span><br><span class="line">  enable: true # 是否开启网站复制权限</span><br><span class="line">  copyright:  # 复制的内容后面加上版权信息</span><br><span class="line">    enable: false  # 是否开启复制版权信息添加</span><br><span class="line">    limit_count: 50 # 字数限制，当复制文字大于这个字数限制时</span><br></pre></td></tr></table></figure><p>文章版权信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: true</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br></pre></td></tr></table></figure> <h1 id="侧边栏样式"><a href="#侧边栏样式" class="headerlink" title="侧边栏样式"></a>侧边栏样式</h1><p>修改主题配置文件_config.butterfly.yml</p><p>调整侧边栏出现位置</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">aside:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  hide: <span class="literal">false</span></span><br><span class="line">  button: <span class="literal">true</span></span><br><span class="line">  mobile: <span class="literal">true</span> # display on mobile</span><br><span class="line">  position: right # left or right </span><br></pre></td></tr></table></figure><p>个人信息</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">   fab fa-github: https:<span class="comment">//github.com/ || Github</span></span><br><span class="line">   fa fa-book-open: https:<span class="comment">//blog.csdn.net/mjh1667002013 || CSDN</span></span><br><span class="line">   fab fa-qq:  tencent:<span class="comment">//AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=728831102&amp;website=www.oicqzone.com || QQ</span></span><br><span class="line">   fas fa-envelope-open-text: mailto:<span class="number">1976083684</span><span class="meta">@qq</span>.com || Email</span><br></pre></td></tr></table></figure><h1 id="公告栏设置"><a href="#公告栏设置" class="headerlink" title="公告栏设置"></a>公告栏设置</h1><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">card_announcement:</span><br><span class="line">    enable: <span class="literal">true</span></span><br><span class="line">    content: This is my Blog #修改公告栏信息</span><br></pre></td></tr></table></figure> <h1 id="TOC目录"><a href="#TOC目录" class="headerlink" title="TOC目录"></a>TOC目录</h1><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># toc (目錄)</span><br><span class="line">toc:</span><br><span class="line">  post: <span class="literal">true</span></span><br><span class="line">  page: <span class="literal">false</span></span><br><span class="line">  number: <span class="literal">false</span></span><br><span class="line">  expand: <span class="literal">true</span> # 是否展开</span><br><span class="line">  style_simple: <span class="literal">false</span> # <span class="keyword">for</span> post</span><br><span class="line">  scroll_percent: <span class="literal">true</span></span><br></pre></td></tr></table></figure> <h1 id="背景美化"><a href="#背景美化" class="headerlink" title="背景美化"></a>背景美化</h1><p>修改主题配置文件 _config.butterfly.yml</p><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>有冒光特效、烟火特效、爱心特效、文字特效，选择其中一个将enable设置为true就可以。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Typewriter <span class="title function_">Effect</span> <span class="params">(打字效果)</span></span><br><span class="line"># https:<span class="comment">//github.com/disjukr/activate-power-mode</span></span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  colorful: <span class="literal">true</span> # open particle <span class="title function_">animation</span> <span class="params">(冒光特效)</span></span><br><span class="line">  shake: <span class="literal">true</span> #  open <span class="title function_">shake</span> <span class="params">(抖动特效)</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"># Mouse click effects: fireworks (鼠标点击效果:萤火特效)</span><br><span class="line">fireworks:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  zIndex: <span class="number">9999</span> # -<span class="number">1</span> or <span class="number">9999</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"># Mouse click effects: Heart <span class="title function_">symbol</span> <span class="params">(鼠标点击效果: 爱心)</span></span><br><span class="line">click_heart:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"># Mouse click effects: words (鼠标点击效果: 文字)</span><br><span class="line">ClickShowText:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  text:</span><br><span class="line">     - 富强</span><br><span class="line">     - 民主</span><br><span class="line">     - 文明</span><br><span class="line">     - 和谐</span><br><span class="line">     - 平等</span><br><span class="line">     - 公正</span><br><span class="line">     - 法治</span><br><span class="line">     - 爱国</span><br><span class="line">     - 敬业</span><br><span class="line">     - 诚信</span><br><span class="line">     - 友善</span><br><span class="line">  fontSize: 15px</span><br><span class="line">  random: <span class="literal">true</span></span><br><span class="line">  mobile: <span class="literal">true</span></span><br></pre></td></tr></table></figure>  <h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Typewriter <span class="title function_">Effect</span> <span class="params">(打字效果)</span></span><br><span class="line"># https:<span class="comment">//github.com/disjukr/activate-power-mode</span></span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  colorful: <span class="literal">true</span> # open particle <span class="title function_">animation</span> <span class="params">(冒光特效)</span></span><br><span class="line">  shake: <span class="literal">true</span> #  open <span class="title function_">shake</span> <span class="params">(抖动特效)</span></span><br><span class="line">  mobile: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Background <span class="title function_">effects</span> <span class="params">(背景特效)</span></span><br><span class="line"># canvas_ribbon (静止彩带)</span><br><span class="line"># See: https:<span class="comment">//github.com/hustcc/ribbon.js</span></span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  size: <span class="number">150</span></span><br><span class="line">  alpha: <span class="number">0.6</span></span><br><span class="line">  zIndex: -<span class="number">1</span></span><br><span class="line">  click_to_change: <span class="literal">false</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line"># Fluttering <span class="title function_">Ribbon</span> <span class="params">(动态彩带)</span></span><br><span class="line">canvas_fluttering_ribbon:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br><span class="line">#星空特效</span><br><span class="line"># canvas_nest</span><br><span class="line"># https:<span class="comment">//github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  color: <span class="string">&#x27;0,0,255&#x27;</span> #color of lines, <span class="keyword">default</span>: <span class="string">&#x27;0,0,0&#x27;</span>; RGB values: (R,G,B).(note: use <span class="string">&#x27;,&#x27;</span> to separate.)</span><br><span class="line">  opacity: <span class="number">0.7</span> # the opacity of <span class="title function_">line</span> <span class="params">(<span class="number">0</span>~<span class="number">1</span>)</span>, <span class="keyword">default</span>: <span class="number">0.5</span>.</span><br><span class="line">  zIndex: -<span class="number">1</span> # z-index property of the background, <span class="keyword">default</span>: -<span class="number">1.</span></span><br><span class="line">  count: <span class="number">99</span> # the number of lines, <span class="keyword">default</span>: <span class="number">99.</span></span><br><span class="line">  mobile: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="自定义背景主题色"><a href="#自定义背景主题色" class="headerlink" title="自定义背景主题色"></a>自定义背景主题色</h2><p>可以修改部分的UI颜色，没测试过</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># theme_color:</span><br><span class="line">#   enable: <span class="literal">true</span></span><br><span class="line">#   main: <span class="string">&quot;#49B1F5&quot;</span></span><br><span class="line">#   paginator: <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">#   button_hover: <span class="string">&quot;#FF7242&quot;</span></span><br><span class="line">#   text_selection: <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">#   link_color: <span class="string">&quot;#99a9bf&quot;</span></span><br><span class="line">#   meta_color: <span class="string">&quot;#858585&quot;</span></span><br><span class="line">#   hr_color: <span class="string">&quot;#A4D8FA&quot;</span></span><br><span class="line">#   code_foreground: <span class="string">&quot;#F47466&quot;</span></span><br><span class="line">#   code_background: <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">#   toc_color: <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">#   blockquote_padding_color: <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">#   blockquote_background_color: <span class="string">&quot;#49b1f5&quot;</span></span><br></pre></td></tr></table></figure><h2 id="渐变背景"><a href="#渐变背景" class="headerlink" title="渐变背景"></a>渐变背景</h2><p>默认显示白色，可设置图片或者颜色<br>修改主题配置文件_config.butterfly.yml：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">background:</span><br></pre></td></tr></table></figure><p>设置渐变色步骤：</p><ol><li>在\Butterfly\source\css\目录下创建css文件 background.css：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#web_bg &#123;</span><br><span class="line">  background: -webkit-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: -moz-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: -o-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: -ms-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">  background: linear-gradient(</span><br><span class="line">    90deg,</span><br><span class="line">    rgba(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    rgba(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15</span>%,</span><br><span class="line">    rgba(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30</span>%,</span><br><span class="line">    rgba(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44</span>%,</span><br><span class="line">    rgba(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58</span>%,</span><br><span class="line">    rgba(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72</span>%,</span><br><span class="line">    rgba(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86</span>%,</span><br><span class="line">    rgba(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100</span>%</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改配置文件_config.butterfly.yml的引入方式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Inject</span><br><span class="line"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">     - &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/background.css&quot;</span>&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=<span class="string">&quot;xxxx&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果背景色不生效，设置_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Website <span class="title function_">Background</span> <span class="params">(設置網站背景)</span></span><br><span class="line"># can set it to color or <span class="title function_">image</span> <span class="params">(可設置圖片 或者 顔色)</span></span><br><span class="line"># The formal of image: url(http:<span class="comment">//xxxxxx.com/xxx.jpg)</span></span><br><span class="line">background: <span class="string">&#x27;#efefef&#x27;</span></span><br></pre></td></tr></table></figure> <h1 id="footer背景"><a href="#footer背景" class="headerlink" title="footer背景"></a>footer背景</h1><p>footer 的背景，当设置 false 时，将与主题色一致。修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># footer是否显示图片背景(与top_img一致)</span><br><span class="line">footer_bg: <span class="literal">true</span></span><br></pre></td></tr></table></figure>  <h1 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h1><p>安装统计组件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save or yarn add hexo-wordcount</span><br></pre></td></tr></table></figure><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># wordcount (字數統計)</span><br><span class="line">wordcount:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  post_wordcount: <span class="literal">true</span></span><br><span class="line">  min2read: <span class="literal">true</span></span><br><span class="line">  total_wordcount: <span class="literal">true</span></span><br></pre></td></tr></table></figure> <h1 id="添加音乐播放器"><a href="#添加音乐播放器" class="headerlink" title="添加音乐播放器"></a>添加音乐播放器</h1><h2 id="插件安装与配置"><a href="#插件安装与配置" class="headerlink" title="插件安装与配置"></a>插件安装与配置</h2><p>安装 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a> 这款插件。执行如下指令：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>插件配置方式为修改Hexo 的配置文件中进行如下修改。就是你的<a href="https://so.csdn.net/so/search?q=Hexo&spm=1001.2101.3001.7020">Hexo</a>根目录下的_config.yml文件。</p><p>这块直接搜，没有在Hexo目录下的_config.yml文件中找到，将如下内容添加：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: <span class="literal">true</span></span><br><span class="line">  asset_inject: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>主题配置文件_config.butterfly.yml中开启aplayerInject：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Inject the css and <span class="title function_">script</span> <span class="params">(aplayer/meting)</span></span><br><span class="line">aplayerInject:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  per_page: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>下面介绍两种常见的用法：</p><h2 id="普通页面播放器"><a href="#普通页面播放器" class="headerlink" title="普通页面播放器"></a>普通页面播放器</h2><p>在博客音乐播放页面（&#x2F;source&#x2F;music&#x2F;index.md）中添加如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% meting <span class="string">&quot;8872308188&quot;</span> <span class="string">&quot;netease&quot;</span> <span class="string">&quot;playlist&quot;</span> <span class="string">&quot;autoplay&quot;</span> <span class="string">&quot;mutex:false&quot;</span> <span class="string">&quot;listmaxheight:400px&quot;</span> <span class="string">&quot;preload:none&quot;</span> <span class="string">&quot;theme:#ad7a86&quot;</span>%&#125;</span><br></pre></td></tr></table></figure><p>常用的选项如下所示:</p><p><strong>server可选</strong>：netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。建议网易云</p><p><strong>type可选</strong>：song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）。添加单曲选的歌曲，歌单选择playlist，可以自行尝试。</p><p><strong>id获取示例</strong>: 打开网易云音乐，选择喜欢的歌单，在网页版打开，获取歌单list，填入即可。使用的时候将上边的ID号换为自己喜欢的歌单即可。注意歌单中不能包括VIP音乐，否则无法解析。建议单独建立一个歌单，以后有喜欢的音乐添加进去，网页也会自动同步添加。</p> <p>lrcType设置为 -1默认显示歌词，放在fixed模式下比较合适。</p> <h2 id="全局吸底Aplayer模式"><a href="#全局吸底Aplayer模式" class="headerlink" title="全局吸底Aplayer模式"></a>全局吸底Aplayer模式</h2><p>把 aplayer代码 插入到主题配置文件_config.butterfly.yml的 inject.bottom 即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;div class=<span class="string">&quot;aplayer no-destroy&quot;</span> data-id=<span class="string">&quot;7422861869&quot;</span> data-server=<span class="string">&quot;netease&quot;</span> data-type=<span class="string">&quot;playlist&quot;</span> data-fixed=<span class="string">&quot;true&quot;</span> data-autoplay=<span class="string">&quot;true&quot;</span> data-lrcType=<span class="string">&quot;-1&quot;</span>&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>需要修改的参数就只有data-id、data-server、data-type、data-autoplay&#x3D;”true”、data-lrcType&#x3D;”-1”一些常用的参数，可以自行根据需要修改。</p><p>最后，如果你想切换页面时，音乐不会中断。请把主题配置文件的 pjax 设为 true即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pjax:</span><br><span class="line"> enable: ture</span><br><span class="line"> exclude:</span><br></pre></td></tr></table></figure> <h1 id="创建主题图库"><a href="#创建主题图库" class="headerlink" title="创建主题图库"></a>创建主题图库</h1><p>执行如下命令，创建photos页面</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo n page photos     #创建你的页面   </span><br></pre></td></tr></table></figure><p>在index.md文件的 Front-matter 中添加如下内容（不现实侧边栏和评论区）</p> <p>添加图库集合页</p><p>图库集合页面就是普通的页面，比如上面创建的&#x2F;photos&#x2F;index.md页面，下面将其设置成一个图库集合页面！设置图库集合页面是使用外挂标签来实现的，书写格式如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这里面每个galleryGroup中设置的内容如下：</p><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：链接到对应相册地址</li><li>img-url：图库封面地址</li></ul><p>如下所示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span><br><span class="line">&#123;% galleryGroup <span class="string">&#x27;壁紙&#x27;</span> <span class="string">&#x27;收藏的一些壁纸，侵删&#x27;</span> <span class="string">&#x27;/album/wallpaper&#x27;</span> https:<span class="comment">//www.czblogs.cn/album/wallpaper.jpeg %&#125;</span></span><br><span class="line">&#123;% galleryGroup <span class="string">&#x27;风景&#x27;</span> <span class="string">&#x27;相册是我快乐过的证据&#x27;</span> <span class="string">&#x27;/album/life&#x27;</span> https:<span class="comment">//www.czblogs.cn/album/life.jpeg %&#125;</span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这样设置后，页面就变成了这样</p> <p>图库子页面</p><p>此时，点击任何一个图集，都会重定向到 404 页！这是因为我们还没有创建相应的子页面！这里我以《生活》这个相册为例来创建它的子页面！</p><p>第一步：打开终端，切换到本地 Hexo 博客的根目录下，执行如下命令</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="title class_">page</span> life</span><br></pre></td></tr></table></figure><p>然后会在博客根目录下的&#x2F;source目录下生成名为life的文件夹，并在其中生成一个名为index.md的文件，这个文件就对应着《生活》这个子页面！</p><p>但是此时图库子页面&#x2F;source&#x2F;life&#x2F;index.md跟相册首页&#x2F;source&#x2F;photos&#x2F;index.md是平级的：</p> <p>第二步：将life整个文件夹都移动到album文件夹中：</p> <p>第三步：此时打开&#x2F;source&#x2F;photos&#x2F;life&#x2F;index.md文件，修改如下：</p> <p>第四步：然后在子页面（也就是&#x2F;source&#x2F;photos&#x2F;life&#x2F;index.md）中使用标签外挂挂上自己的照片，写法如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![]()</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>比如我下面这样，填写很多个自己的图片（图片路径需要自己填充）：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/72/wallhaven-72yzje.jpg)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/l8/wallhaven-l8v3ey.png)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/1p/wallhaven-1poo61.jpg)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/kx/wallhaven-kxj3l1.jpg)</span></span><br><span class="line">![](https:<span class="comment">//w.wallhaven.cc/full/jx/wallhaven-jxl31y.png)</span></span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure>  <h1 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h1><p>具体实现可参考：<a href="https://fe32.top/articles/hexo1611/">https://fe32.top/articles/hexo1611/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> 主题 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0到-1搭建个人博客</title>
      <link href="/2024/03/19/%E4%BB%8E0%E5%88%B0-1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/03/19/%E4%BB%8E0%E5%88%B0-1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用Hexo和GitHub搭建博客的原理主要涉及静态网站生成与托管两个核心环节：</p><p>首先，Hexo是一个基于Node.js的静态博客框架。它的工作原理是解析使用Markdown（或其他渲染引擎）编写的文章，并利用主题模板生成静态网页。这意味着，当使用Hexo创建博客时，其实是在本地编写和预览博客的内容。Hexo的优势在于其快速、简洁且高效，使创作者无需关注太多技术细节。</p><p>然后，生成的静态网页需要托管到网络上以供他人访问。GitHub Pages是一个很好的选择，它是一个允许用户在其GitHub仓库上托管静态网页的服务。通过将Hexo生成的静态网页推送到GitHub仓库，并利用GitHub Pages的设置功能，就可以将博客发布到互联网上。</p><p>因此，使用Hexo+GitHub搭建博客的原理就是：利用Hexo生成静态网页，然后将这些网页托管到GitHub Pages上，从而实现博客的在线发布和访问。</p><p>具体来说，搭建过程主要包括以下几个步骤：</p><ol><li>安装Git和Node.js，这是使用Hexo和GitHub的前提。</li><li>安装Hexo，并初始化博客项目。</li><li>在GitHub上创建个人仓库，用于存放博客的源代码和静态网页。</li><li>将Hexo生成的静态网页推送到GitHub仓库。</li><li>在GitHub仓库中设置GitHub Pages，选择正确的分支和目录，以便正确托管静态网页。</li><li>更改Hexo的主题，以定制博客外观。</li><li>设置个人域名（可选），以便使用自定义域名访问博客。</li><li>开始使用Hexo编写和发布文章，每次发布新文章时，只需运行Hexo的生成命令，然后将生成的静态网页推送到GitHub即可。</li></ol><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h2><p>前往github官网进行账号注册。（若已有账号，此步骤可忽略）</p><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">https://www.github.com/    </span><br></pre></td></tr></table></figure><p>注册之后，要记住邮箱和用户名，这块在后面会用到。</p><h2 id="安装NodeJS"><a href="#安装NodeJS" class="headerlink" title="安装NodeJS"></a>安装NodeJS</h2><p>Hexo是基于NodeJS的静态框架博客，所以，如果要安装Hexo，前提条件是要有NodeJS的环境。<br>进入NodeJS官网，下载对应的版本。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709927.png" alt="image-20240409170903874">  </p><p>如果是windows，安装的时候建议无脑下一步就行，如果 C 盘不吃紧的话，然后勾选所有组件，并勾选 Add to Path 将其添加到系统环境变量。</p><p>如果是Linux，可以参考这篇文章：</p><p><a href="https://blog.csdn.net/qq_41974199/article/details/119328353">https://blog.csdn.net/qq_41974199/article/details/119328353</a></p><p>安装Node.js 会包含环境变量以及 npm 的安装，安装后，可以在命令行输入如下命令检测是否安装成功：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v   //显示 nodejs 的版本号。</span><br><span class="line">npm -v    //显示 npm 的版本号</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709361.png" alt="image-20240409170920334">  </p><p>【注】这块推荐使用14以上的nodeJS版本，之前用的v10的版本，会报错。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p><a href="https://git-scm.com/">https://git-scm.com/</a></p><p>若为windows，需要安装Git bash，所有安装建议都无脑下一步即可。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709228.png" alt="image-20240409170930145">  </p><p>若为Linux，直接命令行在线安装即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709444.png" alt="image-20240409170945400">  </p><h2 id="设置用户名和邮箱"><a href="#设置用户名和邮箱" class="headerlink" title="设置用户名和邮箱"></a>设置用户名和邮箱</h2><p>因为 Git 是分布式版本控制系统，所以需要设置用户名和邮箱作为一个标识，在命令行输入如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;user_name&quot;</span> <span class="comment"># user_name 填入 GitHub 用户名</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;user_email&quot;</span> <span class="comment"># user_email 填入 GitHub 注册的邮箱</span></span><br></pre></td></tr></table></figure><p>此处全局设置用户名和邮箱后，将作为本地和github同步的 **[UserName]**。</p><h2 id="搭建github仓库"><a href="#搭建github仓库" class="headerlink" title="搭建github仓库"></a>搭建github仓库</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>登录github官网后，点击 “New repository”，创建一个名字为username.github.io（这里的 username 要替换成自己的实际的用户名） 的仓库。</p><p>比如，之前设置的用户名为 “muhe”，则这块创建的仓库名字为 muhe.github.io</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091709357.png" alt="image-20240409170957327">  </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710821.png" alt="image-20240409171006790">  </p><h3 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h3><p>使用git，输入如下命令，生成一对公私钥</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;user.email&quot;</span> # user.email 为GitHub 上注册的邮箱</span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码。查看是否已经有 ssh 密钥。打开用户目录 &#x2F;root&#x2F;.ssh</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710435.png" alt="image-20240409171016406"> </p><p>然后找到生成的 .ssh 的文件夹中的 id_rsa.pub 密钥，将内容全部复制。</p><p>其中 id_rsa 是私钥不能泄露，id_rsa.pub 是公钥可以放心告诉他人。</p><p>打开<a href="https://github.com/settings/ssh/new">GitHub SSH and GPG keys</a> 页面，新建一个 ssh key：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710250.png" alt="image-20240409171031214">  </p><p>Title 为标题，任意填即可，将刚刚复制的 id_rsa.pub 内容粘贴进去，最后点击 Add SSH key。在 Git Bash 中检测 GitHub 公钥设置是否成功，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>验证是否可以连接成功，若连接成功的话，显示如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710942.png" alt="image-20240409171040917">  </p><p>这一步骤，相当于生成了本地和github仓库的 <strong>[Password]</strong></p><h1 id="使用Hexo博客框架"><a href="#使用Hexo博客框架" class="headerlink" title="使用Hexo博客框架"></a>使用Hexo博客框架</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Hexo 是一个简单、快速、强大的基于 Github Pages 的博客框架，支持 Markdown 格式。</p><p>集成了众多优秀插件和主题。</p><p>由于 Github Pages 存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以 Hexo 所做的就是将这些 md 文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到 GitHub 。</p><h2 id="安装与初始化"><a href="#安装与初始化" class="headerlink" title="安装与初始化"></a>安装与初始化</h2><p>输入如下命令进行安装：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli # 此命令完成对 hexo 的安装</span><br></pre></td></tr></table></figure><p>安装完成后，在电脑的某个地方新建一个文件夹（名字可以随便取）专门用于存放博客代码，比如我的是 &#x2F;root&#x2F;blog，由于这个文件夹将来存放博客的所有内容和素材，以及所有的博客操作都会在其中完成，所以最好不要随便放。</p><p>进入上面新建的目录，输入如下命令进行初始化</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo init # 该命令完成 hexo 在本地博客目录的初始化</span><br></pre></td></tr></table></figure><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><p>输入如下命令，生成所需的静态文件：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo g # 生成静态文件</span><br></pre></td></tr></table></figure><p>执行以上命令后，Hexo 就会在 public 文件夹中生成相关的 html 文件，这些文件将来都是要提交到 GitHub 上的 username.github.io 的仓库中去的。</p><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo s # 开启本地预览</span><br></pre></td></tr></table></figure><p>hexo s 是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，Ctrl+C 停止本地预览。本地预览可以实时查看博客的编辑情况，待博客写完后一起部署到 GitHub 上。</p><p>第一次初始化的时候 hexo 已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091710615.png" alt="image-20240409171052488">  </p><h1 id="上传到GitHub"><a href="#上传到GitHub" class="headerlink" title="上传到GitHub"></a>上传到GitHub</h1><h2 id="设置站点配置文件"><a href="#设置站点配置文件" class="headerlink" title="设置站点配置文件"></a>设置站点配置文件</h2><p>hexo 有 2 种 _config.yml 文件，一个是根目录下的全局的 _config.yml，一个是各个主体 theme 下的 _config.yml。将前者称为站点配置文件， 后者称为主题配置文件。</p><p>打开根目录下站点配置文件 _config.yml，配置有关 deploy 的部分：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:<span class="comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git<span class="meta">@github</span>.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这块在动配置文件的时候，需要主要变量和值之前是要用空格来进行分隔的。</p><p>如 “type:git”，会报错；但使用”type: git”，不会报错。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>输入如下命令，安装部署插件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save # 安装部署插件</span><br></pre></td></tr></table></figure><p>若并进行上述操作，直接部署的时候，会报错。</p><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><p>输入如下命令，将本地的文件+资源等上传到github</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>部署成功后，打开对应的网址  <a href="https://www.username.github.io/">https://www.username.github.io</a></p><p>如果出现了和本地预览一样的效果，那么，表明部署成功。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711823.png" alt="image-20240409171102708"> </p><h1 id="网站基本信息的修改"><a href="#网站基本信息的修改" class="headerlink" title="网站基本信息的修改"></a><strong>网站基本信息的修改</strong></h1><p>搭建好网站之后，有许多配置信息需要我们去修改，比如网站的标题、标签等选项，具体修改步骤如下：</p><p>打开博客目录下的_config.yml文件，找到如图所示的选项</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711765.png" alt="image-20240409171116734"> </p><table><thead><tr><th><strong>参数</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>title</td><td>网站的标题</td></tr><tr><td>subtitle</td><td>网站的副标题</td></tr><tr><td>description</td><td>对于网站的描述，主要用于SEO</td></tr><tr><td>keywords</td><td>网站的关键词，支持多个关键词</td></tr><tr><td>author</td><td>作者名</td></tr><tr><td>language</td><td>网站使用的语言，对于简体中文用户来说，语言的设置跟使用不同的主题有关，可以参考各自主题的文档自行配置，一般为zh-CN</td></tr><tr><td>timezone</td><td>设置网站的时区，如果不填则默认使用你电脑的时区</td></tr></tbody></table><p>ps：更多的配置信息修改可以去hexo的官方文档，<a href="https://hexo.io/zh-cn/docs/configuration.html">戳我跳转</a>，可以修改一个选项之后，执行hexo clean、hexo g、hexo s在本地看一下效果，等全部修改好之后再推送到仓库。</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711978.png" alt="image-20240409171129884"> </p><h1 id="更换Hexo主题"><a href="#更换Hexo主题" class="headerlink" title="更换Hexo主题"></a>更换Hexo主题</h1><p>hexo默认的主题有点ugly，修改好基本配置信息之后，可以考虑换一个主题，主题多可以说的上是hexo框架的一大卖点，<a href="https://hexo.io/themes/">戳我去挑选主题</a>，界面如下：</p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711010.png" alt="image-20240409171137932"> </p><p>下面推荐几种看起来不错的主题：</p><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><ul><li><a href="https://github.com/theme-next/hexo-theme-next">仓库地址</a></li><li><a href="https://theme-next.js.org/">预览地址</a></li><li>首先就是大名鼎鼎的Next主题了，页面简洁，功能全，用的人多，网上的个性化配置教程也超级多，用这个主题如果遇到问题，在网上基本上能找到对应的解决办法。</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711015.png" alt="image-20240409171147964"> </p><h2 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h2><ul><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">仓库地址</a></li><li><a href="https://butterfly.js.org/">预览地址</a></li><li>挺好看的一个主题，用的人也挺多的：</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091711188.png" alt="image-20240409171156067"> </p><h2 id="Nexmoe"><a href="#Nexmoe" class="headerlink" title="Nexmoe"></a>Nexmoe</h2><ul><li><a href="https://github.com/theme-nexmoe/hexo-theme-nexmoe">仓库地址</a></li><li><a href="https://nexmoe.com/">预览地址</a>)</li><li>看起来不错~~</li></ul><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091712812.png" alt="image-20240409171235695"> </p><h2 id="……"><a href="#……" class="headerlink" title="……"></a>……</h2><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><p>这块个人比较喜欢的一款主题<strong>Metery</strong>，部署过程如下：</p><p>Hexo的所有主题源代码都是托管在Github的，更换主题第一步：<strong>将该主题的源代码clone下来，放到本地Hexo站点根目录下的<strong><strong>themes</strong></strong>文件夹中</strong>。</p><p>访问Metery主题的Github仓库,复制仓库地址：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091712700.png" alt="image-20240409171247643"> </p><p>然后在本地<strong>站点根目录</strong>打开git bash 命令行，进入themes文件夹，开始拉取代码到本地：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd themes</span><br><span class="line">git clone https:<span class="comment">//github.com/blinkfox/hexo-theme-matery.git</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091712160.png" alt="image-20240409171256135"> </p><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091713557.png" alt="image-20240409171302526">  </p><p>更换主题</p><p>下载Hexo的主题到&#x2F;themes文件夹之后，要在<strong>站点配置文件</strong>中配置使用该主题：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vim config.yml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091713874.png" alt="image-20240409171309848">  </p><p>hexo一键三连后，查看效果</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jingweihang/img/raw/master/hexo/202404091713074.png" alt="image-20240409171347929"> </p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
